var searchIndex = JSON.parse('{\
"dslab_compute":{"doc":"","t":"AADDDDDDDDDENDDDENNNNLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMDDDDDENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMM","n":["multicore","singlecore","Allocation","AllocationFailed","AllocationRequest","AllocationSuccess","CompFailed","CompFinished","CompRequest","CompStarted","Compute","CoresDependency","Custom","DeallocationFailed","DeallocationRequest","DeallocationSuccess","FailReason","Linear","LinearWithFixed","NotEnoughResources","Other","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocate","allocation","allocation","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cores","cores","cores_available","cores_dependency","cores_total","deallocate","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","flops","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","id","id","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","max_cores","memory","memory","memory_available","memory_total","min_cores","new","new","on","reason","reason","reason","requester","requester","requester","run","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","speed","speedup","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","fixed_part","func","available_cores","available_memory","reason","requested_cores","requested_memory","CompFailed","CompFinished","CompRequest","CompStarted","Compute","FailReason","NotEnoughResources","Other","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","flops","fmt","from","from","from","from","from","from","id","id","id","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","memory","new","on","reason","requester","run","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","available_memory","reason"],"q":[[0,"dslab_compute"],[2,"dslab_compute::multicore"],[317,"dslab_compute::multicore::CoresDependency"],[319,"dslab_compute::multicore::FailReason"],[324,"dslab_compute::singlecore"],[450,"dslab_compute::singlecore::FailReason"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,8,8,9,9,7,8,9,10,11,12,13,14,15,16,17,18,19,2,14,17,2,7,8,9,10,11,12,13,14,15,16,17,18,19,2,7,8,9,10,11,12,13,14,15,16,17,18,19,2,7,8,9,10,11,12,13,14,15,16,17,18,19,2,7,8,9,10,11,12,13,14,15,16,17,18,19,7,8,9,10,11,12,13,14,15,16,17,18,19,7,8,9,10,11,12,13,14,15,16,17,18,19,7,11,2,10,2,2,7,8,9,10,11,12,13,14,15,16,17,18,19,10,8,9,2,7,8,9,10,11,12,13,14,15,16,17,18,19,11,12,13,15,16,18,19,2,7,8,9,10,11,12,13,14,15,16,17,18,19,2,7,8,9,10,11,12,13,14,15,16,17,18,19,7,8,9,10,11,12,13,14,15,16,17,18,19,2,7,8,9,10,11,12,13,14,15,16,17,18,19,10,7,10,2,2,10,2,7,2,13,16,19,10,14,17,2,7,8,9,10,11,12,13,14,15,16,17,18,19,2,8,7,8,9,10,11,12,13,14,15,16,17,18,19,2,7,8,9,10,11,12,13,14,15,16,17,18,19,2,7,8,9,10,11,12,13,14,15,16,17,18,19,2,7,8,9,10,11,12,13,14,15,16,17,18,19,2,7,8,9,10,11,12,13,14,15,16,17,18,19,41,42,43,43,44,43,43,0,0,0,0,0,0,35,35,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,35,36,37,38,39,35,36,37,38,39,35,36,37,38,39,36,35,40,35,36,37,38,39,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,35,36,37,38,39,40,35,36,37,38,39,36,40,40,39,36,40,35,36,37,38,39,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,45,46],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[2,3,4,5],4],0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[2,3],0,[2,3],[[2,3,4,5],4],[20,[[23,[21,22]]]],[20,[[23,[21,22]]]],[20,[[23,[21,22]]]],[20,[[23,[21,22]]]],[20,[[23,[21,22]]]],[20,[[23,[21,22]]]],[20,[[23,[21,22]]]],[20,[[23,[21,22]]]],[20,[[23,[21,22]]]],[20,[[23,[21,22]]]],[20,[[23,[21,22]]]],[20,[[23,[21,22]]]],[20,[[23,[21,22]]]],0,[[8,24],25],[[9,24],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[27,[26]]],[[27,[6,26]]]],[[[27,[26]]],[[27,[6,26]]]],[[[27,[26]]],[[27,[6,26]]]],[[[27,[26]]],[[27,[6,26]]]],[[[27,[26]]],[[27,[6,26]]]],[[[27,[26]]],[[27,[6,26]]]],[[[27,[26]]],[[27,[6,26]]]],[[[27,[26]]],[[27,[6,26]]]],[[[27,[26]]],[[27,[6,26]]]],[[[27,[26]]],[[27,[6,26]]]],[[[27,[26]]],[[27,[6,26]]]],[[[27,[26]]],[[27,[6,26]]]],[[[27,[26]]],[[27,[6,26]]]],[[[27,[26]]],[[27,[6,26]]]],[28,[[28,[6]]]],[28,[[28,[6]]]],[28,[[28,[6]]]],[28,[[28,[6]]]],[28,[[28,[6]]]],[28,[[28,[6]]]],[28,[[28,[6]]]],[28,[[28,[6]]]],[28,[[28,[6]]]],[28,[[28,[6]]]],[28,[[28,[6]]]],[28,[[28,[6]]]],[28,[[28,[6]]]],[29,[[29,[6]]]],[29,[[29,[6]]]],[29,[[29,[6]]]],[29,[[29,[6]]]],[29,[[29,[6]]]],[29,[[29,[6]]]],[29,[[29,[6]]]],[29,[[29,[6]]]],[29,[[29,[6]]]],[29,[[29,[6]]]],[29,[[29,[6]]]],[29,[[29,[6]]]],[29,[[29,[6]]]],[29,[[29,[6]]]],0,0,0,[2,4],[2,4],0,[[30,3,4,31],2],[[3,4],7],[[2,32]],0,0,0,0,0,0,[[2,30,4,3,3,8,5],4],[[7,33],23],[[8,33],23],[[9,33],23],[[10,33],23],[[11,33],23],[[12,33],23],[[13,33],23],[[14,33],23],[[15,33],23],[[16,33],23],[[17,33],23],[[18,33],23],[[19,33],23],[2,30],[[8,3],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,35],[36,36],[37,37],[38,38],[39,39],[[]],[[]],[[]],[[]],[[]],[20,[[23,[21,22]]]],[20,[[23,[21,22]]]],[20,[[23,[21,22]]]],[20,[[23,[21,22]]]],[20,[[23,[21,22]]]],0,[[35,24],25],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[27,[26]]],[[27,[6,26]]]],[[[27,[26]]],[[27,[6,26]]]],[[[27,[26]]],[[27,[6,26]]]],[[[27,[26]]],[[27,[6,26]]]],[[[27,[26]]],[[27,[6,26]]]],[[[27,[26]]],[[27,[6,26]]]],[28,[[28,[6]]]],[28,[[28,[6]]]],[28,[[28,[6]]]],[28,[[28,[6]]]],[28,[[28,[6]]]],[29,[[29,[6]]]],[29,[[29,[6]]]],[29,[[29,[6]]]],[29,[[29,[6]]]],[29,[[29,[6]]]],[29,[[29,[6]]]],0,[[30,4,31],40],[[40,32]],0,0,[[40,30,4,5],4],[[35,33],23],[[36,33],23],[[37,33],23],[[38,33],23],[[39,33],23],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[]],[[]],[[]],[[]],[[]],[[]],0,0],"c":[],"p":[[3,"Private"],[3,"Compute"],[15,"u32"],[15,"u64"],[6,"Id"],[8,"Any"],[3,"Allocation"],[4,"CoresDependency"],[4,"FailReason"],[3,"CompRequest"],[3,"CompStarted"],[3,"CompFinished"],[3,"CompFailed"],[3,"AllocationRequest"],[3,"AllocationSuccess"],[3,"AllocationFailed"],[3,"DeallocationRequest"],[3,"DeallocationSuccess"],[3,"DeallocationFailed"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[15,"f64"],[3,"SimulationContext"],[3,"Event"],[8,"Serializer"],[3,"TypeId"],[4,"FailReason"],[3,"CompRequest"],[3,"CompStarted"],[3,"CompFinished"],[3,"CompFailed"],[3,"Compute"],[13,"LinearWithFixed"],[13,"Custom"],[13,"NotEnoughResources"],[13,"Other"],[13,"NotEnoughResources"],[13,"Other"]]},\
"dslab_core":{"doc":"DSLab Simulation Core","t":"RCCCCCOCAAAAAOOOOOAGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIGLLLLLLLLMLLLLMLLLLMLLLLLLLLLMMLLLLLIKFFDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["EPSILON","Event","EventHandler","Id","Simulation","SimulationContext","cast","colored","component","context","event","handler","log","log_debug","log_error","log_info","log_trace","log_warn","simulation","Id","SimulationContext","as_any","as_any_mut","borrow","borrow_mut","can_emit_ordered","cancel_event","cancel_events","cancel_heap_events","emit","emit_as","emit_now","emit_ordered","emit_ordered_as","emit_ordered_now","emit_ordered_self","emit_ordered_self_now","emit_self","emit_self_now","from","gen_range","id","into","into_any","into_any_rc","lookup_name","name","rand","random_string","sample_from_distribution","time","try_from","try_into","type_id","vzip","Event","EventData","EventId","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","cmp","data","downcast","downcast_mut","downcast_rc","downcast_ref","dst","eq","equivalent","equivalent","from","id","into","into_any","into_any_rc","is","partial_cmp","serialize","serialize","serialize","serialize","src","time","to_owned","try_from","try_into","type_id","vzip","EventHandler","on","get_colored","log_unhandled_event","Simulation","add_handler","as_any","as_any_mut","borrow","borrow_mut","cancel_and_get_events","cancel_events","create_context","dump_events","event_count","from","gen_range","into","into_any","into_any_rc","lookup_id","lookup_name","new","rand","random_string","remove_handler","sample_from_distribution","step","step_for_duration","step_until_no_events","step_until_time","steps","time","try_from","try_into","type_id","vzip"],"q":[[0,"dslab_core"],[19,"dslab_core::component"],[20,"dslab_core::context"],[55,"dslab_core::event"],[93,"dslab_core::handler"],[95,"dslab_core::log"],[97,"dslab_core::simulation"]],"d":["Epsilon to compare floating point values for equality.","","","","","","Enables the use of pattern matching syntax for processing …","","Simulation components.","Accessing simulation from components.","Simulation events.","Event handling.","Logging facilities.","Logs a message at the debug level.","Logs a message at the error level.","Logs a message at the info level.","Logs a message at the trace level.","Logs a message at the warn level.","Simulation configuration and execution.","Identifier of simulation component.","A facade for accessing the simulation state and producing …","","","","","Checks whether it is safe to emit an ordered event with …","Cancels the specified event.","Cancels events that satisfy the given predicate function.","Same as <code>Self::cancel_events</code>, but ignores events added …","Creates new event with specified payload, destination and …","Creates new event with specified payload, source, …","Creates new immediate (zero-delay) event with specified …","This and all other <code>emit_ordered...</code> functions are special …","See <code>Self::emit_ordered</code>.","See <code>Self::emit_ordered</code>.","See <code>Self::emit_ordered</code>.","See <code>Self::emit_ordered</code>.","Creates new event for itself with specified payload and …","Creates new immediate event for itself with specified …","Returns the argument unchanged.","Returns a random number in the specified range using the …","Returns the identifier of component associated with this …","Calls <code>U::from(self)</code>.","","","Returns component name by its identifier.","Returns the name of component associated with this context.","Returns a random float in the range <em>[0, 1)</em> using the …","Returns a random alphanumeric string of specified length …","Returns a random value from the specified distribution …","Returns the current simulation time.","","","","","Representation of event.","Trait that should be implemented by event payload.","Event identifier.","","","","","","","","","Event payload.","Returns a boxed object from a boxed trait object if the …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Identifier of event destination.","","","","Returns the argument unchanged.","Unique event identifier.","Calls <code>U::from(self)</code>.","","","Returns true if the trait object wraps an object of type …","","","","","","Identifier of event source.","Time of event occurrence.","","","","","","Trait for consuming events in simulation components.","Processes event.","Applies the color to the string if stderr (log) goes to …","Logs an unhandled event.","Represents a simulation, provides methods for its …","Registers the event handler implementation for component …","","","","","Cancels events that satisfy the given predicate function …","Cancels events that satisfy the given predicate function.","Creates a new simulation context with specified name.","Returns a copy of pending events sorted by time.","Returns the total number of created events.","Returns the argument unchanged.","Returns a random number in the specified range using the …","Calls <code>U::from(self)</code>.","","","Returns the identifier of component by its name.","Returns the name of component by its identifier.","Creates a new simulation with specified random seed.","Returns a random float in the range <em>[0, 1)</em> using the …","Returns a random alphanumeric string of specified length …","Removes the event handler for component with specified …","Returns a random value from the specified distribution …","Performs a single step through the simulation.","Steps through the simulation with duration limit.","Steps through the simulation until there are no pending …","Steps through the simulation until the specified time.","Performs the specified number of steps through the …","Returns the current simulation time.","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,21,21,21,21,21,21,21,21,21,7,7,7,7,21,21,21,21,21,21,21,21,21,7,21,7,7,7,7,21,21,21,21,21,21,21,0,29,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[2,3],4],[[2,5]],[[2,6]],[[2,6]],[[2,7,8,3],5],[[2,7,8,8,3],5],[[2,7,8],5],[[2,7,8,3],5],[[2,7,8,8,3],5],[[2,7,8],5],[[2,7,3],5],[[2,7],5],[[2,7,3],5],[[2,7],5],[[]],[[2,[10,[9]]],9],[2,8],[[]],[[[12,[11]]],[[12,[1,11]]]],[13,[[13,[1]]]],[[2,8],14],[2,15],[2,3],[[2,16],14],[[2,17]],[2,3],[[],18],[[],18],[[],19],[[]],0,0,0,[20],[[],1],[[],1],[[]],[[]],[21,21],[[]],[[21,21],22],0,[[[12,[7]]],[[18,[[12,[7]],[12,[7]]]]]],[7,[[23,[7]]]],[[[13,[7]]],[[18,[[13,[7]],[13,[7]]]]]],[7,[[23,[7]]]],0,[[21,21],4],[[],4],[[],4],[[]],0,[[]],[[[12,[11]]],[[12,[1,11]]]],[13,[[13,[1]]]],[7,4],[[21,21],[[23,[22]]]],[[7,24],18],[[7,24],18],[[7,24],18],[[7,24],18],0,0,[[]],[[],18],[[],18],[[],19],[[]],0,[21],[[15,25],26],[21],0,[[27,[28,[15]],[13,[[30,[29]]]]],8],[[],1],[[],1],[[]],[[]],[[27,6],[[31,[21]]]],[[27,6]],[[27,[28,[15]]],2],[27,[[31,[21]]]],[27,32],[[]],[[27,[10,[9]]],9],[[]],[[[12,[11]]],[[12,[1,11]]]],[13,[[13,[1]]]],[[27,15],8],[[27,8],14],[32,27],[27,3],[[27,16],14],[[27,[28,[15]]]],[[27,17]],[27,4],[[27,3],4],[27],[[27,3],4],[[27,32],4],[27,3],[[],18],[[],18],[[],19],[[]]],"c":[],"p":[[8,"Any"],[3,"SimulationContext"],[15,"f64"],[15,"bool"],[6,"EventId"],[8,"Fn"],[8,"EventData"],[6,"Id"],[8,"SampleUniform"],[8,"SampleRange"],[3,"Global"],[3,"Box"],[3,"Rc"],[3,"String"],[15,"str"],[15,"usize"],[8,"Distribution"],[4,"Result"],[3,"TypeId"],[3,"Private"],[3,"Event"],[4,"Ordering"],[4,"Option"],[8,"Serializer"],[4,"Color"],[3,"ColoredString"],[3,"Simulation"],[8,"AsRef"],[8,"EventHandler"],[3,"RefCell"],[3,"Vec"],[15,"u64"]]},\
"dslab_dag":{"doc":"DSLab DAG","t":"AAAAAAAAAAAAAAAADLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLMLLLLLLLLDDDLLLLLLLLLMMMLLLLLLLLLLLLMMMLLLLLLLLLLMLLLLLLLLLLLLMMMMMMMMMMLMMMLLLMMMMMMMMLLLMMMLLLLLLLLLLLLMDEEENNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLLLLLLDDLLLLLLLLMMLLMLLLLLLLLLLLLMLLMMLMLLLLLLLLFNNENNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLMMMMMMMADDDLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLDDLLLLLLLLLLLLLLMMMMLLLLLMLLLLLLLMMMMMFLMMLLLLLLLLLLDLLLLLLLLMMMLLLMLLLLLLLMMMMMMMLMLLLLLLLMMMLLLMLDDDLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEGNNIDDNLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLLLLLLLLLLLLMMMMMMMMMMMAAAAAAAADLLLLLFLLLLLLLLLFMLLLLLLLLMMFLFLLLLDLLLLLLLLLLLLLLLLLLLNNNNEDNNNNNNNDDNNNNNNNNNNNNNNNNEDNEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLENNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLMMLLLLLNNNNNENNNDEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMMMLLLLMMLMLLLLLLLLLLLLLLLLLLLLDENDDNDNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLMMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLMMLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMM","n":["dag","dag_simulation","dag_stats","data_item","experiment","lower_bound","network","parsers","resource","run_stats","runner","scheduler","schedulers","system","task","trace_log","DAG","__clone_box","add_data_dependency","add_data_item","add_task","add_task_output","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","from","from_dax","from_dot","from_file","from_wfcommons","from_yaml","get_data_item","get_data_items","get_inputs","get_outputs","get_ready_tasks","get_task","get_task_mut","get_tasks","into","into_any","into_any_arc","into_any_rc","is_completed","new","set_resource_restriction","stats","to_owned","try_from","try_into","type_id","update_data_item_state","update_task_state","vzip","DagSimulation","add_resource","as_any","as_any_mut","borrow","borrow_mut","event_count","from","init","into","into_any","into_any_rc","new","sim","step_for_duration","step_until_no_events","steps","time","try_from","try_into","type_id","vzip","DagStats","LevelProfile","SequenceStats","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","avg","avg_predecessors","avg_successors","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","comp_transfers_ratio","critical_path_size","depth","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from_iter","input_data_size","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","level","level_profiles","max","max_cores_per_task","max_input_size","max_output_size","max_parallelism","min","min_max_input_size","min_max_output_size","new","output_data_size","parallelism_degree","predecessor_count","serialize","serialize","serialize","std","successor_count","sum","task_comp_size","task_count","task_count","task_input_size","task_output_size","to_owned","to_owned","to_owned","total_comp_size","total_data_size","total_transfers_size","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","width","DataItem","DataItemState","DataTransferMode","DataTransferStrategy","Direct","Eager","Lazy","Manual","Pending","Ready","ViaMasterNode","__clone_box","__clone_box","__clone_box","add_consumer","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from","from","from_str","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","name","net_time","new","producer","size","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Experiment","RunResult","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","completed","dag","deserialize","erased_serialize","exec_time","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","load","makespan","new","run","run_stats","scheduler","serialize","system","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","makespan_lower_bound","ConstantBandwidth","FullMesh","NetworkConfig","SharedBandwidth","Star","TopologyAware","TopologyType","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","constant","deserialize","deserialize","erased_serialize","erased_serialize","fmt","fmt","from","from","init_network","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","make_network","read_network_config","serialize","serialize","shared","to_owned","to_owned","topology","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","bandwidth","bandwidth","latency","latency","link_bandwidth","link_latency","topology_type","config","GenerateCoresOptions","GenerateMemoryOptions","ParserConfig","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","deserialize","deserialize","deserialize","fmt","fmt","fmt","from","from","from","generate_cores","generate_memory","ignore_memory","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","max","max","min","min","reference_speed","regular","regular","seed","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_reference_speed","Resource","ResourceConfig","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compute","cores","cores","cores_available","deserialize","erased_serialize","fmt","from","from","id","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","memory","memory","memory_available","name","name","read_resource_configs","serialize","speed","speed","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","RunStats","__clone_box","add_scheduling_time","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","cpu_utilization","cpu_utilization_active","cpu_utilization_used","default","deserialize","erased_serialize","expected_makespan","finalize","fmt","from","into","into_any","into_any_arc","into_any_rc","max_cpu_utilization","max_memory_utilization","max_used_cores","max_used_memory","memory_utilization","memory_utilization_active","memory_utilization_used","new","scheduling_time","serialize","set_expected_makespan","set_task_finish","set_task_start","set_transfer_finish","set_transfer_start","to_owned","total_network_time","total_network_traffic","total_task_time","try_from","try_into","type_id","used_resource_count","vzip","Config","DAGRunner","Start","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","data_transfer_mode","enable_trace_log","erased_serialize","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_completed","makespan_lower_bound","new","on","run_stats","serialize","start","to_owned","to_owned","trace_log","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_completed","vzip","vzip","vzip","Action","RcScheduler","ScheduleTask","ScheduleTaskOnCores","Scheduler","SchedulerParams","TimeSpan","TransferData","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default_scheduler_resolver","finish","fmt","fmt","fmt","fmt","from","from","from","from_str","get","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_static","length","name","new","on_task_state_changed","start","start","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","cores","cores","data_item","expected_span","expected_span","from","resource","resource","task","task","to","common","dls","dynamic_list","heft","lookahead","peft","simple_scheduler","simple_with_data","ScheduledTask","__clone_box","as_any","as_any_mut","borrow","borrow_mut","calc_ranks","clone","clone_into","cmp","compare","eq","equivalent","equivalent","equivalent","equivalent","evaluate_assignment","finish_time","fmt","from","into","into_any","into_any_arc","into_any_rc","new","partial_cmp","start_time","task","task_successors","to_owned","topsort","try_from","try_into","type_id","vzip","DlsScheduler","as_any","as_any_mut","borrow","borrow_mut","default","from","from_params","into","into_any","into_any_arc","into_any_rc","is_static","new","start","try_from","try_into","type_id","vzip","with_data_transfer_strategy","BottomLevel","ChildrenCount","CompSize","Cores","CoresCriterion","CoresCriterionIter","CoresFlops","CoresMemoryFlops","CoresMemoryMult","CoresMemorySum","DataSize","DotProduct","DotProductSpeed","DynamicListScheduler","DynamicListStrategy","Efficiency50","Efficiency90","MaxAvailableCores","MaxAvailableMemory","MaxCores","Memory","MemoryFlops","MinAvailableCores","MinAvailableMemory","RankPack0","RankPack025","RankPack05","RankPack075","RankPack1","RankPackMult","RankPackSel","ResourceCriterion","ResourceCriterionIter","Speed","TaskCriterion","TaskCriterionIter","TaskData","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cores_criterion","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_params","from_params","from_str","from_str","from_str","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","is_static","iter","iter","iter","len","len","len","new","next","next","next","next_back","next_back","next_back","nth","nth","nth","on_task_state_changed","resource_criterion","size_hint","size_hint","size_hint","start","strategy","task_criterion","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","HeftScheduler","as_any","as_any_mut","borrow","borrow_mut","default","from","from_params","into","into_any","into_any_arc","into_any_rc","is_static","new","start","try_from","try_into","type_id","vzip","with_data_transfer_strategy","DepthMode","Global","Local","LookaheadScheduler","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","default","from","from","from_params","from_str","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_static","new","start","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_data_transfer_strategy","PeftScheduler","as_any","as_any_mut","borrow","borrow_mut","default","from","from_params","into","into_any","into_any_arc","into_any_rc","is_static","new","start","try_from","try_into","type_id","vzip","with_data_transfer_strategy","with_original_network_estimation","SimpleScheduler","as_any","as_any_mut","borrow","borrow_mut","default","from","into","into_any","into_any_arc","into_any_rc","is_static","new","on_task_state_changed","start","try_from","try_into","type_id","vzip","SimpleDataScheduler","as_any","as_any_mut","borrow","borrow_mut","default","from","into","into_any","into_any_arc","into_any_rc","is_static","new","on_task_state_changed","start","try_from","try_into","type_id","vzip","System","__clone_box","as_any","as_any_mut","avg_flop_time","avg_net_time","borrow","borrow_mut","clone","clone_into","from","into","into_any","into_any_rc","network","resources","to_owned","try_from","try_into","type_id","vzip","Done","Except","Only","Pending","Ready","ResourceRestriction","Runnable","Running","Scheduled","Task","TaskState","TaskStateIter","__clone_box","__clone_box","__clone_box","__clone_box","add_input","add_output","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cores_dependency","eq","equivalent","equivalent","equivalent","equivalent","flops","fmt","fmt","fmt","from","from","from","from","inputs","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_allowed_on","is_allowed_on","iter","len","max_cores","memory","min_cores","name","new","next","next_back","nth","outputs","resource_restriction","size_hint","state","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","DataItem","Event","FinishUploading","Graph","Resource","StartUploading","Task","TaskCompleted","TaskScheduled","TaskStarted","TraceLog","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consumers","cores","data_items","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","events","flops","fmt","from","from","from","from","from","from","graph","inputs","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","log_dag","log_event","max_cores","memory","memory","min_cores","name","name","name","new","outputs","resources","save_to_file","serialize","serialize","serialize","serialize","serialize","serialize","size","speed","tasks","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","cores","data_id","data_id","data_item_id","data_name","data_name","from","from","location","memory","task_id","task_id","task_id","task_name","task_name","task_name","time","time","time","time","time","to","to"],"q":[[0,"dslab_dag"],[16,"dslab_dag::dag"],[58,"dslab_dag::dag_simulation"],[80,"dslab_dag::dag_stats"],[177,"dslab_dag::data_item"],[267,"dslab_dag::experiment"],[309,"dslab_dag::lower_bound"],[310,"dslab_dag::network"],[365,"dslab_dag::network::NetworkConfig"],[372,"dslab_dag::parsers"],[373,"dslab_dag::parsers::config"],[434,"dslab_dag::resource"],[486,"dslab_dag::run_stats"],[533,"dslab_dag::runner"],[594,"dslab_dag::scheduler"],[661,"dslab_dag::scheduler::Action"],[672,"dslab_dag::schedulers"],[680,"dslab_dag::schedulers::common"],[715,"dslab_dag::schedulers::dls"],[735,"dslab_dag::schedulers::dynamic_list"],[953,"dslab_dag::schedulers::heft"],[973,"dslab_dag::schedulers::lookahead"],[1010,"dslab_dag::schedulers::peft"],[1031,"dslab_dag::schedulers::simple_scheduler"],[1050,"dslab_dag::schedulers::simple_with_data"],[1069,"dslab_dag::system"],[1090,"dslab_dag::task"],[1200,"dslab_dag::trace_log"],[1362,"dslab_dag::trace_log::Event"]],"d":["DAG model of computation.","Simulation configuration and execution.","","Data item.","Tool for running experiments across many (dag, system. …","","Network model tools.","Tools for loading DAG from different file formats.","Resource model.","","DAG execution runtime.","DAG scheduling.","Scheduler implementations.","Distributed computing system.","DAG task.","DAG execution log.","Represents a computation consisting of multiple tasks with …","","Adds a dependency between data item and task.","Adds data item with provided parameters and returns its id.","Adds new task with provided parameters and returns its id.","Adds data item as a task output and returns its id.","","","","","","","","Returns the argument unchanged.","Reads DAG from a file in DAX format.","Reads DAG from a file in DOT format.","Reads DAG from file in one of supported formats:","Reads DAG from a file in WfCommons json format.","Reads DAG from a file in YAML format.","Returns data item by id.","Returns all data items.","","","Returns ids of ready tasks.","Returns task by id.","Returns mutable task reference by id.","Returns all tasks.","Calls <code>U::from(self)</code>.","","","","Checks whether all tasks are completed.","Creates empty DAG.","","","","","","","Updates data item state to a provided value, updating …","Updates task state to a provided value, updating dependent …","","Provides a convenient API for configuring and running …","Adds a resource with provided parameters.","","","","","Returns the total number of created events.","Returns the argument unchanged.","Initializes DAG simulation.","Calls <code>U::from(self)</code>.","","","Creates simulation with provided random seed, network …","","Steps through the simulation with duration limit.","Steps through the simulation until there are no pending …","Performs the specified number of steps through the …","Returns the current simulation time.","","","","","","","","","","","","","","","","","","Average number of task predecessors.","Average number of task successors.","","","","","","","","","","","","","Computation-to-communication ratio computed as …","Longest path in the DAG measured in sum of flops of tasks …","Number of levels.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Sum of sizes of all DAG input data items (i.e. data items …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Level index.","Stats for each level.","","Max of max_cores among all tasks.","Maximum size of DAG input data item.","Maximum size of DAG output data item.","Maximum number of tasks that can be executed in parallel …","","Minimum of maximum task input size among all entry tasks …","Minimum of maximum task output size among all exit tasks …","","Sum of sizes of all DAG output data items (i.e. data items …","Parallelism degree computed as …","Total number of distinct predecessors.","","","","Standard deviation.","Total number of distinct successors.","","Stats about task sizes.","Total number of tasks.","Total number of tasks.","Stats about task input sizes.","Stats about task output sizes.","","","","Sum of flops of all tasks.","Sum of sizes of all data items.","Sum of sizes of all data transfers (differs from …","","","","","","","","","","","","","Size of the largest level (number of tasks).","Represents a data item produced or consumed by DAG tasks.","Represents a data item state.","Defines how data items are transferred during the DAG …","","Every data item is automatically transferred between …","","","Data items are not transferred automatically, all data …","Not ready, the task producing the data item is not …","The data item is produced and ready to be consumed by the …","Every data item is automatically transferred between …","","","","Adds a task that consumes the data item.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Calculates the data transfer time per data unit between …","Creates new data item.","","The size of data item in MB.","","","","","","","","","","","","","","","","","","","","Represents experiment consisting of multiple simulation …","Contains result of a single simulation run.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Loads experiment from YAML config file.","","Creates new experiment.","Runs experiment and returns its results.","","","","","","","","","","","","","","","","Represents network model parameters.","","","","","","","","","","","","","","","","","","","Creates network config with <code>ConstantBandwidthNetworkModel</code>.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Adds network nodes and links (in case of topology-aware …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Creates network model based on stored parameters.","Reads network model configuration from YAML file.","","","Creates network config with <code>SharedBandwidthNetworkModel</code>.","","","Creates network config with <code>TopologyAwareNetworkModel</code>.","","","","","","","","","Network bandwidth in MB/s.","Network bandwidth in MB/s.","Network latency in μs.","Network latency in μs.","Links bandwidth in MB/s.","Links latency in μs.","","","","","Common settings for DAG parsers.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Options for generating cores requirements for tasks.","Options for generating memory requirements for tasks.","Whether to ignore the task memory requirement (if present) …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Maximum cores value.","Maximum memory value.","Minimum cores value.","Minimum memory value.","Reference machine speed in Gflop/s (default: 10).","Whether to use the same value for all tasks of the same …","Whether to use the same value for all tasks of the same …","Random seed for cores and memory generation.","","","","","","","","","","","","","","Represents a computing resource that can execute DAG tasks.","Contains parameters of computing resource, can be used …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Memory size in MB.","Memory size in MB.","","","","Reads resource configurations from YAML file.","","CPU speed in Gflop/s.","CPU speed in Gflop/s.","","","","","","","","","","","Contains metrics collected from a simulation run.","","","","","","","","","Average CPU utilization (the ratio of core-seconds …","Average CPU utilization for active resources only, i.e. …","Average CPU utilization for used resources only, i.e. …","","","","Makespan expected by the scheduling algorithm (for static …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Maximum CPU utilization (max_used_cores / total_cores).","Maximum memory utilization (max_used_memory / …","Maximum number of cores used at once.","Maximum amount of memory used at once.","Average memory utilization (analogous to cpu_utilization).","Average memory utilization for active resources only …","Average memory utilization for used resources only …","","Scheduling algorithm’s execution time (total for all …","","","","","","","","Total time of data transfers over the network (in seconds).","Total amount of data transmitted over the network (in MB).","Total task execution time (in seconds).","","","","The number of used resources, i.e. on which at least one …","","Represents a DAG execution configuration.","Manages the execution of a DAG on a specified set of …","","","","","","","","","","","","","","","","","","","","","Enables or disables trace log.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns true if the DAG execution is completed and false …","Returns makespan lower bound.","","","Returns run stats.","","Starts DAG execution.","","","Returns trace log.","","","","","","","","","","Checks that all DAG tasks are completed.","","","","Represents an action ordered by the scheduler.","","Execute the task on the resource using a given <em>number</em> of …","Execute the task on the resource using a given <em>set</em> of …","Trait for implementing DAG scheduling algorithms.","Contains parsed scheduler params.","","Transfer data item between the specified resources. Action …","","","","","","","","","","","","","","","","Resolves params into one of supported schedulers.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates SchedulerParams from a string in the following …","Returns scheduler parameter by name.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Should be true iff on_task_state_chaged always returns …","","Returns scheduler name.","","Called on every task state change.","Called once in the beginning of DAG execution.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Consider all unscheduled tasks when evaluating task …","Consider only children of the current task when evaluating …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Describes a system as a set of resources and a network.","","","","Returns average time over all resources for executing one …","Returns average time over all pairs of resources for …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Task is completed.","Allows execution on any resource except the given …","Allows execution only on the given resources.","Waiting for its dependencies.","All dependencies are satisfied, ready to be scheduled.","Restricts task execution to some subset of resources.","All dependencies are satisfied and task is scheduled.","Task is running.","Task is scheduled, waiting for its dependencies.","Represents a DAG task.","Represents a DAG task state.","An iterator over the variants of Self","","","","","Adds task input.","Adds task output.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The amount of computations performed by this task in …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Memory demand of this task in MB.","","","Creates new task.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,0,0,23,35,36,23,35,36,23,35,36,35,36,36,23,35,36,23,35,36,23,35,36,23,35,36,23,23,23,23,35,36,23,35,36,23,35,36,35,23,23,35,36,23,35,36,23,35,36,23,35,36,36,23,35,23,23,23,23,35,23,23,23,23,23,36,23,35,36,35,36,35,36,23,36,36,36,23,35,36,23,23,23,23,35,36,23,35,36,23,35,36,23,35,36,23,0,0,0,0,44,46,46,44,26,26,44,26,13,44,13,46,26,13,44,46,26,13,44,46,26,13,44,46,26,13,44,26,13,44,26,13,44,44,26,44,26,26,26,26,44,46,26,13,44,46,46,26,13,44,46,26,13,44,46,26,13,44,46,26,13,44,13,44,13,13,13,26,13,44,46,26,13,44,46,26,13,44,46,26,13,44,46,26,13,44,0,0,51,50,51,50,51,50,51,50,50,50,50,50,50,50,51,50,51,50,51,50,51,50,51,50,51,50,51,51,50,50,50,50,51,50,51,50,51,50,51,50,0,32,55,0,32,55,32,0,55,32,55,32,55,32,55,32,55,32,55,32,55,32,32,55,32,55,32,55,32,55,32,32,55,32,55,32,55,32,55,32,32,0,55,32,32,55,32,32,55,32,55,32,55,32,55,32,95,96,95,96,97,97,97,0,0,0,0,12,59,60,12,59,60,12,59,60,12,59,60,12,12,59,60,12,59,60,12,59,60,12,12,12,12,59,60,12,59,60,12,59,60,12,59,60,59,60,59,60,12,59,60,12,12,59,60,12,59,60,12,59,60,12,59,60,12,0,0,56,31,56,31,56,31,56,31,56,31,56,31,56,31,56,56,31,56,31,31,31,56,31,56,56,31,56,31,31,56,31,56,31,56,56,31,0,31,56,31,56,31,56,31,56,31,56,31,56,31,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,0,0,34,62,29,34,62,29,34,62,29,34,62,29,34,62,34,62,34,62,34,29,62,29,34,62,29,34,62,29,34,62,34,62,29,34,62,29,29,29,29,29,62,29,34,62,29,29,34,62,29,34,62,29,34,62,29,29,34,62,0,0,67,67,0,0,0,67,52,67,66,52,67,66,52,67,66,52,67,66,52,52,52,0,66,67,66,52,52,67,66,52,52,52,67,66,52,67,66,52,67,66,52,67,66,52,33,66,52,66,33,33,66,52,52,67,66,52,67,66,52,67,66,52,67,66,52,98,99,100,98,99,100,98,99,98,99,100,0,0,0,0,0,0,0,0,0,69,69,69,69,69,0,69,69,69,69,69,69,69,69,69,0,69,69,69,69,69,69,69,69,69,69,69,0,69,0,69,69,69,69,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,73,73,73,73,0,0,73,73,73,73,73,75,75,0,0,77,77,75,75,77,73,73,75,75,73,73,73,73,73,73,73,0,0,75,0,0,75,73,74,75,76,77,78,79,81,73,74,75,76,77,78,79,81,73,74,75,76,77,78,79,81,73,74,75,76,77,78,79,81,73,74,75,76,77,78,79,73,74,75,76,77,78,79,73,74,75,76,77,78,79,79,73,75,73,73,75,75,77,77,79,81,73,74,75,76,77,78,79,81,79,73,75,77,81,73,74,75,76,77,78,79,81,73,74,75,76,77,78,79,81,73,74,75,76,77,78,79,81,73,74,75,76,77,78,79,74,76,78,81,73,75,77,74,76,78,81,74,76,78,74,76,78,74,76,78,81,79,74,76,78,81,81,79,73,74,75,76,77,78,79,73,75,77,81,73,73,74,75,75,76,77,77,78,79,81,73,74,75,76,77,78,79,81,73,74,75,76,77,78,79,81,73,74,75,76,77,78,79,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,84,84,0,84,83,84,83,84,83,84,83,83,84,83,83,84,84,83,84,83,84,83,84,83,83,83,83,84,83,84,83,84,83,84,83,83,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,27,22,22,27,27,0,27,27,27,0,0,0,27,88,22,16,16,16,27,88,22,16,27,88,22,16,27,88,22,16,27,88,22,16,27,88,22,16,27,88,22,16,16,27,27,27,27,27,16,27,22,16,27,88,22,16,16,27,88,22,16,27,88,22,16,27,88,22,16,27,88,22,16,88,22,16,27,88,16,16,16,16,16,88,88,88,16,16,88,16,27,88,22,16,27,88,22,16,27,88,22,16,27,88,22,16,27,88,22,16,0,0,89,0,0,89,0,89,89,89,0,89,90,91,92,93,64,89,90,91,92,93,64,89,90,91,92,93,64,89,90,91,92,93,64,89,90,91,92,93,64,89,90,91,92,93,64,89,90,91,92,93,64,92,90,93,90,91,92,93,64,89,90,91,92,93,64,89,90,91,92,93,64,64,91,89,89,90,91,92,93,64,64,91,89,90,91,92,93,64,89,90,91,92,93,64,89,90,91,92,93,64,89,90,91,92,93,64,64,64,91,90,91,91,90,91,92,64,91,64,64,89,90,91,92,93,64,92,90,93,89,89,90,91,92,93,64,89,89,90,91,92,93,64,89,90,91,92,93,64,89,90,91,92,93,64,89,90,91,92,93,64,101,102,103,102,102,103,102,103,101,101,101,104,105,101,104,105,101,104,105,102,103,102,103],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[2,3,3]],[[2,4,5],3],[[2,4,5,6,7,7,8],3],[[2,3,4,5],3],[[],9],[[],9],[[]],[[]],[2,2],[[]],[[],2],[[]],[[[11,[10]],12],2],[[[11,[10]]],2],[[[11,[10]],12],2],[[[11,[10]],12],2],[[[11,[10]],12],2],[[2,3],13],[2,[[14,[13]]]],[2,[[15,[3]]]],[2,[[15,[3]]]],[2,[[15,[3]]]],[[2,3],16],[[2,3],16],[2,[[14,[16]]]],[[]],[[[18,[17]]],[[18,[9,17]]]],[19,[[19,[9]]]],[20,[[20,[9]]]],[2,21],[[],2],[[2,3,22]],[2,23],[[]],[[],24],[[],24],[[],25],[[2,3,26]],[[2,3,27]],[[]],0,[[28,4,5,7,6]],[[],9],[[],9],[[]],[[]],[28,6],[[]],[[28,2],[[20,[[30,[29]]]]]],[[]],[[[18,[17]]],[[18,[9,17]]]],[20,[[20,[9]]]],[[6,[14,[31]],32,[20,[[30,[33]]]],34],28],0,[[28,5]],[28],[[28,6],21],[28,5],[[],24],[[],24],[[],25],[[]],0,0,0,[1],[1],[1],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[23,23],[35,35],[36,36],[[]],[[]],[[]],0,0,0,[37,[[24,[38,39]]]],[37,[[24,[38,39]]]],[37,[[24,[38,39]]]],[[23,40],41],[[35,40],41],[[36,40],41],[[]],[[]],[[]],[42,35],0,[[]],[[]],[[]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],0,0,0,0,0,0,0,0,0,0,[2,23],0,0,0,[[23,43],24],[[35,43],24],[[36,43],24],0,0,0,0,0,0,0,0,[[]],[[]],[[]],0,0,0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[13,3]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,26],[13,13],[44,44],[[]],[[]],[[]],[45,[[24,[44]]]],[[26,26],21],[[44,44],21],[[],21],[[],21],[[],21],[[],21],[[44,40],41],[[]],[[]],[[]],[[]],[4,[[24,[46]]]],[[]],[[]],[[]],[[]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],0,[[44,47,48,48,48],5],[[4,5,26,[49,[3]]],13],0,0,[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],0,0,[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],0,0,[45,[[24,[50]]]],[37,[[24,[38,39]]]],0,[[50,40],41],[[]],[[]],[[]],[[]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[[[11,[10]]],51],0,[[14,14,44,[14,[52]],[49,[53]]],51],[[51,3],[[14,[50]]]],0,0,[[50,43],24],0,[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[]],[[]],[[2,54,48],5],0,0,0,0,0,0,0,[1],[1],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[55,55],[32,32],[[]],[[]],[[5,5],32],[45,[[24,[55]]]],[45,[[24,[32]]]],[37,[[24,[38,39]]]],[37,[[24,[38,39]]]],[[55,40],41],[[32,40],41],[[]],[[]],[[32,[20,[[30,[47]]]],48,[57,[56]]]],[[]],[[]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[[32,58],47],[[[11,[10]]],32],[[55,43],24],[[32,43],24],[[5,5],32],[[]],[[]],[[55,5,5],32],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[45,[[24,[12]]]],[45,[[24,[59]]]],[45,[[24,[60]]]],[[12,40],41],[[59,40],41],[[60,40],41],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],0,0,0,0,0,0,0,0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[]],[[]],[[]],[5,12],0,0,[1],[1],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[56,56],[31,31],[[]],[[]],0,0,0,0,[45,[[24,[31]]]],[37,[[24,[38,39]]]],[[31,40],41],[[]],[[]],0,[[]],[[]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[19,[[19,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],0,0,0,0,0,[[[11,[10]]],[[14,[31]]]],[[31,43],24],0,0,[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[]],[[]],0,[1],[[61,5]],[[],9],[[],9],[[]],[[]],[61,61],[[]],0,0,0,[[],61],[45,[[24,[61]]]],[37,[[24,[38,39]]]],0,[[61,5,54]],[[61,40],41],[[]],[[]],[[[18,[17]]],[[18,[9,17]]]],[19,[[19,[9]]]],[20,[[20,[9]]]],0,0,0,0,0,0,0,[[],61],0,[[61,43],24],[[61,5]],[[61,3,5]],[[61,3,3,7,6,5]],[[61,3,5]],[[61,3,5,5]],[[]],0,0,0,[[],24],[[],24],[[],25],0,[[]],0,0,0,[1],[1],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[34,34],[62,62],[[]],[[]],0,[[29,21]],[37,[[24,[38,39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[29,21],[29,5],[[2,[20,[[30,[47]]]],[14,[56]],[20,[[30,[33]]]],34,58],29],[[29,63]],[29,61],[[62,43],24],[29],[[]],[[]],[29,64],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[29],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[1],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[52,52],[[]],[52,[[49,[65]]]],[66,5],[[67,40],41],[[66,40],41],[[52,40],41],[[52,40],41],[[]],[[]],[[]],[4,[[24,[52]]]],[[52,[11,[4]]],[[49,[68]]]],[[]],[[]],[[]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[[],21],[66,5],[52,4],[[5,5],66],[[3,27,2,54,58],[[14,[67]]]],[[2,54,34,58],[[14,[67]]]],[66,5],[[]],[[],53],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[],9],[[],9],[[]],[[]],[[5,5,2],[[14,[5]]]],[69,69],[[]],[[69,69],70],[[],70],[[69,69],21],[[],21],[[],21],[[],21],[[],21],[[3,3,[57,[5]],[57,[[14,[[15,[69]]]]]],[57,[0]],[71,[3,48]],[71,[3,48]],46,2,[57,[56]],47,34,58],49],0,[[69,40],41],[[]],[[]],[[[18,[17]]],[[18,[9,17]]]],[19,[[19,[9]]]],[20,[[20,[9]]]],[[5,5,3],69],[[69,69],[[49,[70]]]],0,0,[[3,2],14],[[]],[2,[[14,[3]]]],[[],24],[[],24],[[],25],[[]],0,[[],9],[[],9],[[]],[[]],[[],72],[[]],[52,72],[[]],[[[18,[17]]],[[18,[9,17]]]],[19,[[19,[9]]]],[20,[[20,[9]]]],[72,21],[[],72],[[72,2,54,34,58],[[14,[67]]]],[[],24],[[],24],[[],25],[[]],[[72,46],72],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[73,73],21],[[75,75],21],[[73,40],41],[[73,40],[[24,[80]]]],[[75,40],[[24,[80]]]],[[75,40],41],[[77,40],[[24,[80]]]],[[77,40],41],[[79,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[52,81],[52,79],[4,[[24,[73]]]],[4,[[24,[75]]]],[4,[[24,[77]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[[]],[[]],[[]],[81,21],[[],74],[[],76],[[],78],[74,3],[76,3],[78,3],[79,81],[74,49],[76,49],[78,49],[74,49],[76,49],[78,49],[[74,3],49],[[76,3],49],[[78,3],49],[[81,3,27,2,54,58],[[14,[67]]]],0,[74],[76],[78],[[81,2,54,34,58],[[14,[67]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],53],[[],53],[[],53],[[],24],[[],24],[4,[[24,[73]]]],[[],24],[[],24],[4,[[24,[75]]]],[[],24],[[],24],[4,[[24,[77]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],9],[[],9],[[]],[[]],[[],82],[[]],[52,82],[[]],[[[18,[17]]],[[18,[9,17]]]],[19,[[19,[9]]]],[20,[[20,[9]]]],[82,21],[[],82],[[82,2,54,34,58],[[14,[67]]]],[[],24],[[],24],[[],25],[[]],[[82,46],82],0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[],83],[[]],[[]],[52,83],[4,[[24,[84]]]],[[]],[[]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[83,21],[[],83],[[83,2,54,34,58],[[14,[67]]]],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[]],[[]],[[83,46],83],0,[[],9],[[],9],[[]],[[]],[[],85],[[]],[52,85],[[]],[[[18,[17]]],[[18,[9,17]]]],[19,[[19,[9]]]],[20,[[20,[9]]]],[85,21],[[],85],[[85,2,54,34,58],[[14,[67]]]],[[],24],[[],24],[[],25],[[]],[[85,46],85],[85,85],0,[[],9],[[],9],[[]],[[]],[[],86],[[]],[[]],[[[18,[17]]],[[18,[9,17]]]],[19,[[19,[9]]]],[20,[[20,[9]]]],[86,21],[[],86],[[86,3,27,2,54,58],[[14,[67]]]],[[86,2,54,34,58],[[14,[67]]]],[[],24],[[],24],[[],25],[[]],0,[[],9],[[],9],[[]],[[]],[[],87],[[]],[[]],[[[18,[17]]],[[18,[9,17]]]],[19,[[19,[9]]]],[20,[[20,[9]]]],[87,21],[[],87],[[87,3,27,2,54,58],[[14,[67]]]],[[87,2,54,34,58],[[14,[67]]]],[[],24],[[],24],[[],25],[[]],0,[1],[[],9],[[],9],[54,5],[[54,48,44],5],[[]],[[]],[54,54],[[]],[[]],[[]],[[[18,[17]]],[[18,[9,17]]]],[20,[[20,[9]]]],0,0,[[]],[[],24],[[],24],[[],25],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[[16,3]],[[16,3]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,27],[88,88],[22,22],[16,16],[[]],[[]],[[]],[[]],0,[[27,27],21],[[],21],[[],21],[[],21],[[],21],0,[[27,40],41],[[22,40],41],[[16,40],41],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[[]],[[22,3],21],[[16,3],21],[[],88],[88,3],0,0,0,0,[[4,5,6,7,7,8],16],[88,49],[88,49],[[88,3],49],0,0,[88],0,[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[89,89],[90,90],[91,91],[92,92],[93,93],[64,64],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],90],[[],91],[[],92],[[],93],[[],64],[45,[[24,[89]]]],[45,[[24,[90]]]],[45,[[24,[91]]]],[45,[[24,[92]]]],[45,[[24,[93]]]],[45,[[24,[64]]]],[37,[[24,[38,39]]]],[37,[[24,[38,39]]]],[37,[[24,[38,39]]]],[37,[[24,[38,39]]]],[37,[[24,[38,39]]]],[37,[[24,[38,39]]]],0,0,[[89,40],41],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[[[18,[17]]],[[18,[9,17]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[19,[[19,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[20,[[20,[9]]]],[[64,2]],[[64,58,89]],0,0,0,0,0,0,0,[[],64],0,0,[[64,4],[[24,[94]]]],[[89,43],24],[[90,43],24],[[91,43],24],[[92,43],24],[[93,43],24],[[64,43],24],0,0,0,[89,5],[[]],[[]],[[]],[[]],[[]],[[]],[89,53],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"Private"],[3,"DAG"],[15,"usize"],[15,"str"],[15,"f64"],[15,"u64"],[15,"u32"],[4,"CoresDependency"],[8,"Any"],[3,"Path"],[8,"AsRef"],[3,"ParserConfig"],[3,"DataItem"],[3,"Vec"],[3,"BTreeSet"],[3,"Task"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[15,"bool"],[4,"ResourceRestriction"],[3,"DagStats"],[4,"Result"],[3,"TypeId"],[4,"DataItemState"],[4,"TaskState"],[3,"DagSimulation"],[3,"DAGRunner"],[3,"RefCell"],[3,"ResourceConfig"],[4,"NetworkConfig"],[8,"Scheduler"],[3,"Config"],[3,"SequenceStats"],[3,"LevelProfile"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[8,"IntoIterator"],[8,"Serializer"],[4,"DataTransferMode"],[8,"Deserializer"],[4,"DataTransferStrategy"],[3,"Network"],[6,"Id"],[4,"Option"],[3,"RunResult"],[3,"Experiment"],[3,"SchedulerParams"],[3,"String"],[3,"System"],[4,"TopologyType"],[3,"Resource"],[15,"slice"],[3,"SimulationContext"],[3,"GenerateCoresOptions"],[3,"GenerateMemoryOptions"],[3,"RunStats"],[3,"Start"],[3,"Event"],[3,"TraceLog"],[6,"RcScheduler"],[3,"TimeSpan"],[4,"Action"],[8,"FromStr"],[3,"ScheduledTask"],[4,"Ordering"],[3,"HashMap"],[3,"DlsScheduler"],[4,"TaskCriterion"],[3,"TaskCriterionIter"],[4,"ResourceCriterion"],[3,"ResourceCriterionIter"],[4,"CoresCriterion"],[3,"CoresCriterionIter"],[3,"DynamicListStrategy"],[3,"Error"],[3,"DynamicListScheduler"],[3,"HeftScheduler"],[3,"LookaheadScheduler"],[4,"DepthMode"],[3,"PeftScheduler"],[3,"SimpleScheduler"],[3,"SimpleDataScheduler"],[3,"TaskStateIter"],[4,"Event"],[3,"Resource"],[3,"Task"],[3,"DataItem"],[3,"Graph"],[3,"Error"],[13,"ConstantBandwidth"],[13,"SharedBandwidth"],[13,"TopologyAware"],[13,"ScheduleTask"],[13,"ScheduleTaskOnCores"],[13,"TransferData"],[13,"TaskScheduled"],[13,"StartUploading"],[13,"FinishUploading"],[13,"TaskStarted"],[13,"TaskCompleted"]]},\
"dslab_faas":{"doc":"DSLab FaaS","t":"AAAAAAAAAAAAAAAAAAAIIDENNNLLLLLLLLKLFLLLLLLLLLLLKLLKLLLLLLLLLKLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLMMMMFMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDENNDNNLMLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLMMLLLLLMLMMLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLDDIDDLLLLLLLLLLLLLLLLMLLLFLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLDIDLLLLLLLLFKLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAAAADDDDNENDNNNNELLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLMLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLFMLMMMLMMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNENLLLLLLLLMMLLLLLLLLLLLMMFMMMLLLLLLLLDLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLDGDDDLLLLLLLLLLLLLLLLLLLLMMMMMMLLMLLLLMLLLLLLLLLLLLLLLLLLMLMMMMLLFLMLMLLLLLLLLLLLLLLLLLFFDDDLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLNDDENNNNLLLMMLLLLLLLLLLLLLLLLMLMLLMLLLLMMMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLNDDIEDNNNLLLLLLLLLLLLLLLLLLLLLLMLLFMKLLLLLLLMLLLLLLLLLLLLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLMMMLLLLMMLLLLLLMFFFFFFMMLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDILLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDDILLKLLLLLLLLLLLLLMMMMLLMLLLLLLKMLLLLLLLLKLLKKMLLLLLLLLLLDDGGDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["coldstart","config","container","controller","cpu","deployer","event","extra","function","host","invocation","invoker","parallel","resource","scheduler","simulation","stats","trace","util","ColdStartConvertHelper","ColdStartPolicy","FixedTimeColdStartPolicy","KeepaliveDecision","NewWindow","OldWindow","TerminateNow","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","box_to_rc","box_to_rc","default_coldstart_policy_resolver","from","from","from_options_map","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","keepalive_decision","keepalive_decision","new","prewarm_window","prewarm_window","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update","update","vzip","vzip","Config","ConfigParamResolvers","HostConfig","RawConfig","RawHostConfig","RawResource","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coldstart_policy","coldstart_policy","coldstart_policy_resolver","cores","cores","count","cpu_policy","cpu_policy","cpu_policy_resolver","default","default","default","deserialize","deserialize","deserialize","erased_serialize","erased_serialize","erased_serialize","from","from","from","from","from","from","from","from","from_raw","from_raw_split_resolvers","from_yaml","hosts","hosts","idle_deployer","idle_deployer","idle_deployer_resolver","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","invoker","invoker","invoker_resolver","name","parse_options","quantity","resources","resources","scheduler","scheduler","scheduler_resolver","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","Container","ContainerManager","ContainerStatus","Deploying","Idle","PossibleContainerIterator","Running","Terminated","active_invocation_count","app_id","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_allocate","count_reservations","cpu_share","dec_active_invocations","delete_container","deployment_time","end_event","end_invocation","eq","equivalent","equivalent","equivalent","from","from","from","from","get_container","get_container_mut","get_containers","get_possible_containers","get_total_resource","host_id","id","inc_active_invocations","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","invocations","last_change","move_container_to_full","new","new","next","reserve_container","resources","start_invocation","started_invocations","status","take_reservations","try_deploy","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_move_container_to_free","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Controller","add_host","as_any","as_any_mut","borrow","borrow_mut","from","into","into_any","into_any_rc","new","on","try_from","try_into","type_id","vzip","ContendedCpuPolicy","Cpu","CpuPolicy","IgnoredCpuPolicy","IsolatedCpuPolicy","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cores","default","default","default","default_cpu_policy_resolver","from","from","from","from","get_load","get_load","get_load","get_load","get_load","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","new","new","on_invocation_end","on_invocation_end","on_invocation_end","on_invocation_end","on_invocation_end","on_new_invocation","on_new_invocation","on_new_invocation","on_new_invocation","on_new_invocation","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","BasicDeployer","IdleDeployer","LocalityBasedDeployer","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","default_idle_deployer_resolver","deploy","deploy","deploy","from","from","from_options_map","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","new","to_string","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ContainerEndEvent","ContainerStartEvent","IdleDeployEvent","InvocationEndEvent","InvocationStartEvent","SimulationEndEvent","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","expected_invocation","from","from","from","from","from","from","func_id","id","id","id","id","id","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","azure_trace_2019","azure_trace_2021","hermod","hybrid_histogram","opendc_trace","resolvers","AppPreference","ApplicationRecord","Azure2019TraceConfig","AzureTrace","BucketUniform","DurationGenerator","EmpiricalFit","FunctionRecord","Lognormal","Piecewise","PoissonFit","PrefittedLognormal","StartGenerator","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","app_id","app_iter","app_preferences","app_records","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cold_start","cold_start_latency","concurrency_level","concurrency_level","count","default","default","default","default","duration_generator","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","force_fixed_memory","from","from","from","from","from","from","from","function_iter","function_records","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_ordered_by_time","left","mem","memory_name","memory_name","new","process_azure_2019_trace","random_seed","request_iter","right","rps","sim_end","simulation_end","start_generator","time_period","time_skip","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trace_records","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Azure2021TraceConfig","Fixed","MemoryGenerator","PrefittedBurr","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","cold_start_latency","concurrency_level","default","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","memory_generator","memory_name","process_azure_2021_trace","random_seed","time_period","time_skip","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","HermodScheduler","as_any","as_any_mut","borrow","borrow_mut","from","from_options_map","into","into_any","into_any_arc","into_any_rc","new","select_host","to_string","try_from","try_into","type_id","vzip","HybridHistogramPolicy","as_any","as_any_mut","borrow","borrow_mut","box_to_rc","from","from_options_map","into","into_any","into_any_arc","into_any_rc","keepalive_decision","new","prewarm_window","to_string","try_from","try_into","type_id","update","vzip","FunctionSample","FunctionTrace","OpenDCRequestIter","OpenDCTrace","OpenDCTraceConfig","__clone_box","app_iter","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cold_start","cold_start","concurrency_level","concurrency_level","cpu_provisioned","cpu_used","default","default","exec","from","from","from","from","funcs","function_iter","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","invocations","is_ordered_by_time","mem_provisioned","mem_used","memory_name","memory_name","new","next","process_opendc_trace","request_iter","sim_end","simulation_end","time","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","extra_coldstart_policy_resolver","extra_scheduler_resolver","Application","Function","FunctionRegistry","add_app","add_app_with_single_function","add_function","app_id","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","from","from","from","get_app","get_app_by_function","get_concurrent_invocations","get_cpu_share","get_deployment_time","get_function","get_resources","id","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","new","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Host","active_invocation_count","as_any","as_any_mut","borrow","borrow_mut","can_allocate","can_invoke","from","get_cpu_cores","get_cpu_load","get_total_resource","into","into_any","into_any_rc","invoke","new","on","queued_invocation_count","total_invocation_count","try_deploy","try_from","try_into","type_id","update_end_metrics","vzip","Finished","Invocation","InvocationRegistry","InvocationStatus","NotArrived","Queued","Running","WaitingForContainer","__clone_box","__clone_box","add_invocation","app_id","arrival_time","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","container_id","default","duration","eq","execution_time","finish_time","fmt","from","from","from","func_id","host_id","id","index","index","index_mut","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_empty","len","response_time","start_time","status","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wait_time","Cold","DequeuedInvocation","FIFOInvoker","Invoker","InvokerDecision","NaiveInvoker","Queued","Rejected","Warm","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","container_id","default","default","default_invoker_resolver","delay","dequeue","dequeue","dequeue","eq","from","from","from","from","id","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","invoke","invoke","invoke","new","new","new","queue_len","queue_len","queue_len","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","ParallelConfig","ParallelHostConfig","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","coldstart_policy","cores","cpu_policy","default","default","from","from","hosts","idle_deployer","into","into","into_any","into_any","into_any_rc","into_any_rc","invoker","parallel_simulation","parallel_simulation_n_workers","parallel_simulation_raw","parallel_simulation_raw_n_workers","parallel_simulation_yaml","parallel_simulation_yaml_n_workers","resources","scheduler","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Resource","ResourceConsumer","ResourceNameResolver","ResourceProvider","ResourceRequirement","__clone_box","__clone_box","__clone_box","__clone_box","allocate","allocate","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_allocate","can_allocate","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","from","from","from","from","from","get_available","get_resource","id","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","iter","new","new","new","new","new_empty","new_empty","quantity","release","release","resolve","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_resolve","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","ApplicationHasher","BasicScheduler","LeastLoadedScheduler","LocalityBasedScheduler","RandomScheduler","RoundRobinScheduler","Scheduler","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default_scheduler_resolver","from","from","from","from","from","from","from_options_map","from_options_map","from_options_map","from_str","hash","hash_fn","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","name","new","new","new","new","new","select_host","select_host","select_host","select_host","select_host","select_host","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","ServerlessSimulation","add_app","add_app_with_single_function","add_function","add_host","as_any","as_any_mut","borrow","borrow_mut","create_resource","create_resource_requirement","event_count","from","get_invocation","get_invocations","global_stats","into","into_any","into_any_rc","invocation_stats","load_trace","new","send_invocation_request","send_requests_from_ordered_iter","set_simulation_end","stats","step","step_for_duration","step_until_no_events","steps","try_from","try_into","try_resolve_resource_name","type_id","vzip","GlobalStats","InvocationStats","SampleMetric","Stats","__clone_box","__clone_box","__clone_box","__clone_box","abs_exec_slowdown","abs_total_slowdown","add","app_stats","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","biased_variance","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cold_start_latency","cold_starts","default","default","default","default","erased_serialize","erased_serialize","erased_serialize","erased_serialize","extend","extend_inplace","from","from","from","from","func_stats","global_stats","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","invocation_stats","invocations","is_empty","len","max","mean","min","on_cold_start","on_cold_start","on_cold_start","on_new_invocation","on_new_invocation","on_new_invocation","ordered_statistic","print_summary","quantile","queueing_time","rel_exec_slowdown","rel_total_slowdown","serialize","serialize","serialize","serialize","sum","to_owned","to_owned","to_owned","to_owned","to_vec","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unbiased_variance","update","update_invocation_stats","update_invocation_stats","update_queueing_time","update_queueing_time","update_queueing_time","update_wasted_resources","update_wasted_resources","values","variance","vzip","vzip","vzip","vzip","wasted_resource_time","ApplicationData","RequestData","Trace","__clone_box","__clone_box","app_iter","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","concurrent_invocations","container_cpu_share","container_deployment_time","container_resources","default","default","duration","eq","equivalent","equivalent","equivalent","from","from","function_iter","id","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_ordered_by_time","new","partial_cmp","request_iter","simulation_end","time","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Counter","DefaultVecMap","FxIndexMap","FxIndexSet","VecMap","VecMapIterator","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","curr","default","default","default","erased_serialize","from","from","from","from","get","get","get_mut","get_mut","increment","index","index","index_mut","index_mut","insert","insert","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","iter","iter","multiunzip","new","next","serialize","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":[[0,"dslab_faas"],[19,"dslab_faas::coldstart"],[65,"dslab_faas::config"],[201,"dslab_faas::container"],[297,"dslab_faas::controller"],[313,"dslab_faas::cpu"],[396,"dslab_faas::deployer"],[433,"dslab_faas::event"],[560,"dslab_faas::extra"],[566,"dslab_faas::extra::azure_trace_2019"],[741,"dslab_faas::extra::azure_trace_2021"],[780,"dslab_faas::extra::hermod"],[798,"dslab_faas::extra::hybrid_histogram"],[819,"dslab_faas::extra::opendc_trace"],[906,"dslab_faas::extra::resolvers"],[908,"dslab_faas::function"],[965,"dslab_faas::host"],[991,"dslab_faas::invocation"],[1068,"dslab_faas::invoker"],[1159,"dslab_faas::parallel"],[1201,"dslab_faas::resource"],[1309,"dslab_faas::scheduler"],[1418,"dslab_faas::simulation"],[1453,"dslab_faas::stats"],[1581,"dslab_faas::trace"],[1639,"dslab_faas::util"]],"d":["Coldstart-reducing policies that govern container …","Experiment configuration (YAML-serializable).","Container model and host-level container manager.","Platform controller.","CPU sharing models.","A component that chooses a host for deploying a new …","Simulation events.","Various implementations of DSLab FaaS traits, including …","Function and application models.","Host model.","Function invocation.","A component that manages incoming invocations on a host.","Utilities for running multiple experiments in parallel.","Resource model.","Scheduler trait and several simple implementations.","FaaS simulation.","Metrics obtained from simulation.","Workload trace trait.","Various utility structs.","Helper trait to convert ColdStartPolicy Box to Rc.","A policy that governs keepalive and prewarming.","Coldstart policy with fixed keepalive and prewarm windows.","A decision regarding keepalive of some container.","A new keepalive window <code>w</code> is chosen for the container. The …","Nothing changes, the container will be deallocated after …","The container must be terminated right now.","","","","","","","","","Converts Box to Rc.","Automatic implementation.","Creates <code>ColdStartPolicy</code> from a string containing its name …","Returns the argument unchanged.","Returns the argument unchanged.","Creates policy from a map of strings containing policy …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Defines delay before container deallocation.","","Creates new FixedTimeColdStartPolicy.","Prewarm = x &gt; 0 =&gt; destroy container, deploy new container …","","Returns a string with policy description.","","","","","","","","This function allows tuning policy on finished invocations.","","","","Simulation config. It implements Default trait so that you …","Functions that create algorithm implementation from a …","Describes a host in the simulation.","YAML-serializable config","Similar to <code>HostConfig</code>, but is YAML-serializable.","Describes a resource in the simulation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>crate::coldstart::ColdStartPolicy</code> implementation.","<code>crate::coldstart::ColdStartPolicy</code> name.","Creates <code>crate::coldstart::ColdStartPolicy</code> from a string.","Host CPU cores.","Host CPU cores.","Number of such hosts in the system.","<code>crate::cpu::CpuPolicy</code> implementation.","<code>crate::cpu::CpuPolicy</code> name.","Creates <code>crate::cpu::CpuPolicy</code> from a string.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates Config from RawConfig using provided resolvers.","Similar to <code>Self::from_raw</code>, but takes resolvers as separate …","Creates Config from YAML file using provided resolvers.","Host data.","Raw host data.","<code>crate::deployer::IdleDeployer</code> implementation.","<code>crate::deployer::IdleDeployer</code> name.","Creates <code>crate::deployer::IdleDeployer</code> from a string.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","<code>crate::invoker::Invoker</code> implementation.","<code>crate::invoker::Invoker</code> name.","Creates <code>crate::invoker::Invoker</code> from a string.","Resource name.","Parses map with options from string.","Resource quantity.","Host resources.","Raw resources.","<code>crate::scheduler::Scheduler</code> implementation.","<code>crate::scheduler::Scheduler</code> name.","Creates <code>crate::scheduler::Scheduler</code> from a string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Container model.","Manages containers on a single host.","Status of a container in the simulation.","Container is being deployed.","Container is up, but isn’t executing anything.","Iterates over all containers that can run another …","Container is executing one or more invocations.","Container is terminated, but still present. Terminated …","Returns active invocations count.","<code>crate::function::Application</code> id.","","","","","","","","","","","","","","","","","Checks whether it is possible to create a new container …","Counts reserved invocations for a deploying container.","CPU share of the container.","Decrements active invocations count.","Deletes a container.","Container deployment time.","Container end event.","Ends a running invocation on the container.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to a container specified by <code>id</code> if it …","Returns a mutable reference to a container specified by <code>id</code> …","Returns a mutable reference to the map that stores all …","Returns an iterator over running containers that can …","Returns total amount of a resource.","Id of a <code>crate::host::Host</code>, on which the container is …","Container id.","Increments active invocations count.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Set of running invocations.","Time of last state change.","Moves a container to full list.","Creates new ContainerManager on a specified host.","Creates new PossibleContainerIterator.","","Reserves a deploying container for a new invocation.","Resources allocated for the container.","Starts a new invocation on the container.","Number of invocations started on this container.","Container status.","Returns and removes reserved invocations for a deploying …","Tries to deploy a new container for given app.","","","","","","","","","Moves a container to free list if it was full.","","","","","","","","","Responsible for handling incoming invocation requests and …","Registers a new host in the controller.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Creates new controller.","","","","","","CPU shares of active containers may exceed the number of …","Just a wrapper over <code>CpuPolicy</code>.","CpuPolicy governs CPU sharing, computes invocation …","This policy ignores contention for CPU resources. All …","CPU shares of active containers should not exceed the …","","","","","","","","","","","","","","","","","Number of CPU cores.","","","","Creates <code>CpuPolicy</code> from a string containing its name and …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the current CPU load.","Returns current CPU load.","","","","Returns a clean initialized instance of the policy.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Creates new Cpu.","Creates new IsolatedCpuPolicy.","Creates new ContendedCpuPolicy.","This method is called whenever an invocation on this CPU …","Called when an invocation stops running.","","","","This method is called whenever there is a new invocation …","Called when a new invocation starts running.","","","","","","","","","","","","","","","","","","","","BasicDeployer deploys new container on the first host with …","IdleDeployer chooses a host to deploy new idle container …","LocalityBasedDeployer picks a host based on application …","","","","","","","","","Creates <code>IdleDeployer</code> from a string containing its name and …","Chooses a host for a new container.","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates new LocalityBasedDeployer from a map of strings …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Creates new LocalityBasedDeployer with given hasher and …","Returns a string with deployer description.","","","","","","","","","","","An idle container must be destroyed.","A deploying container is ready to start running.","A new prewarmed container is deployed.","A running invocation stops executing.","A new invocation starts executing.","Simulation ends.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Expected number of invocations on host. If the real number …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Function id.","Container id.","Container id.","Host id.","Invocation id.","Invocation id.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Functions for parsing Azure Functions 2019 trace and …","Functions for parsing Azure Functions 2021 trace and …","Scheduler implementation from “Hermod: principled and …","Coldstart policy implementation from “Serverless in the …","OpenDC FaaS trace format parser.","Additional resolvers for YAML configs.","Experiment generator will choose <code>count</code> random apps with …","Azure trace application data.","Struct with Azure 2019 trace settings.","Azure trace.","For each 1-minute bucket select each starting time …","Generator of invocation durations.","Generate invocations from empirical distribution.","Azure trace function data.","Generate duration from Lognormal distribution fitted to …","Simple duration generator from quantiles.","Fit Poisson process to buckets and generate the …","Generate duration from Lognormal(-0.38, 2.36).","Generator of invocation arrival times.","","","","","","","","Application id.","","This option controls which apps to use for trace …","Application data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Application cold start latency.","Cold start latency, currently it’s the same for all apps.","Application concurrency level, same for all applications.","This option sets concurrency level for all apps in the …","Random apps count.","","","","","This option controls the method used to generate execution …","","","","","","","","","This option forces trace generator to use given amount of …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Function data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Left quantile.","Application memory requirement.","Name of memory resource.","This option sets name for the memory resource.","Creates new AppPreference.","This function parses Azure Functions 2019 trace and …","This option sets the seed used to initialize random …","","Right quantile.","If <code>rps</code> is not None, trace generator attempts to scale …","Simulation end time.","","This option controls the method used to generate start …","Simulation time period in minutes (only integer numbers …","This option allows skipping an integer number of minutes …","","","","","","","","Request data.","","","","","","","","","","","","","","","","","","","","","","Validates AppPreference.","","","","","","","","Struct with Azure 2021 trace settings.","All apps use fixed amount of memory.","Generator of application memory requirements.","Burr fit from Serverless in the Wild paper. c = 11.652, k …","","","","","","","","","Cold start latency, currently it’s the same for all apps.","This option sets concurrency level for all apps in the …","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","This option controls the method used to generate app …","This option sets name for the memory resource.","This function parses Azure Function 2021 trace and …","This option sets the seed used to initialize random …","Simulation time period in seconds.","This option allows skipping a number of seconds from the …","","","","","","","","","Refer to https://dl.acm.org/doi/abs/10.1145/3542929.3563468…","","","","","Returns the argument unchanged.","Creates scheduler from a map of strings containing …","Calls <code>U::from(self)</code>.","","","","Creates new HermodScheduler.","","","","","","","Refer to …","","","","","Automatic implementation.","Returns the argument unchanged.","Creates policy from a map of strings containing policy …","Calls <code>U::from(self)</code>.","","","","","Creates new HybridHistogramPolicy.","","","","","","","","One sample from OpenDC trace.","A trace of samples for a function.","OpenDC trace request iterator.","OpenDC trace.","Struct with settings for reading OpenDC trace.","","","","","","","","","","","","","","","","","","","","","Application cold start delay, same for all applications.","Application cold start delay, same for all applications.","Application concurrency level, same for all applications.","Application concurrency level, same for all applications.","Provisioned CPU.","Used CPU.","","","Execution time.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Function traces.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Number of invocations at this timestamp.","","Provisioned memory.","Used memory.","Name of memory resource.","Name of memory resource.","Creates new OpenDC request iterator.","","Reads OpenDC trace.","","Simulation end time.","","Timestamp.","","","","","","","","","","","","","","","","","","Like <code>crate::coldstart::default_coldstart_policy_resolver</code>, …","Like <code>crate::scheduler::default_scheduler_resolver</code>, but …","An application shares a common container image. Functions …","A single function of an application.","Stores information about apps and functions.","Adds a new <code>Application</code> and returns its <code>id</code>. Note: the …","Adds a new <code>Application</code> consisting of a single <code>Function</code> and …","Adds a new <code>Function</code> and returns its <code>id</code>.","Application id.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to an <code>Application</code> by its <code>id</code>.","Returns a reference to an <code>Application</code> that owns a <code>Function</code> …","Returns maximum possible number of invocations that can be …","Returns CPU share required by containers of this …","Returns the time needed to deploy one container of this …","Returns a reference to a <code>Function</code> by its <code>id</code>.","Returns resources required by containers of this …","Application id.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Creates new application.","Creates new function.","","","","","","","","","","","","","Host model.","Returns the amount of active invocations on this host.","","","","","Checks whether the host can allocate given resources.","Checks whether the host can invoke a function of the given …","Returns the argument unchanged.","Returns the number of CPU cores.","Returns current CPU load.","Returns the total amount of a resource.","Calls <code>U::from(self)</code>.","","","Passes an invocation to the <code>crate::invoker::Invoker</code>, which …","Creates new host.","","Returns the amount of queued invocations on this host.","Returns the amount of all existing (active + queued) …","Tries to deploy a new container for the given application.","","","","Updates wasted resources for idle containers.","","Invocation is finished.","Function invocation.","Stores information about function invocations.","Invocation status.","Invocation is registered, but simulation time has not …","Invocation is queued at one of the invokers.","Invocation is running.","Invocation is waiting for the assigned container to start.","","","Adds a new invocation to the registry and returns its <code>id</code>.","<code>crate::function::Application</code> id.","Invocation request arrival time.","","","","","","","","","","","","","","","","","<code>crate::container::Container</code> id if the invocation was …","","Invocation duration.","","Returns invocation execution time (finish - start).","Execution finish time.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","<code>crate::function::Function</code> id.","<code>crate::host::Host</code> id if the invocation was scheduled on …","Invocation id.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns whether the registry is empty.","Returns the number of invocations in the registry.","Returns invocation response time (finish - arrival).","Execution start time.","Invocation status.","","","","","","","","","","","","","","","Returns invocation wait time (start - arrival).","Invocation will start running on a cold container after it …","Previously-queued invocation that is finally able to be …","<code>FIFOInvoker</code> repeatedly tries to invoke the oldest queued …","Invoker handles invocations at host level. It chooses …","Invoker’s decision on new function invocation.","<code>NaiveInvoker</code> iterates over all queued invocations and …","Invocation is queued on the invoker because the invoker can…","Invoker rejects the invocation. Note: This value is used …","Invocation will instantly start running on a warm …","","","","","","","","","","","","","","","","","","","","","","","Container id.","","","Creates <code>Invoker</code> from a string containing its name and …","Deploying delay if the invocation will be executed on a …","Try to invoke some of the queued functions.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Invocation id.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Invoke or queue new invocation.","","","Creates new DequeuedInvocation.","Creates new NaiveInvoker.","Creates new FIFOInvoker.","Returns invocation queue length.","","","","","Returns a string with invoker description.","","","","","","","","","","","","","","","","","","","Similar to <code>crate::config::Config</code>, but ensures that all …","Similar to <code>crate::config::HostConfig</code>, but only accepts …","","","","","","","","","<code>crate::coldstart::ColdStartPolicy</code> implementation.","Host CPU cores.","<code>crate::cpu::CpuPolicy</code> implementation.","","","Returns the argument unchanged.","Returns the argument unchanged.","Host configuration data.","<code>crate::deployer::IdleDeployer</code> implementation.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","<code>crate::invoker::Invoker</code> implementation.","Runs parallel simulations in a thread pool with a separate …","Runs parallel simulations in a thread pool with <code>n_workers</code> …","Similar to <code>parallel_simulation</code>, but for raw configs.","Similar to <code>parallel_simulation_n_workers</code>, but for raw …","Similar to <code>parallel_simulation</code>, but for YAML configs.","Similar to <code>parallel_simulation_n_workers</code>, but for YAML …","Host resources.","<code>crate::scheduler::Scheduler</code> implementation.","","","","","","","","","A simple strictly isolated renewable resource.","A model of a container or other entity that consumes …","Transforms resource name to resource id in current …","A model of a host or other entity that provides several …","Requirement for allocating specified amount of a resource.","","","","","Allocates free resource.","Allocates resources required by the consumer.","","","","","","","","","","","","","","","","","","","","","Checks whether it is possible to allocate given amount of …","Checks whether it is possible to allocate resources …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns amount of free resource.","Returns reference to a resource specified by <code>id</code> if it …","Resource id.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Iterates over resource requirements of the consumer.","Creates new resource.","Creates new ResourceRequirement.","Creates new ResourceProvider.","Creates new ResourceConsumer.","Creates new ResourceProvider without resources.","Creates new ResourceConsumer without resources.","Required resource quantity.","Releases allocated resource.","Releases resources allocated by the consumer.","Same as <code>Self::try_resolve</code>, but creates new resource if it …","","","","","","","","","","","","","","","Transforms name to id if this resource exists.","","","","","","","","","","","Hashes application ids, used to map applications to hosts.","Chooses the first invoker that can hotstart the …","Chooses a host with the least CPU usage.","Picks a host based on the application hash. In case host …","Picks a host uniformly at random.","Chooses hosts in a circular fashion.","Chooses a host to run new invocation of some function from …","","","","","","","","","","","","","","","","","","","","","","","","","","Creates <code>Scheduler</code> from a string containing its name and …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates scheduler from a map of strings containing …","Creates scheduler from a map of strings containing …","Creates scheduler from a map of strings containing …","","Hashes application id.","Hash function, accepts application id.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Hasher name.","Creates new ApplicationHasher.","Creates new LocalityBasedScheduler.","Creates new RandomScheduler.","Creates new LeastLoadedScheduler.","Creates new RoundRobinScheduler.","Chooses a host.","","","","","","Returns a string with scheduler description.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Main FaaS simulation class.","Adds a new <code>crate::function::Application</code>.","Adds a new <code>crate::function::Application</code> with a single …","Adds a new <code>crate::function::Function</code>.","Adds a new <code>crate::host::Host</code>.","","","","","Creates new resource.","Creates new resource requirement.","Returns number of events in the simulation.","Returns the argument unchanged.","Returns invocation by its id.","Returns all invocations with ids in given range.","Returns global metrics.","Calls <code>U::from(self)</code>.","","","Returns global invocation metrics.","Returns a consecutive range of indices of new invocations. …","Creates new simulation.","Sends a single invocation request.","This function provides a way to send invocation requests …","Simulation end event is useful in case you have a …","Returns simulation metrics.","Makes one simulation step.","Makes simulation steps for given time duration.","Makes simulation steps until no events remain.","Makes given number of simulation steps.","","","Resolves resource name into <code>id</code> if it exists.","","","All metrics computed by the simulator.","Metrics related to invocations and execution speed.","Statistical sample.","Main metrics storage of the simulator, stores metrics on …","","","","","Absolute execution slowdown.","Absolute total execution slowdown (includes queueing and …","Adds a new element to the sample.","Application-wise invocation metrics.","","","","","","","","","Returns biased sample variance.","","","","","","","","","","","","","","","","","This metric counts latency of cold starts only, warm …","Number of cold starts.","","","","","","","","","Same as extend_inplace, but makes a copy.","Extends current metric with zeros to given number of …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Function-wise invocation metrics.","Global metrics.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Invocation-related metrics.","Number of started invocations.","Checks whether the sample is empty.","Returns the number of elements in this sample.","Returns maximum element in this sample.","Returns the arithmetic mean of elements in this sample.","Returns minimum element in this sample.","Updates metrics on a cold start.","Updates metrics on a cold start.","Updates metrics on a cold start.","Updates metrics on a new invocation.","Updates metrics on a new invocation.","Updates metrics on a new invocation.","Returns k-th ordered statistic of the sample.","Prints metrics summary to stdout.","Returns q-th sample quantile, 0 &lt;= q &lt;= 1. Estimation …","Measures queueing time of requests stuck in the invoker …","Relative execution slowdown.","Relative total execution slowdown (includes queueing and …","","","","","Returns the sum of elements in this sample.","","","","","Converts sample to float vector.","","","","","","","","","","","","","Returns unbiased sample variance.","Updates metrics on invocation end.","Updates metrics on invocation end.","Updates metrics on invocation end.","Updates metrics on a dequeued invocation.","Updates metrics on a dequeued invocation.","Updates metrics on a dequeued invocation.","Updates wasted resources.","Updates wasted resources.","Returns the slice with the elements of this sample.","Returns biased/unbiased sample variance.","","","","","Integral of resources wasted by idle containers over time.","Raw application data.","Raw invocation request data.","Workload trace.","","","Returns an iterator over the applications.","","","","","","","","","","","","","","Maximum number of invocations that can run simultaneously …","CPU share required by containers of this application.","Time needed to deploy one container of this application.","Host resources required by containers of this application.","","","Invocation duration.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns an iterator over the functions.","Function id.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Indicates whether the requests produced by <code>request_iter</code> …","Creates new ApplicationData.","","Returns an iterator over the invocation requests.","Optionally returns simulation end time.","Request arrival time.","","","","","","","","","","","A simple incrementing counter.","Similar to <code>VecMap</code>, but returns the default value instead …","IndexMap with faster hash function.","IndexSet with faster hash function.","A simple mapping type for storing (key, value) pairs where …","Iterator over <code>VecMap</code> (key, value) pairs.","","","","","","","","","","","","","","","","","","","","","","","Returns current counter value.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value specified by id if exists.","Returns a reference to the value speficied by id if exists.","Returns a mutable reference to the value specified by id …","Returns a mutable reference to the value speficied by id …","Post-increments the counter.","","","","","Inserts a new value into the map.","Inserts a new value into the map.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns (key, value) pairs iterator.","Returns an iterator over map values. To iterate over (key, …","","Creates new VecMapIterator.","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,10,13,10,13,10,13,10,125,10,0,13,10,10,13,10,13,10,13,10,13,10,3,10,10,3,10,3,10,13,10,13,10,13,10,3,10,13,10,0,0,0,0,0,0,21,22,23,24,25,26,21,22,23,24,25,26,21,22,23,24,25,26,21,22,23,24,25,26,21,22,23,21,22,23,21,22,23,26,23,25,24,22,22,26,23,25,24,25,26,21,22,23,21,22,23,24,24,25,26,26,21,22,23,26,26,26,26,23,26,23,25,24,25,26,21,22,23,24,25,26,21,22,23,25,21,22,23,24,25,26,21,22,23,24,22,25,21,0,21,24,22,26,23,25,21,22,23,21,22,23,24,25,26,21,22,23,24,25,26,21,22,23,24,25,26,21,22,23,24,25,26,21,22,23,0,0,0,39,39,0,39,39,36,12,12,36,42,39,12,36,42,39,12,36,42,39,12,36,42,39,36,36,12,36,36,12,12,12,39,39,39,39,12,36,42,39,36,36,36,36,36,12,12,36,12,36,42,39,12,36,42,39,12,42,39,12,36,42,39,42,12,12,36,36,42,42,36,12,12,12,12,36,36,12,36,42,39,12,36,42,39,36,12,36,42,39,12,36,42,39,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,59,55,56,57,59,55,56,57,59,55,56,57,59,55,56,57,59,55,56,57,0,59,55,56,57,58,59,55,56,57,58,55,56,57,59,55,56,57,59,55,56,57,55,56,57,59,55,56,57,59,56,57,58,59,55,56,57,58,59,55,56,57,59,55,56,57,59,55,56,57,59,55,56,57,59,55,56,57,0,0,0,62,63,62,63,62,63,62,63,0,51,62,63,62,63,63,62,63,62,63,62,62,63,63,51,62,63,62,63,62,63,62,63,62,63,0,0,0,0,0,0,65,66,67,68,69,70,65,66,67,68,69,70,65,66,67,68,69,70,65,66,67,68,69,70,65,66,67,68,69,70,65,66,67,68,69,70,65,66,67,68,69,70,65,66,67,68,69,70,67,65,66,67,68,69,70,69,65,66,67,68,69,65,66,67,68,69,70,65,66,67,68,69,70,65,66,67,68,69,70,65,66,67,68,69,70,65,66,67,68,69,70,65,66,67,68,69,70,65,66,67,68,69,70,65,66,67,68,69,70,65,66,67,68,69,70,65,66,67,68,69,70,0,0,0,0,0,0,0,0,0,0,77,0,77,0,76,76,77,76,0,73,74,71,75,76,77,78,73,71,78,71,73,74,71,75,76,77,78,73,74,71,75,76,77,78,73,74,71,75,76,77,78,73,74,71,75,76,77,78,73,74,71,75,76,77,78,73,74,71,75,76,77,78,74,78,71,78,75,73,74,71,78,78,76,77,76,76,76,77,77,77,78,73,74,71,75,76,77,78,71,71,73,74,71,75,76,77,78,73,74,71,75,76,77,78,73,74,71,75,76,77,78,73,74,71,75,76,77,78,71,75,74,71,78,75,0,78,71,75,78,71,71,78,78,78,73,74,71,75,76,77,78,71,73,74,71,75,76,77,78,73,74,71,75,76,77,78,73,74,71,75,76,77,78,75,73,74,71,75,76,77,78,0,126,0,126,126,79,126,79,126,79,126,79,79,79,79,126,79,126,79,126,79,126,79,126,79,79,79,0,79,79,79,126,79,126,79,126,79,126,79,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,0,0,0,83,82,82,87,84,83,82,87,84,83,82,87,84,83,82,87,84,83,83,83,82,84,82,84,83,83,84,83,83,82,87,84,83,82,82,82,87,84,83,82,87,84,83,82,87,84,83,82,87,84,83,87,83,82,83,83,82,84,87,87,0,82,82,82,83,83,82,87,84,83,82,87,84,83,82,87,84,83,82,87,84,83,0,0,0,0,0,50,50,50,88,16,88,50,16,88,50,16,88,50,16,88,50,50,16,88,50,50,50,16,16,16,50,16,16,16,88,50,16,88,50,16,88,50,16,88,50,16,88,16,88,50,16,88,50,16,88,50,16,88,50,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,93,0,0,0,93,93,93,93,93,19,91,19,19,93,19,91,93,19,91,93,19,91,93,19,91,93,19,93,19,19,91,19,93,19,19,93,93,19,91,19,19,19,91,91,91,93,19,91,93,19,91,93,19,91,93,19,91,91,91,19,19,19,93,19,93,19,91,93,19,91,93,19,91,93,19,91,19,89,0,0,0,0,0,89,89,89,89,97,89,97,98,99,89,97,98,99,89,97,98,99,89,97,98,99,89,97,89,97,97,98,99,0,97,90,98,99,89,89,97,98,99,97,89,97,98,99,89,97,98,99,89,97,98,99,89,97,98,99,90,98,99,97,98,99,90,98,99,89,97,90,98,99,89,97,98,99,89,97,98,99,89,97,98,99,89,97,98,99,0,0,31,32,31,32,31,32,31,32,32,31,32,31,32,31,32,32,32,31,32,31,32,31,32,31,0,0,0,0,0,0,31,32,31,32,31,32,31,32,31,32,0,0,0,0,0,101,102,44,38,101,44,103,101,102,44,38,103,101,102,44,38,103,101,102,44,38,103,101,102,44,38,101,44,101,102,44,38,101,102,44,38,103,44,38,103,101,102,44,38,101,44,102,103,101,102,44,38,103,101,102,44,38,103,101,102,44,38,103,101,102,44,38,38,101,102,44,38,44,38,102,101,44,103,101,102,44,38,103,101,102,44,38,103,101,102,44,38,103,103,101,102,44,38,103,101,102,44,38,0,0,0,0,0,0,0,109,64,106,107,108,105,109,64,106,107,108,105,109,64,106,107,108,105,109,64,106,107,108,105,105,0,109,64,106,107,108,105,106,107,108,64,64,64,109,64,106,107,108,105,109,64,106,107,108,105,109,107,108,105,109,64,106,107,108,105,64,64,106,107,108,105,52,109,106,107,108,105,52,109,106,107,108,105,109,64,106,107,108,105,109,64,106,107,108,105,109,64,106,107,108,105,109,64,106,107,108,105,0,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,0,0,0,0,114,112,111,53,112,112,114,53,114,112,111,53,114,112,111,53,114,114,112,111,53,114,112,111,53,114,112,111,53,114,112,111,53,112,112,114,112,111,53,114,112,111,53,114,114,114,112,111,53,53,53,114,112,111,53,114,112,111,53,114,112,111,53,114,112,111,53,111,112,114,114,114,114,114,112,111,53,112,111,53,114,111,114,112,112,112,114,112,111,53,114,114,112,111,53,114,114,112,111,53,114,112,111,53,114,112,111,53,114,112,111,53,112,111,53,111,53,114,114,114,112,111,53,111,0,0,0,115,116,100,115,116,115,116,115,116,115,116,115,116,115,116,116,115,115,115,115,115,116,116,116,116,116,116,115,116,100,116,115,116,115,116,115,116,115,116,100,115,116,100,100,116,115,116,115,116,115,116,115,116,115,116,0,0,0,0,0,0,119,121,104,122,119,121,104,122,119,121,104,122,119,121,104,122,119,121,119,121,119,121,122,122,119,121,121,104,122,119,121,119,121,119,121,122,119,121,119,121,119,121,104,122,119,121,104,122,119,121,104,122,119,121,104,122,119,121,104,119,121,104,104,104,121,119,121,104,122,119,121,104,122,119,121,104,122,119,121,104,122,119,121],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[2,[[5,[[4,[3]]]]]],[[[2,[6]]],[[5,[[4,[3]]]]]],[7,[[2,[3]]]],[[]],[[]],[[[9,[8,8]]],10],[[]],[[]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[12,13],[[10,12],13],[[14,14,15],10],[16,14],[[10,16],14],[[],8],[10,8],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[19,16]],[[10,19,16]],[[]],[[]],0,0,0,0,0,0,[20],[20],[20],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,21],[22,22],[23,23],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],24],[[],25],[[],26],[27,[[17,[21]]]],[27,[[17,[22]]]],[27,[[17,[23]]]],[28,[[17,[29,30]]]],[28,[[17,[29,30]]]],[28,[[17,[29,30]]]],[31,24],[[]],[[]],[32,26],[[]],[[]],[[]],[[]],[[23,25],26],[[23,33,33,33,33,33],26],[[34,25],26],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],0,0,0,0,[7,[[9,[8,8]]]],0,0,0,0,0,0,[[21,35],17],[[22,35],17],[[23,35],17],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[36,37],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[36,38],15],[[36,37],37],0,[36],[[36,37]],0,0,[[12,37,14]],[[39,39],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[36,37],[[40,[12]]]],[[36,37],[[40,[12]]]],[36,[[41,[37,12]]]],[[36,16,15],42],[[36,37],43],0,0,[36],[[]],[[]],[[]],[[]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[[]],0,0,[[36,37]],[[37,44,[5,[[4,[45]]]]],36],[[[40,[[46,[37]]]],[41,[37,12]],[41,[37,[47,[37]]]],37,15],42],[42,40],[[36,37,37]],0,[[12,37]],0,0,[[36,37],[[40,[[47,[37]]]]]],[[36,16,14],40],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[36,37]],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],0,[[48,[5,[[4,[49]]]]]],[[],1],[[],1],[[]],[[]],[[]],[[]],[[[2,[6]]],[[2,[1,6]]]],[5,[[5,[1]]]],[[[5,[[4,[50]]]],[2,[51]],[2,[52]],[5,[[4,[53]]]]],48],[[48,54]],[[],17],[[],17],[[],18],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],55],[[],56],[[],57],[7,[[2,[58]]]],[[]],[[]],[[]],[[]],[[],14],[59,14],[55,14],[56,14],[57,14],[60,[[2,[58]]]],[[55,60],[[2,[58]]]],[[56,60],[[2,[58]]]],[[57,60],[[2,[58]]]],[[]],[[]],[[]],[[]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[[60,[2,[58]],[5,[[4,[45]]]]],59],[60,56],[60,57],[[19,12,14,45]],[[59,19,12,14]],[[55,19,12,14,45]],[[56,19,12,14,45]],[[57,19,12,14,45]],[[19,12,14,45]],[[59,19,12,14]],[[55,19,12,14,45]],[[56,19,12,14,45]],[[57,19,12,14,45]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[7,[[2,[51]]]],[[16,[61,[[5,[[4,[49]]]]]]],[[40,[37]]]],[[62,16,[61,[[5,[[4,[49]]]]]]],[[40,[37]]]],[[63,16,[61,[[5,[[4,[49]]]]]]],[[40,[37]]]],[[]],[[]],[[[9,[8,8]]],63],[[]],[[]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[11,[[11,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[[[40,[64]],[40,[37]]],63],[[],8],[62,8],[63,8],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[]],[[]],0,0,0,0,0,0,[20],[20],[20],[20],[20],[20],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[[]],[[]],[[]],[[]],[[]],[[]],[28,[[17,[29,30]]]],[28,[[17,[29,30]]]],[28,[[17,[29,30]]]],[28,[[17,[29,30]]]],[28,[[17,[29,30]]]],[28,[[17,[29,30]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[[65,35],17],[[66,35],17],[[67,35],17],[[68,35],17],[[69,35],17],[[70,35],17],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[20],[20],[20],[20],[20],[20],[20],0,[71,[[2,[72]]]],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73,73],[74,74],[71,71],[75,75],[76,76],[77,77],[78,78],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],73],[[],74],[[],71],[[],78],0,[[76,76],15],[[77,77],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[71,[[2,[72]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[71,15],0,0,0,0,[[37,14,14],75],[[34,78],71],0,[71,[[2,[72]]]],0,0,0,[71,[[40,[14]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[75,[[17,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],0,0,[[],79],[[]],[[]],[[]],[[]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],0,0,[[34,79],71],0,0,0,[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[]],[[]],0,[[],1],[[],1],[[]],[[]],[[]],[[[9,[8,8]]],80],[[]],[[[2,[6]]],[[2,[1,6]]]],[11,[[11,[1]]]],[5,[[5,[1]]]],[[15,15,15],80],[[80,16,[61,[[5,[[4,[49]]]]]]],37],[80,8],[[],17],[[],17],[[],18],[[]],0,[[],1],[[],1],[[]],[[]],[[[2,[6]]],[[5,[[4,[3]]]]]],[[]],[[[9,[8,8]]],81],[[]],[[[2,[6]]],[[2,[1,6]]]],[11,[[11,[1]]]],[5,[[5,[1]]]],[[81,12],13],[[14,14,14,14,14,14],81],[[81,16],14],[81,8],[[],17],[[],17],[[],18],[[81,19,16]],[[]],0,0,0,0,0,[20],[82,[[2,[72]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[83,83],[[]],0,0,0,0,0,0,[[],84],[[],83],0,[[]],[[]],[[]],[[]],0,[82,[[2,[72]]]],[[]],[[]],[[]],[[]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[[]],0,[82,15],0,0,0,0,[[[86,[85]]],87],[87,40],[[34,84],82],[82,[[2,[72]]]],0,[82,[[40,[14]]]],0,[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[7,[[2,[3]]]],[7,[[2,[52]]]],0,0,0,[[50,16],37],[[50,16],37],[[50,88],37],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[],50],[[]],[[]],[[]],[[50,37],[[40,[16]]]],[[50,37],[[40,[16]]]],[16,37],[16,14],[16,14],[[50,37],[[40,[88]]]],[16,38],0,[[]],[[]],[[]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[[37,14,14,38],16],[37,88],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[]],[[]],[[]],0,[49,37],[[],1],[[],1],[[]],[[]],[[49,38],15],[[49,16,15],15],[[]],[49,60],[49,14],[[49,37],43],[[]],[[[2,[6]]],[[2,[1,6]]]],[5,[[5,[1]]]],[[49,37,14],89],[[37,60,[2,[58]],44,[2,[90]],[5,[[4,[50]]]],[5,[[4,[91]]]],[5,[[4,[3]]]],92,[5,[[4,[53]]]],45],49],[[49,54]],[49,37],[49,37],[[49,16,14],40],[[],17],[[],17],[[],18],[[49,14]],[[]],0,0,0,0,0,0,0,0,[20],[20],[[91,37,37,14,14],37],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[93,93],[19,19],[[]],[[]],0,[[],91],0,[[93,93],15],[19,14],0,[[93,94],95],[[]],[[]],[[]],0,0,0,[[91,[96,[37]]]],[[91,37]],[[91,37]],[[]],[[]],[[]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[91,15],[91,37],[19,14],0,0,[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[]],[[]],[[]],[19,14],0,0,0,0,0,0,0,0,0,[20],[20],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[89,89],[97,97],[[]],[[]],0,[[],98],[[],99],[7,[[2,[90]]]],0,[[[5,[[4,[50]]]],36,53,14],[[47,[97]]]],[[98,[5,[[4,[50]]]],36,53,14],[[47,[97]]]],[[99,[5,[[4,[50]]]],36,53,14],[[47,[97]]]],[[89,89],15],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[[19,[5,[[4,[50]]]],36,14],89],[[98,19,[5,[[4,[50]]]],36,14],89],[[99,19,[5,[[4,[50]]]],36,14],89],[[37,37,[40,[14]]],97],[[],98],[[],99],[[],37],[98,37],[99,37],[[]],[[]],[[],8],[98,8],[99,8],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],0,0,0,[[],31],[[],32],[[]],[[]],0,0,[[]],[[]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],0,[[[47,[32]],[47,[[2,[100]]]],[47,[43]]],[[47,[53]]]],[[[47,[32]],[47,[[2,[100]]]],[47,[43]],37],[[47,[53]]]],[[[47,[23]],25,[47,[[2,[100]]]],[47,[43]]],[[47,[53]]]],[[[47,[23]],25,[47,[[2,[100]]]],[47,[43]],37],[[47,[53]]]],[[[47,[34]],25,[47,[[2,[100]]]],[47,[43]]],[[47,[53]]]],[[[47,[34]],25,[47,[[2,[100]]]],[47,[43]],37],[[47,[53]]]],0,0,[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[]],[[]],0,0,0,0,0,[20],[20],[20],[20],[[101,102]],[[44,38]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[101,102],15],[[44,38],15],[101,101],[102,102],[44,44],[38,38],[[]],[[]],[[]],[[]],[[],103],[[],44],[[],38],[[]],[[]],[[]],[[]],[[]],[101,43],[[44,37],[[40,[101]]]],0,[[]],[[]],[[]],[[]],[[]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[38,[[104,[102]]]],[[37,43],101],[[37,43],102],[[[47,[101]]],44],[[[47,[102]]],38],[[],44],[[],38],0,[[101,102]],[[44,38]],[[103,7],37],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[103,7],[[40,[37]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],105],[7,[[2,[52]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[8,8]]],106],[[[9,[8,8]]],107],[[[9,[8,8]]],108],[7,[[17,[64]]]],[[64,43],43],0,[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],0,[[[2,[33]],8],64],[[[40,[64]],[40,[37]],15],106],[43,107],[[15,15,15],108],[[],105],[[16,[61,[[5,[[4,[49]]]]]]],37],[[109,16,[61,[[5,[[4,[49]]]]]]],37],[[106,16,[61,[[5,[[4,[49]]]]]]],37],[[107,16,[61,[[5,[[4,[49]]]]]]],37],[[108,16,[61,[[5,[[4,[49]]]]]]],37],[[105,16,[61,[[5,[[4,[49]]]]]]],37],[[],8],[109,8],[106,8],[107,8],[108,8],[105,8],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],0,[[110,16],37],[[110,16],37],[[110,88],37],[[110,[40,[[2,[90]]]],44,60]],[[],1],[[],1],[[]],[[]],[[110,7,43],101],[[110,7,43],102],[110,43],[[]],[[110,37],19],[[110,[96,[37]]],[[47,[19]]]],[110,111],[[]],[[[2,[6]]],[[2,[1,6]]]],[5,[[5,[1]]]],[110,112],[[110,100],[[96,[37]]]],[[113,26],110],[[110,37,14,14],37],[[110,72],[[96,[37]]]],[[110,14]],[110,53],[110,15],[[110,14]],[110],[[110,43],15],[[],17],[[],17],[[110,7],[[40,[37]]]],[[],18],[[]],0,0,0,0,[20],[20],[20],[20],0,0,[[114,14]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[114,14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[114,114],[112,112],[111,111],[53,53],[[]],[[]],[[]],[[]],0,0,[[],114],[[],112],[[],111],[[],53],[28,[[17,[29,30]]]],[28,[[17,[29,30]]]],[28,[[17,[29,30]]]],[28,[[17,[29,30]]]],[[114,37],114],[[114,37]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],0,0,[114,15],[114,37],[114,[[40,[14]]]],[114,14],[114,[[40,[14]]]],[[112,14]],[[111,14]],[[53,37,37,14]],[112],[111],[[53,37,37]],[[114,37],14],[[111,7]],[[114,14],14],0,0,0,[[114,35],17],[[112,35],17],[[111,35],17],[[53,35],17],[114,14],[[]],[[]],[[]],[[]],[114,[[47,[14]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[114,14],[[112,19]],[[111,19]],[[53,19]],[[112,14]],[[111,14]],[[53,37,37,14]],[[111,14,38]],[[53,14,38]],[114,[[61,[14]]]],[[114,15],14],[[]],[[]],[[]],[[]],0,0,0,0,[20],[20],[[],[[2,[72]]]],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[115,115],[116,116],[[]],[[]],[[116,116],117],0,0,0,0,[[],115],[[],116],0,[[116,116],15],[[],15],[[],15],[[],15],[[]],[[]],[[],[[2,[72]]]],0,[[]],[[]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[[],15],[[37,14,14,47],115],[[116,116],[[40,[117]]]],[[],[[2,[72]]]],[[],[[40,[14]]]],0,[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[]],[[]],0,0,0,0,0,0,[20],[20],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[119,[118]]],[[119,[118]]]],[[[121,[[0,[118,120]]]]],[[121,[[0,[118,120]]]]]],[[]],[[]],[122,37],[[],122],[[],119],[[],[[121,[[0,[120,120]]]]]],[28,[[17,[29,30]]]],[[]],[[]],[[]],[[]],[[119,37],40],[[[121,[120]],37],[[40,[120]]]],[[119,37],40],[[[121,[120]],37],120],[122,37],[[119,37]],[[[121,[120]],37]],[[119,37]],[[[121,[120]],37]],[[119,37]],[[[121,[120]],37,120]],[[]],[[]],[[]],[[]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[[[2,[6]]],[[2,[1,6]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[5,[[5,[1]]]],[[]],[119,104],[[[121,[120]]],[[86,[120]]]],[[]],[[[123,[[86,[40]]]]],104],[104,40],[[[121,[[0,[120,124]]]],35],17],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]]],"c":[],"p":[[8,"Any"],[3,"Box"],[8,"ColdStartPolicy"],[3,"RefCell"],[3,"Rc"],[3,"Global"],[15,"str"],[3,"String"],[3,"HashMap"],[3,"FixedTimeColdStartPolicy"],[3,"Arc"],[3,"Container"],[4,"KeepaliveDecision"],[15,"f64"],[15,"bool"],[3,"Application"],[4,"Result"],[3,"TypeId"],[3,"Invocation"],[3,"Private"],[3,"RawResource"],[3,"RawHostConfig"],[3,"RawConfig"],[3,"HostConfig"],[3,"ConfigParamResolvers"],[3,"Config"],[8,"Deserializer"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"ParallelHostConfig"],[3,"ParallelConfig"],[8,"Fn"],[3,"Path"],[8,"Serializer"],[3,"ContainerManager"],[15,"usize"],[3,"ResourceConsumer"],[4,"ContainerStatus"],[4,"Option"],[6,"FxIndexMap"],[3,"PossibleContainerIterator"],[15,"u64"],[3,"ResourceProvider"],[3,"SimulationContext"],[3,"Iter"],[3,"Vec"],[3,"Controller"],[3,"Host"],[3,"FunctionRegistry"],[8,"IdleDeployer"],[8,"Scheduler"],[3,"Stats"],[3,"Event"],[3,"IgnoredCpuPolicy"],[3,"IsolatedCpuPolicy"],[3,"ContendedCpuPolicy"],[8,"CpuPolicy"],[3,"Cpu"],[15,"u32"],[15,"slice"],[3,"BasicDeployer"],[3,"LocalityBasedDeployer"],[3,"ApplicationHasher"],[3,"ContainerEndEvent"],[3,"ContainerStartEvent"],[3,"IdleDeployEvent"],[3,"InvocationEndEvent"],[3,"InvocationStartEvent"],[3,"SimulationEndEvent"],[3,"AzureTrace"],[8,"Iterator"],[3,"FunctionRecord"],[3,"ApplicationRecord"],[3,"AppPreference"],[4,"DurationGenerator"],[4,"StartGenerator"],[3,"Azure2019TraceConfig"],[3,"Azure2021TraceConfig"],[3,"HermodScheduler"],[3,"HybridHistogramPolicy"],[3,"OpenDCTrace"],[3,"FunctionSample"],[3,"OpenDCTraceConfig"],[6,"FunctionTrace"],[3,"Iter"],[3,"OpenDCRequestIter"],[3,"Function"],[4,"InvokerDecision"],[8,"Invoker"],[3,"InvocationRegistry"],[6,"Id"],[4,"InvocationStatus"],[3,"Formatter"],[6,"Result"],[3,"Range"],[3,"DequeuedInvocation"],[3,"NaiveInvoker"],[3,"FIFOInvoker"],[8,"Trace"],[3,"Resource"],[3,"ResourceRequirement"],[3,"ResourceNameResolver"],[3,"VecMapIterator"],[3,"RoundRobinScheduler"],[3,"LocalityBasedScheduler"],[3,"RandomScheduler"],[3,"LeastLoadedScheduler"],[3,"BasicScheduler"],[3,"ServerlessSimulation"],[3,"GlobalStats"],[3,"InvocationStats"],[3,"Simulation"],[3,"SampleMetric"],[3,"ApplicationData"],[3,"RequestData"],[4,"Ordering"],[8,"Clone"],[3,"VecMap"],[8,"Default"],[3,"DefaultVecMap"],[3,"Counter"],[3,"Enumerate"],[8,"Serialize"],[8,"ColdStartConvertHelper"],[4,"MemoryGenerator"]]},\
"dslab_iaas":{"doc":"","t":"AAAAAAAAAAAAAAAAAAAAADENNNNLLLLLLLLLLLMLLLLMLLLLLLLLMLLLLLLLLLLAAADLLLLLLLLLLLLLLLFFDDDDLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLMMLLLLLMLLLLLLLLMLLLLMMMLLLLDLLLLLLLLLLLLLLLLLLLLLLAAAADDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLDLLLLLLLMLLMLLLLMMMLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLDLLLLLLLLLLLLLLMLLLLMLDDLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLLLLLLLLLLDILLLLLLLLKLLLLLFLLLLLLDIDLLLLLLLLLLLLLLLLLLLLKLLKLLKLLKLLKLLLLKLLLLLLLLLLLDDLLLLLLLLLLLLMMLLLLLLLLLLLLLLMMLLLLLLLLLLMLLDLLLLLLLLLLLLLLLLLLLDDLLLLMLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLMLLLLLLLLMMMLLMLLLLLLLLLLLDLLLLLLMLLLLLLLLLIDLLLLLLLLLLLLLLLLLLKLKLLNNNNDNDELLLMLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLMLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLNINIELLLLLLLLLFKKLLLLLAAAAAAAAAADLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLIKKDILLLLMMLLLLMMLLLLLLLLLAAAAAADLLLLLLLLLLLLLLLLIDLLLLLLLMMLKMLLLMMMMMLLLLLNNELLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["core","custom_component","experiment","extensions","simulation","common","config","energy_meter","events","host_manager","load_model","logger","monitoring","placement_store","resource_pool","scheduler","slav_metric","vm","vm_api","vm_placement_algorithm","vm_placement_algorithms","Allocation","AllocationVerdict","HostNotFound","NotEnoughCPU","NotEnoughMemory","Success","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cpu_usage","eq","erased_serialize","from","from","id","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","memory_usage","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","exp_config","options","sim_config","ExperimentConfig","as_any","as_any_mut","borrow","borrow_mut","fmt","from","from_file","get_next_run","into","into_any","into_any_rc","try_from","try_into","type_id","vzip","parse_config_value","parse_options","HostConfig","SchedulerConfig","SimulationConfig","VmDatasetConfig","__clone_box","__clone_box","__clone_box","__clone_box","algorithm","allocation_retry_period","allow_vm_overcommit","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","count","cpus","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_file","hosts","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","memory","message_delay","name","name","name_prefix","name_prefix","network_throughput","path","schedulers","send_stats_period","serialize","serialize","serialize","serialize","simulation_length","step_duration","to_owned","to_owned","to_owned","to_owned","to_string","trace","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type","type_id","type_id","type_id","type_id","vm_allocation_timeout","vm_start_duration","vm_stop_duration","vzip","vzip","vzip","vzip","EnergyMeter","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","energy_consumed","fmt","from","into","into_any","into_any_arc","into_any_rc","new","to_owned","try_from","try_into","type_id","update","vzip","allocation","monitoring","vm","vm_api","AllocationCommitFailed","AllocationCommitRequest","AllocationCommitSucceeded","AllocationFailed","AllocationReleaseRequest","AllocationReleased","AllocationRequest","MigrationRequest","VmCreateRequest","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","from","from","from","from","from","from","from","from","from","host_id","host_id","host_ids","host_ids","host_ids","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_migrating","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","source_host","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vm_id","vm_id","vm_id","vm_id","vm_id","vm_ids","vm_ids","vm_ids","vm_ids","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","HostStateUpdate","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","cpu_load","erased_serialize","from","host_id","into","into_any","into_any_arc","into_any_rc","memory_load","recently_added_vms","recently_removed_vms","serialize","to_owned","try_from","try_into","type_id","vzip","VMDeleted","VMStarted","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","erased_serialize","erased_serialize","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vm_id","vm_id","vzip","vzip","VmStatusChanged","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","erased_serialize","from","into","into_any","into_any_arc","into_any_rc","serialize","status","to_owned","try_from","try_into","type_id","vm_id","vzip","HostManager","SendHostState","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cpu_allocated","cpu_load","cpu_total","current_power","erased_serialize","from","from","get_accumulated_slav","get_energy_consumed","id","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","memory_allocated","memory_load","memory_total","new","on","rack_id","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ConstantLoadModel","LoadModel","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","from","get_resource_load","get_resource_load","into","into_any","into_any_arc","into_any_rc","load_model_resolver","new","to_owned","try_from","try_into","type_id","vzip","FileLogger","Logger","StdoutLogger","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","default","default","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","log_debug","log_debug","log_debug","log_error","log_error","log_error","log_info","log_info","log_info","log_trace","log_trace","log_trace","log_warn","log_warn","log_warn","new","new","save_log","save_log","save_log","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_level","HostState","Monitoring","__clone_box","add_host","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cpu_load","cpu_total","from","from","get_host_state","get_host_states","get_host_vms","get_hosts_list","get_id","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","memory_load","memory_total","new","new","on","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vms","vzip","vzip","PlacementStore","add_host","add_scheduler","as_any","as_any_mut","borrow","borrow_mut","direct_allocation_commit","from","get_id","get_pool_state","into","into_any","into_any_rc","new","on","try_from","try_into","type_id","vzip","HostInfo","ResourcePoolState","__clone_box","__clone_box","add_host","allocate","allocations","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","can_allocate","clone","clone","clone_into","clone_into","cpu_available","cpu_overcommit","cpu_total","default","from","from","get_allocated_cpu","get_allocated_memory","get_available_cpu","get_available_memory","get_cpu_load","get_host","get_host_count","get_host_ids","get_hosts","get_memory_load","get_total_cpu","get_total_memory","id","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","memory_available","memory_overcommit","memory_total","new","new","rack_id","release","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Scheduler","add_host","as_any","as_any_mut","borrow","borrow_mut","from","id","into","into_any","into_any_rc","new","on","try_from","try_into","type_id","vzip","HostSLAVMetric","OverloadTimeFraction","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","from","into","into_any","into_any_arc","into_any_rc","new","to_owned","try_from","try_into","type_id","update","update","value","value","vzip","FailedToAllocate","Finished","Initializing","Migrating","ResourceConsumer","Running","VirtualMachine","VmStatus","__clone_box","__clone_box","__clone_box","allocation_start_time","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cpu_load_model","cpu_usage","cpu_usage","eq","erased_serialize","erased_serialize","fmt","fmt","from","from","from","get_cpu_load","get_memory_load","id","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","lifetime","memory_load_model","memory_usage","memory_usage","new","new","serialize","serialize","set_lifetime","set_start_time","start_duration","start_time","stop_duration","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_const_load","with_full_load","VmAPI","as_any","as_any_mut","borrow","borrow_mut","find_host_by_vm","from","generate_vm_id","get_id","get_vm","get_vm_allocation","get_vm_count","get_vm_status","into","into_any","into_any_rc","new","on","register_new_vm","try_from","try_into","type_id","vzip","Multi","MultiVMPlacementAlgorithm","Single","SingleVMPlacementAlgorithm","VMPlacementAlgorithm","as_any","as_any_mut","borrow","borrow_mut","from","into","into_any","into_any_rc","multi","placement_algorithm_resolver","select_host","select_hosts","single","try_from","try_into","type_id","vzip","best_fit","best_fit_threshold","cosine_similarity","delta_perp_distance","dot_product","first_fit","norm_diff","rack_anti_affinity","weighted_dot_product","worst_fit","BestFit","as_any","as_any_mut","borrow","borrow_mut","default","from","into","into_any","into_any_arc","into_any_rc","new","select_host","try_from","try_into","type_id","vzip","BestFitThreshold","as_any","as_any_mut","borrow","borrow_mut","default","from","from_string","into","into_any","into_any_arc","into_any_rc","new","select_host","try_from","try_into","type_id","vzip","CosineSimilarity","as_any","as_any_mut","borrow","borrow_mut","default","from","into","into_any","into_any_arc","into_any_rc","new","select_host","try_from","try_into","type_id","vzip","DeltaPerpDistance","as_any","as_any_mut","borrow","borrow_mut","default","from","into","into_any","into_any_arc","into_any_rc","new","select_host","try_from","try_into","type_id","vzip","DotProduct","as_any","as_any_mut","borrow","borrow_mut","default","from","into","into_any","into_any_arc","into_any_rc","new","select_host","try_from","try_into","type_id","vzip","FirstFit","as_any","as_any_mut","borrow","borrow_mut","default","from","into","into_any","into_any_arc","into_any_rc","new","select_host","try_from","try_into","type_id","vzip","L2NormDiff","as_any","as_any_mut","borrow","borrow_mut","default","from","into","into_any","into_any_arc","into_any_rc","new","select_host","try_from","try_into","type_id","vzip","RackAntiAffinity","as_any","as_any_mut","borrow","borrow_mut","default","from","into","into_any","into_any_arc","into_any_rc","new","select_hosts","try_from","try_into","type_id","vzip","WeightedDotProduct","as_any","as_any_mut","borrow","borrow_mut","default","from","into","into_any","into_any_arc","into_any_rc","new","select_host","try_from","try_into","type_id","vzip","WorstFit","as_any","as_any_mut","borrow","borrow_mut","default","from","into","into_any","into_any_arc","into_any_rc","new","select_host","try_from","try_into","type_id","vzip","CustomComponent","init","new","Experiment","SimulationCallbacks","as_any","as_any_mut","borrow","borrow_mut","callbacks","config","from","into","into_any","into_any_rc","log_dir","log_level","new","on_simulation_finish","on_simulation_start","on_step","run","try_from","try_into","type_id","vzip","azure_dataset_reader","dataset_reader","dataset_type","huawei_dataset_reader","standard_dataset_reader","vm_migrator","AzureDatasetReader","as_any","as_any_mut","borrow","borrow_mut","from","get_next_vm","into","into_any","into_any_arc","into_any_rc","new","parse","try_from","try_into","type_id","vzip","DatasetReader","VMRequest","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","cpu_load_model","cpu_usage","from","get_next_vm","id","into","into_any","into_any_rc","lifetime","memory_load_model","memory_usage","scheduler_name","start_time","to_owned","try_from","try_into","type_id","vzip","Azure","Huawei","VmDatasetType","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deserialize","eq","erased_serialize","fmt","from","from_str","into","into_any","into_any_arc","into_any_rc","serialize","to_owned","try_from","try_into","type_id","vzip","HuaweiDatasetReader","as_any","as_any_mut","borrow","borrow_mut","from","get_next_vm","into","into_any","into_any_rc","new","parse","try_from","try_into","type_id","vzip","StandardDatasetReader","as_any","as_any_mut","borrow","borrow_mut","default","from","get_next_vm","into","into_any","into_any_rc","new","parse","try_from","try_into","type_id","vzip","PerformMigrations","VmMigrator","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","erased_serialize","from","from","init","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","new","on","patch_custom_args","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CloudSimulation","add_host","add_host_in_rack","add_scheduler","as_any","as_any_mut","average_cpu_load","average_memory_load","begin_batch","borrow","borrow_mut","build_custom_component","context","cpu_allocation_rate","current_time","event_count","from","host","host_by_name","hosts","into","into_any","into_any_rc","log_debug","log_error","log_info","log_trace","log_warn","lookup_id","memory_allocation_rate","migrate_vm_to_host","monitoring","new","save_log","scheduler","scheduler_by_name","set_host_power_model","set_slav_metric","sim_config","spawn_batch","spawn_vm_now","spawn_vm_on_host","spawn_vm_with_delay","spawn_vms_from_dataset","step_for_duration","step_until_time","steps","try_from","try_into","type_id","vm","vm_api","vm_location","vm_status","vzip","with_logger"],"q":[[0,"dslab_iaas"],[5,"dslab_iaas::core"],[21,"dslab_iaas::core::common"],[63,"dslab_iaas::core::config"],[66,"dslab_iaas::core::config::exp_config"],[82,"dslab_iaas::core::config::options"],[84,"dslab_iaas::core::config::sim_config"],[203,"dslab_iaas::core::energy_meter"],[226,"dslab_iaas::core::events"],[230,"dslab_iaas::core::events::allocation"],[426,"dslab_iaas::core::events::monitoring"],[451,"dslab_iaas::core::events::vm"],[493,"dslab_iaas::core::events::vm_api"],[515,"dslab_iaas::core::host_manager"],[561,"dslab_iaas::core::load_model"],[584,"dslab_iaas::core::logger"],[636,"dslab_iaas::core::monitoring"],[681,"dslab_iaas::core::placement_store"],[701,"dslab_iaas::core::resource_pool"],[765,"dslab_iaas::core::scheduler"],[782,"dslab_iaas::core::slav_metric"],[807,"dslab_iaas::core::vm"],[892,"dslab_iaas::core::vm_api"],[915,"dslab_iaas::core::vm_placement_algorithm"],[937,"dslab_iaas::core::vm_placement_algorithms"],[947,"dslab_iaas::core::vm_placement_algorithms::best_fit"],[964,"dslab_iaas::core::vm_placement_algorithms::best_fit_threshold"],[982,"dslab_iaas::core::vm_placement_algorithms::cosine_similarity"],[999,"dslab_iaas::core::vm_placement_algorithms::delta_perp_distance"],[1016,"dslab_iaas::core::vm_placement_algorithms::dot_product"],[1033,"dslab_iaas::core::vm_placement_algorithms::first_fit"],[1050,"dslab_iaas::core::vm_placement_algorithms::norm_diff"],[1067,"dslab_iaas::core::vm_placement_algorithms::rack_anti_affinity"],[1084,"dslab_iaas::core::vm_placement_algorithms::weighted_dot_product"],[1101,"dslab_iaas::core::vm_placement_algorithms::worst_fit"],[1118,"dslab_iaas::custom_component"],[1121,"dslab_iaas::experiment"],[1144,"dslab_iaas::extensions"],[1150,"dslab_iaas::extensions::azure_dataset_reader"],[1167,"dslab_iaas::extensions::dataset_reader"],[1194,"dslab_iaas::extensions::dataset_type"],[1220,"dslab_iaas::extensions::huawei_dataset_reader"],[1236,"dslab_iaas::extensions::standard_dataset_reader"],[1253,"dslab_iaas::extensions::vm_migrator"],[1290,"dslab_iaas::simulation"]],"d":["","Trait for implementation of custom components.","Tools for running experiments with multiple simulation …","","The main entry point for simulation configuration and …","Common data structures.","","Energy meter calculates the host energy consumption.","Standard simulation events.","Host manager representing a physical machine.","Resource load models.","","Service that provides information about current state of …","Component managing the authoritative copy of resource pool …","Resource pool state.","Component performing allocation of resources for new VMs.","Service-level agreement violation metrics.","Representations of virtual machine and its status.","Component that provides information about all VMs in the …","Virtual machine placement algorithms.","","Describes a specific resource allocation, is used to pass …","Describes a result of checking the allocation feasibility.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Experiment configuration.","Config utils.","Simulation configuration.","Represents experiment configuration and allows to obtain …","","","","","Prints the current config state with values of dynamic …","Returns the argument unchanged.","Creates experiment config by reading parameter values from …","Returns configuration for next simulation run.","Calls <code>U::from(self)</code>.","","","","","","","Parses config value string, which consists of two parts - …","Parses options string from config value, returns map with …","Holds configuration of a single physical host or a set of …","Holds configuration of a single scheduler or a set of …","Represents simulation configuration.","Holds information about the used VM trace dataset.","","","","","VM placement algorithm used by scheduler(s).","Period is seconds for waiting before retrying failed …","Whether to schedule VMs based on real resource utilization …","","","","","","","","","","","","","","","","","","","","","","","","","Number of such hosts.","Number of such schedulers.","Host CPU capacity.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates simulation config by reading parameter values from …","Configurations of physical hosts.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Host memory capacity in GB.","Message delay in seconds for communications via network.","Host name. Should be set if count = 1.","Scheduler name. Should be set if count = 1.","Host name prefix. Full name is produced by appending host …","Scheduler name prefix. Full name is produced by appending …","Network throughput in GB/s. Currently used to compute VM …","Dataset path.","Configurations of VM schedulers.","Period length in seconds for sending statistics from host …","","","","","Length of simulation in seconds (for public datasets only).","Duration in seconds between simulation steps.","","","","","","Used VM trace dataset.","","","","","","","","","Dataset type.","","","","","Timeout in seconds after which unallocated VM becomes …","VM start duration in seconds.","VM stop duration in seconds.","","","","","Energy meter structure.","","","","","","","","","Returns the total energy consumption.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Creates component.","","","","","Invoked each time the host power consumption is changed to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Represents a single physical machine or host for short, …","","","","","","","","","","","","","Returns the total amount of allocated vCPUs.","Returns the current CPU load (used/total) by summing the …","Returns the host CPU capacity.","Returns the current power consumption.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the total SLAV value.","Returns the total energy consumption.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns the total amount of allocated memory.","Returns the current memory load (used/total) by summing …","Returns the host RAM capacity.","","","","","","","","","","","","","","The simplest load model, the constant load.","A resource load model is a function, which defines load of …","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Host state contains resource capacity and current actual …","This component stores the information about current host …","","Adds new host to internal storage.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the state of specified host.","Get all host states.","Returns IDs of active VMS on the specified host.","Returns an iterator of IDs and states of all hosts.","Returns component ID.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Creates component.","","","","","","","","","","","","","This component maintains the authoritative copy of …","Adds new host to resource pool state.","Registers scheduler so that PS can notify it about …","","","","","Processes direct allocation commit request bypassing the …","Returns the argument unchanged.","Returns component ID.","Returns a copy of the current resource pool state (e.g. to …","Calls <code>U::from(self)</code>.","","","Creates component.","","","","","","Stores host properties (resource capacity) and state …","","","","Adds host to resource pool.","Applies the specified application on the specified host.","","","","","","","","","","Checks if the specified allocation is currently possible …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns CPU capacity of the specified host currently in …","Returns memory capacity of the specified host currently in …","Returns the amount of available vCPUs on the specified …","Returns the amount of available memory on the specified …","Returns the CPU allocation rate (ratio of allocated to …","Returns host info by its ID.","Returns the number of hosts.","Returns IDs of all hosts.","Returns an iterator over all hosts.","Returns the memory allocation rate (ratio of allocated to …","Returns the total CPU capacity of the specified host.","Returns the total memory capacity of the specified host.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Creates host info with specified total and available host …","Creates empty resource pool state.","","Removes the specified allocation on the specified host.","","","","","","","","","","","Scheduler processes VM allocation requests by selecting …","Adds host to local resource pool state.","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Creates scheduler with specified VM placement algorithm.","","","","","","Trait for implementation of host-level SLA violation …","Overload Time Fraction (OTF) metric.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Called whenever the host’s CPU load is changed to update …","","Returns the current metric value.","","","","","","","Used to define resource consumption of virtual machine.","","Represents virtual machine (VM).","Status of virtual machine.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the current CPU load of VM by invoking the CPU …","Returns the current memory load of VM by invoking the …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns VM lifetime (it is updated when VM is migrated).","","","","Creates resource consumer with specified parameters.","Creates virtual machine with specified parameters.","","","Changes VM lifetime. It is called only due to VM migration.","Sets VM start time. Can be called multiple times due to VM …","Returns VM start duration (the value is taken from the …","Returns VM start time (it is updated when VM is migrated).","Returns VM stop duration (the value is taken from the …","","","","","","","","","","","","","","","","","Creates resource consumer with specified constant load.","Creates resource consumer with constant 100% load.","API to access information about virtual machines.","","","","","","Returns the argument unchanged.","Generates new VM ID if user did not pass any.","Returns component ID.","Returns the reference to VM information by VM ID.","Returns resource allocation for specified VM.","Returns the total VM count.","Returns the status of specified VM.","Calls <code>U::from(self)</code>.","","","Creates component.","Processes VM status change event emitted by host manager.","Registers information about new VM. Called when VM is …","","","","","","Trait for implementation of multi-VM placement algorithms.","","Trait for implementation of VM placement algorithms.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Best Fit algorithm.","Best Fit with threshold algorithm.","Cosine Similarity algorithm.","Delta Perp-Distance algorithm.","Dot Product algorithm.","First Fit algorithm.","L2 Norm Diff algorithm.","Rack anti-affinity algorithm.","Dot Product with resources weights algorithm.","Worst Fit algorithm.","Uses the most loaded (by allocated CPU) suitable host.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Uses the most loaded (by actual CPU load) suitable host. …","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Maximizes the cosine of the angle between the host’s …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Maximizes the improvement (absolute decrease) of the …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Maximizes the dot product between the host’s available …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Uses the first suitable host.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Minimizes the difference between the VM’s resource usage …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Multi VM placement algorithm which places each VM from …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Maximizes the weighted dot product between the host’s …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Uses the least loaded (by allocated CPU) suitable host.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Initializes component, emits required events.","Creates new component with provided simulation context.","Implements execution of experiment.","Trait for implementing custom callbacks for simulation …","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Runs upon the completion of a simulation run, returns …","Runs before starting a simulation run.","Runs on each step of a simulation run, returns false if …","Runs the experiment using the specified number of threads.","","","","","Dataset reader for Azure Trace for Packing 2020.","Trait for dataset readers.","VM dataset types.","Dataset reader for Huawei VM Placements Dataset (2021).","Dataset reader for standard JSON format.","Component performing automatic migration of VMs.","Dataset reader for Azure Trace for Packing 2020.","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Creates dataset reader.","Loads the dataset from CSV files with VM types and …","","","","","","Represents information about a single virtual machine from …","","","","","","","","","","Returns the argument unchanged.","Returns the next VM from dataset (if any).","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Holds supported VM dataset types.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Dataset reader for Huawei VM Placements Dataset.","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Creates dataset reader.","Loads the dataset from the original CSV file.","","","","","Dataset reader for standard JSON format.","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Creates dataset reader.","Loads the dataset from JSON file with VM requests.","","","","","","This component performs automatic migration of VMs to …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Used to provide the references to standard components …","","","","","","","","","","","Represents a simulation, provides methods for its …","Creates new host with specified name and resource …","Creates new host with specified name and resource …","Creates new scheduler with specified name and VM placement …","","","Returns the average CPU load across all hosts.","Returns the average memory load across all hosts.","Switches API to batch mode for building multi-VM requests. …","","","Creates custom component and adds it to the simulation.","Returns the main simulation context.","Returns the current CPU allocation rate (% of overall CPU …","Returns the current simulation time.","Returns the total number of created events.","Returns the argument unchanged.","Returns the reference to host manager (host energy …","Returns the reference to host manager (host energy …","Returns the map with references to host managers.","Calls <code>U::from(self)</code>.","","","","","","","","Returns the identifier of component by its name.","Returns the current memory allocation rate (% of overall …","Sends VM migration request to the specified target host.","Returns the reference to monitoring component (provides …","Creates a simulation with specified config.","","Returns the reference to scheduler.","Returns the reference to host scheduler.","Overrides the used host power model.","Overrides the used host-level SLAV metric.","Returns the simulation config.","Spawns the current batch as a single multi-VM requests and …","Creates new VM with specified properties, registers it in …","Creates new VM with specified properties and spawns it on …","Creates new VM with specified properties, registers it in …","Spawns all VMs from the given dataset.","Steps through the simulation with duration limit (see …","Steps through the simulation until the specified time (see …","Performs the specified number of steps through the …","","","","Returns the reference to VM information.","Returns the reference to VM API component (provides …","Returns the ID of host that runs the specified VM.","Returns the (possibly slightly outdated) status of …","","Creates a simulation with specified config."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,3,3,4,3,4,3,4,3,4,3,3,3,4,3,3,4,3,3,4,3,4,3,4,3,4,3,3,3,3,4,3,4,3,4,3,4,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,24,25,26,20,26,20,20,24,25,26,20,24,25,26,20,24,25,26,20,24,25,26,20,24,25,26,20,24,25,26,20,25,26,25,24,25,26,20,24,25,26,20,24,25,26,20,24,24,25,26,20,24,25,26,20,20,20,24,25,26,20,24,25,26,20,24,25,26,20,24,25,26,20,25,20,25,26,25,26,20,24,20,20,24,25,26,20,20,20,24,25,26,20,24,20,24,25,26,20,24,25,26,20,24,24,25,26,20,20,20,20,24,25,26,20,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,30,31,32,33,34,35,36,37,38,30,31,32,33,34,35,36,37,38,30,31,32,33,34,35,36,37,38,30,31,32,33,34,35,36,37,38,30,31,32,33,34,35,36,37,38,30,31,32,33,34,35,36,37,38,30,31,32,33,34,35,36,37,38,30,31,32,33,34,35,36,37,38,30,31,32,33,34,35,36,37,38,34,35,31,32,33,30,31,32,33,34,35,36,37,38,30,31,32,33,34,35,36,37,38,30,31,32,33,34,35,36,37,38,30,31,32,33,34,35,36,37,38,37,30,31,32,33,34,35,36,37,38,38,30,31,32,33,34,35,36,37,38,30,31,32,33,34,35,36,37,38,30,31,32,33,34,35,36,37,38,30,31,32,33,34,35,36,37,38,34,35,36,37,38,30,31,32,33,30,31,32,33,34,35,36,37,38,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,43,44,43,44,43,44,43,44,43,43,43,44,44,44,44,43,44,43,44,44,44,44,43,44,43,43,44,43,44,44,44,44,44,44,43,43,44,43,44,43,44,43,44,43,0,0,54,54,54,54,54,54,54,54,55,54,54,54,54,54,0,54,54,54,54,54,54,0,0,0,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,52,56,57,52,56,57,52,56,57,52,56,57,52,56,57,56,57,52,56,57,56,57,56,57,56,57,56,57,56,0,0,61,60,60,61,60,61,60,61,60,61,61,61,61,61,60,61,60,60,60,60,60,60,61,60,61,61,60,61,61,61,60,61,60,61,60,61,60,61,60,61,61,60,61,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0,0,68,67,67,67,68,68,67,68,67,68,67,68,67,67,68,67,68,67,68,68,68,67,68,67,67,67,67,67,67,67,67,67,67,67,67,67,68,68,67,68,67,68,67,68,67,68,68,68,68,67,68,67,68,67,68,67,68,67,68,67,68,67,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,50,72,50,72,72,73,73,73,73,0,73,0,0,73,74,75,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,74,74,75,73,73,75,73,73,73,74,75,75,75,75,73,74,75,73,74,75,73,73,74,75,75,74,74,75,74,75,73,75,75,75,75,75,75,73,74,75,73,73,74,75,73,74,75,73,74,75,73,74,75,74,74,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,71,0,71,0,0,71,71,71,71,71,71,71,71,71,0,79,77,71,71,71,71,71,0,0,0,0,0,0,0,0,0,0,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,0,102,102,0,0,92,92,92,92,92,92,92,92,92,92,92,92,92,91,91,91,92,92,92,92,92,0,0,0,0,0,0,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,0,96,96,96,96,96,96,96,96,96,96,105,96,96,96,96,96,96,96,96,96,96,96,96,96,96,97,97,0,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,0,0,100,101,100,101,100,101,100,101,100,100,100,100,101,100,101,101,100,101,100,100,101,100,101,101,101,100,100,101,100,101,100,101,100,101,100,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[3,3],[[]],0,[[4,4],5],[6,[[9,[7,8]]]],[[]],[[]],0,[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],0,[[3,14],9],[[]],[[],9],[[],9],[[],9],[[],9],[[],15],[[],15],[[]],[[]],0,0,0,0,[[],2],[[],2],[[]],[[]],[[16,17],18],[[]],[19,16],[16,[[21,[20]]]],[[]],[[[11,[10]]],[[11,[2,10]]]],[13,[[13,[2]]]],[[],9],[[],9],[[],15],[[]],[19],[19,[[23,[22,22]]]],0,0,0,0,[1],[1],[1],[1],0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,24],[25,25],[26,26],[20,20],[[]],[[]],[[]],[[]],0,0,0,[27,[[9,[24]]]],[27,[[9,[25]]]],[27,[[9,[26]]]],[27,[[9,[20]]]],[[24,24],5],[[25,25],5],[[26,26],5],[[20,20],5],[6,[[9,[7,8]]]],[6,[[9,[7,8]]]],[6,[[9,[7,8]]]],[6,[[9,[7,8]]]],[[24,17],18],[[24,17],18],[[25,17],18],[[26,17],18],[[20,17],18],[[]],[[]],[[]],[[]],[19,20],0,[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[[[11,[10]]],[[11,[2,10]]]],[[[11,[10]]],[[11,[2,10]]]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],0,0,0,0,0,0,0,0,0,0,[[24,14],9],[[25,14],9],[[26,14],9],[[20,14],9],0,0,[[]],[[]],[[]],[[]],[[],22],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[],15],[[],15],[[],15],[[],15],0,0,0,[[]],[[]],[[]],[[]],0,[1],[[],2],[[],2],[[]],[[]],[28,28],[[]],[[],28],[28,29],[[28,17],18],[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[[],28],[[]],[[],9],[[],9],[[],15],[[28,29,29]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,[[9,[7,8]]]],[6,[[9,[7,8]]]],[6,[[9,[7,8]]]],[6,[[9,[7,8]]]],[6,[[9,[7,8]]]],[6,[[9,[7,8]]]],[6,[[9,[7,8]]]],[6,[[9,[7,8]]]],[6,[[9,[7,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[[[11,[10]]],[[11,[2,10]]]],[[[11,[10]]],[[11,[2,10]]]],[[[11,[10]]],[[11,[2,10]]]],[[[11,[10]]],[[11,[2,10]]]],[[[11,[10]]],[[11,[2,10]]]],[[[11,[10]]],[[11,[2,10]]]],[[[11,[10]]],[[11,[2,10]]]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],0,[[30,14],9],[[31,14],9],[[32,14],9],[[33,14],9],[[34,14],9],[[35,14],9],[[36,14],9],[[37,14],9],[[38,14],9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],[[],2],[[],2],[[]],[[]],[39,39],[[]],0,[6,[[9,[7,8]]]],[[]],0,[[]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],0,0,0,[[39,14],9],[[]],[[],9],[[],9],[[],15],[[]],0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[40,40],[41,41],[[]],[[]],[6,[[9,[7,8]]]],[6,[[9,[7,8]]]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[[40,14],9],[[41,14],9],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],15],[[],15],0,0,[[]],[[]],0,[1],[[],2],[[],2],[[]],[[]],[42,42],[[]],[6,[[9,[7,8]]]],[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[[42,14],9],0,[[]],[[],9],[[],9],[[],15],0,[[]],0,0,[1],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[43,43],[[]],[44,29],[[44,29],29],[44,45],[[44,29],29],[6,[[9,[7,8]]]],[[]],[[]],[[44,29],29],[[44,29],29],0,[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[44,29],[[44,29],29],[44,46],[[[21,[45]],45,46,45,45,[13,[[48,[47]]]],5,49,[11,[50]],51,[13,[[48,[[11,[52]]]]]],[13,[20]]],44],[[44,53]],0,[[43,14],9],[[]],[[],9],[[],9],[[],9],[[],9],[[],15],[[],15],[[]],[[]],0,0,[1],[[],2],[[],2],[[]],[[]],[54,54],[[]],[[]],[[29,29],29],[[54,29,29],29],[[]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[22,[[11,[55]]]],[29,54],[[]],[[],9],[[],9],[[],15],[[]],0,0,0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],56],[[],57],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[[51,22]],[[56,51,22]],[[57,51,22]],[[51,22]],[[56,51,22]],[[57,51,22]],[[51,22]],[[56,51,22]],[[57,51,22]],[[51,22]],[[56,51,22]],[[57,51,22]],[[51,22]],[[56,51,22]],[[57,51,22]],[[],56],[[],57],[19,[[9,[58]]]],[[56,19],[[9,[58]]]],[[57,19],[[9,[58]]]],[[],9],[[],9],[[],9],[[],9],[[],15],[[],15],[[]],[[]],[59,56],0,0,[1],[[60,45,45,46]],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[61,61],[[]],0,0,[[]],[[]],[[60,45],61],[60,[[62,[45,61]]]],[[60,45],[[63,[45]]]],[60,[[64,[45,61]]]],[60,45],[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],0,0,[[51,[13,[[48,[[11,[52]]]]]]],60],[[45,46],61],[[60,53]],[[]],[[],9],[[],9],[[],9],[[],9],[[],15],[[],15],0,[[]],[[]],0,[[65,45,45,46,[21,[45]]]],[[65,45]],[[],2],[[],2],[[]],[[]],[[65,[66,[45]],[66,[45]]]],[[]],[65,45],[65,67],[[]],[[[11,[10]]],[[11,[2,10]]]],[13,[[13,[2]]]],[[5,[13,[[48,[47]]]],51,[13,[[48,[[11,[52]]]]]],20],65],[[65,53]],[[],9],[[],9],[[],15],[[]],0,0,[1],[1],[[67,45,45,46,45,46,[21,[45]]]],[[67,3,45]],0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[67,3,45,5],4],[68,68],[67,67],[[]],[[]],0,0,0,[[],67],[[]],[[]],[[67,45],45],[[67,45],46],[[67,45],45],[[67,45],46],[[67,45],29],[[67,45],68],[67,45],[67,[[66,[45]]]],[67,[[69,[45,68]]]],[[67,45],29],[[67,45],45],[[67,45],46],0,[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],0,0,0,[[45,45,46,45,46,[21,[45]]],68],[[],67],0,[[67,3,45]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],15],[[],15],[[]],[[]],0,[[70,45,45,46,[21,[45]]]],[[],2],[[],2],[[]],[[]],[[]],0,[[]],[[[11,[10]]],[[11,[2,10]]]],[13,[[13,[2]]]],[[67,[13,[[48,[60]]]],[13,[[48,[47]]]],45,71,51,[13,[[48,[[11,[52]]]]]],[13,[20]]],70],[[70,53]],[[],9],[[],9],[[],15],[[]],0,0,[1],[[],2],[[],2],[[]],[[]],[72,72],[[]],[[],72],[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[[],72],[[]],[[],9],[[],9],[[],15],[[29,29]],[[72,29,29]],[[],29],[72,29],[[]],0,0,0,0,0,0,0,0,[1],[1],[1],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[73,73],[74,74],[75,75],[[]],[[]],[[]],0,0,0,[[73,73],5],[6,[[9,[7,8]]]],[6,[[9,[7,8]]]],[[73,17],18],[[73,17],18],[[]],[[]],[[]],[[75,29],29],[[75,29],29],0,[[]],[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[[[11,[10]]],[[11,[2,10]]]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[75,29],0,0,0,[[45,46,[11,[55]],[11,[55]]],74],[[45,29,29,74,[13,[20]]],75],[[73,14],9],[[75,14],9],[[75,29]],[[75,29]],[75,29],[75,29],[75,29],[[]],[[]],[[]],[[],22],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[45,46,29,29],74],[[45,46],74],0,[[],2],[[],2],[[]],[[]],[[47,45],[[21,[45]]]],[[]],[47,45],[47,45],[[47,45],[[13,[[48,[75]]]]]],[[47,45],3],[47,76],[[47,45],73],[[]],[[[11,[10]]],[[11,[2,10]]]],[13,[[13,[2]]]],[51,47],[[47,53]],[[47,75]],[[],9],[[],9],[[],15],[[]],0,0,0,0,0,[[],2],[[],2],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[13,[[13,[2]]]],[77,71],[22,71],[[3,67,60],[[21,[45]]]],[[[78,[3]],67,60],[[21,[[66,[45]]]]]],[79,71],[[],9],[[],9],[[],15],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[]],[[]],[[],80],[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[[],80],[[80,3,67,60],[[21,[45]]]],[[],9],[[],9],[[],15],[[]],0,[[],2],[[],2],[[]],[[]],[[],81],[[]],[19,81],[[]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[29,81],[[81,3,67,60],[[21,[45]]]],[[],9],[[],9],[[],15],[[]],0,[[],2],[[],2],[[]],[[]],[[],82],[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[[],82],[[82,3,67,60],[[21,[45]]]],[[],9],[[],9],[[],15],[[]],0,[[],2],[[],2],[[]],[[]],[[],83],[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[[],83],[[83,3,67,60],[[21,[45]]]],[[],9],[[],9],[[],15],[[]],0,[[],2],[[],2],[[]],[[]],[[],84],[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[[],84],[[84,3,67,60],[[21,[45]]]],[[],9],[[],9],[[],15],[[]],0,[[],2],[[],2],[[]],[[]],[[],85],[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[[],85],[[85,3,67,60],[[21,[45]]]],[[],9],[[],9],[[],15],[[]],0,[[],2],[[],2],[[]],[[]],[[],86],[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[[],86],[[86,3,67,60],[[21,[45]]]],[[],9],[[],9],[[],15],[[]],0,[[],2],[[],2],[[]],[[]],[[],87],[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[[],87],[[87,[78,[3]],67,60],[[21,[[66,[45]]]]]],[[],9],[[],9],[[],15],[[]],0,[[],2],[[],2],[[]],[[]],[[],88],[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[[],88],[[88,3,67,60],[[21,[45]]]],[[],9],[[],9],[[],15],[[]],0,[[],2],[[],2],[[]],[[]],[[],89],[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[[],89],[[89,3,67,60],[[21,[45]]]],[[],9],[[],9],[[],15],[[]],0,[[]],[51,90],0,0,[[],2],[[],2],[[]],[[]],0,0,[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[13,[[13,[2]]]],0,0,[[16,[11,[91]],[21,[22]],59],92],[93,[[94,[22,22]]]],[93],[93,5],[[92,76]],[[],9],[[],9],[[],15],[[]],0,0,0,0,0,0,0,[[],2],[[],2],[[]],[[]],[[]],[95,[[21,[96]]]],[[]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[[29,29,29],95],[[95,22,22]],[[],9],[[],9],[[],15],[[]],0,0,[1],[[],2],[[],2],[[]],[[]],[96,96],[[]],0,0,[[]],[[],[[21,[96]]]],0,[[]],[[[11,[10]]],[[11,[2,10]]]],[13,[[13,[2]]]],0,0,0,0,0,[[]],[[],9],[[],9],[[],15],[[]],0,0,0,[1],[[],2],[[],2],[[]],[[]],[97,97],[[]],[27,[[9,[97]]]],[[97,97],5],[6,[[9,[7,8]]]],[[97,17],18],[[]],[19,[[9,[97]]]],[[]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[[97,14],9],[[]],[[],9],[[],9],[[],15],[[]],0,[[],2],[[],2],[[]],[[]],[[]],[98,[[21,[96]]]],[[]],[[[11,[10]]],[[11,[2,10]]]],[13,[[13,[2]]]],[29,98],[[98,22]],[[],9],[[],9],[[],15],[[]],0,[[],2],[[],2],[[]],[[]],[[],99],[[]],[99,[[21,[96]]]],[[]],[[[11,[10]]],[[11,[2,10]]]],[13,[[13,[2]]]],[[],99],[[99,19]],[[],9],[[],9],[[],15],[[]],0,0,[1],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[100,100],[[]],[6,[[9,[7,8]]]],[[]],[[]],[101],[[]],[[]],[[[11,[10]]],[[11,[2,10]]]],[[[11,[10]]],[[11,[2,10]]]],[12,[[12,[2]]]],[13,[[13,[2]]]],[13,[[13,[2]]]],[51,101],[[101,53]],[[101,29,[13,[[48,[60]]]],[13,[[48,[47]]]],[13,[20]]]],[[100,14],9],[[]],[[],9],[[],9],[[],9],[[],9],[[],15],[[],15],[[]],[[]],0,[[93,19,45,46],45],[[93,19,45,46,45],45],[[93,19,71],45],[[],2],[[],2],[93,29],[93,29],[93],[[]],[[]],[[93,19],[[13,[[48,[102]]]]]],[93,51],[93,29],[93,29],[93,46],[[]],[[93,45],[[13,[[48,[44]]]]]],[[93,19],[[13,[[48,[44]]]]]],[93,[[62,[45,[13,[[48,[44]]]]]]]],[[]],[[[11,[10]]],[[11,[2,10]]]],[13,[[13,[2]]]],[[93,22]],[[93,22]],[[93,22]],[[93,22]],[[93,22]],[[93,19],103],[93,29],[[93,45,45]],[93,[[13,[[48,[60]]]]]],[[104,20],93],[[93,19],[[9,[58]]]],[[93,45],[[13,[[48,[70]]]]]],[[93,19],[[13,[[48,[70]]]]]],[[93,49]],[[93,[11,[50]]]],[93,[[13,[20]]]],[93,[[66,[45]]]],[[93,74,29,[21,[45]],45],45],[[93,74,29,[21,[45]],45],45],[[93,74,29,[21,[45]],45,29],45],[[93,45,105]],[[93,29]],[[93,29]],[[93,46],5],[[],9],[[],9],[[],15],[[93,45],[[13,[[48,[75]]]]]],[93,[[13,[[48,[47]]]]]],[[93,45],[[21,[45]]]],[[93,45],73],[[]],[[104,20,[11,[52]]],93]],"c":[],"p":[[3,"Private"],[8,"Any"],[3,"Allocation"],[4,"AllocationVerdict"],[15,"bool"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[4,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"Serializer"],[3,"TypeId"],[3,"ExperimentConfig"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"SimulationConfig"],[4,"Option"],[3,"String"],[3,"HashMap"],[3,"VmDatasetConfig"],[3,"HostConfig"],[3,"SchedulerConfig"],[8,"Deserializer"],[3,"EnergyMeter"],[15,"f64"],[3,"AllocationRequest"],[3,"AllocationCommitRequest"],[3,"AllocationCommitSucceeded"],[3,"AllocationCommitFailed"],[3,"AllocationFailed"],[3,"AllocationReleased"],[3,"VmCreateRequest"],[3,"AllocationReleaseRequest"],[3,"MigrationRequest"],[3,"HostStateUpdate"],[3,"VMStarted"],[3,"VMDeleted"],[3,"VmStatusChanged"],[3,"SendHostState"],[3,"HostManager"],[15,"u32"],[15,"u64"],[3,"VmAPI"],[3,"RefCell"],[3,"HostPowerModel"],[8,"HostSLAVMetric"],[3,"SimulationContext"],[8,"Logger"],[3,"Event"],[3,"ConstantLoadModel"],[8,"LoadModel"],[3,"FileLogger"],[3,"StdoutLogger"],[3,"Error"],[4,"Level"],[3,"Monitoring"],[3,"HostState"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"Keys"],[3,"PlacementStore"],[3,"Vec"],[3,"ResourcePoolState"],[3,"HostInfo"],[3,"Values"],[3,"Scheduler"],[4,"VMPlacementAlgorithm"],[3,"OverloadTimeFraction"],[4,"VmStatus"],[3,"ResourceConsumer"],[3,"VirtualMachine"],[15,"usize"],[8,"MultiVMPlacementAlgorithm"],[15,"slice"],[8,"SingleVMPlacementAlgorithm"],[3,"BestFit"],[3,"BestFitThreshold"],[3,"CosineSimilarity"],[3,"DeltaPerpDistance"],[3,"DotProduct"],[3,"FirstFit"],[3,"L2NormDiff"],[3,"RackAntiAffinity"],[3,"WeightedDotProduct"],[3,"WorstFit"],[8,"Sized"],[8,"SimulationCallbacks"],[3,"Experiment"],[3,"CloudSimulation"],[3,"IndexMap"],[3,"AzureDatasetReader"],[3,"VMRequest"],[4,"VmDatasetType"],[3,"HuaweiDatasetReader"],[3,"StandardDatasetReader"],[3,"PerformMigrations"],[3,"VmMigrator"],[8,"CustomComponent"],[6,"Id"],[3,"Simulation"],[8,"DatasetReader"]]},\
"dslab_models":{"doc":"DSLab Common Models","t":"AAAAAAAAAIKAAAAAAAAADLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLNIENNLLLLLLLLKLLLLLLLLLAADLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLMLMLMLLLLLLLLLLMLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLIKKAADLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLIDDDDGDILLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLFFLLLLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["power","throughput_sharing","cpu","cpu_models","hdd","hdd_models","host","memory","memory_models","CpuPowerModel","get_power","asymptotic","constant","cubic","dvfs","empirical","linear","mse","square","state_based","AsymptoticCpuPowerModel","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","from","get_power","into","into_any","into_any_arc","into_any_rc","new","to_owned","try_from","try_into","type_id","vzip","ConstantCpuPowerModel","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","from","get_power","into","into_any","into_any_arc","into_any_rc","new","to_owned","try_from","try_into","type_id","vzip","CubicCpuPowerModel","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","from","get_power","into","into_any","into_any_arc","into_any_rc","new","to_owned","try_from","try_into","type_id","vzip","DvfsAwareCpuPowerModel","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","from","get_power","into","into_any","into_any_arc","into_any_rc","new","to_owned","try_from","try_into","type_id","vzip","EmpiricalCpuPowerModel","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","from","get_power","into","into_any","into_any_arc","into_any_rc","new","system_x3550_m3_xeon_x5675","to_owned","try_from","try_into","type_id","vzip","LinearCpuPowerModel","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","from","get_power","into","into_any","into_any_arc","into_any_rc","new","to_owned","try_from","try_into","type_id","vzip","MseCpuPowerModel","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","from","get_power","into","into_any","into_any_arc","into_any_rc","new","to_owned","try_from","try_into","type_id","vzip","SquareCpuPowerModel","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","from","get_power","into","into_any","into_any_arc","into_any_rc","new","to_owned","try_from","try_into","type_id","vzip","StateBasedCpuPowerModel","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","from","get_power","into","into_any","into_any_rc","new","to_owned","try_from","try_into","type_id","vzip","Active","HddPowerModel","HddState","Idle","Standby","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","from","get_power","into","into_any","into_any_arc","into_any_rc","to_owned","try_from","try_into","type_id","vzip","constant","state_based","ConstantHddPowerModel","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","from","get_power","into","into_any","into_any_arc","into_any_rc","new","to_owned","try_from","try_into","type_id","vzip","StateBasedHddPowerModel","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","from","get_power","ibm_36z15","into","into_any","into_any_arc","into_any_rc","new","to_owned","try_from","try_into","type_id","vzip","HostPowerModel","HostPowerModelBuilder","HostState","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","cpu","cpu_freq","cpu_idle","cpu_state","cpu_util","cpu_util","cpu_util_freq","cpu_util_state","default","default","default","from","from","from","get_power","hard_drive","hdd_state","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","memory","memory_read_util","memory_util","memory_write_util","new","other","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","MemoryPowerModel","get_power_advanced","get_power_simple","constant","ddr3","ConstantMemoryPowerModel","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","from","get_power_advanced","get_power_simple","into","into_any","into_any_arc","into_any_rc","new","to_owned","try_from","try_into","type_id","vzip","Ddr3MemoryPowerModel","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","custom_model","from","get_power_advanced","get_power_simple","into","into_any","into_any_arc","into_any_rc","modules_count","new","to_owned","try_from","try_into","type_id","vzip","ActivityFactorFn","ConstantFactorFn","EmpiricalFactorFn","FairThroughputSharingModel","RandomizedFactorFn","ResourceThroughputFn","SlowFairThroughputSharingModel","ThroughputSharingModel","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","get_factor","get_factor","get_factor","get_factor","insert","insert","insert","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","make_constant_throughput_fn","make_uniform_factor_fn","new","new","new","new","new","peek","peek","peek","pop","pop","pop","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_dynamic_throughput","with_dynamic_throughput","with_fixed_throughput","with_fixed_throughput"],"q":[[0,"dslab_models"],[2,"dslab_models::power"],[9,"dslab_models::power::cpu"],[11,"dslab_models::power::cpu_models"],[20,"dslab_models::power::cpu_models::asymptotic"],[40,"dslab_models::power::cpu_models::constant"],[60,"dslab_models::power::cpu_models::cubic"],[80,"dslab_models::power::cpu_models::dvfs"],[100,"dslab_models::power::cpu_models::empirical"],[121,"dslab_models::power::cpu_models::linear"],[141,"dslab_models::power::cpu_models::mse"],[161,"dslab_models::power::cpu_models::square"],[181,"dslab_models::power::cpu_models::state_based"],[200,"dslab_models::power::hdd"],[223,"dslab_models::power::hdd_models"],[225,"dslab_models::power::hdd_models::constant"],[245,"dslab_models::power::hdd_models::state_based"],[266,"dslab_models::power::host"],[335,"dslab_models::power::memory"],[338,"dslab_models::power::memory_models"],[340,"dslab_models::power::memory_models::constant"],[361,"dslab_models::power::memory_models::ddr3"],[384,"dslab_models::throughput_sharing"]],"d":["Power consumption models.","Throughput sharing model","CPU power model trait.","A collection of CPU power models.","Hard disk drive power model trait.","A collection of HDD power models.","Host power model.","Memory power model trait.","A collection of memory power models.","A model for estimating the power consumption of CPU based …","Returns CPU power consumption in Watts.","Asymptotic CPU power model.","Constant CPU power model.","Cubic CPU power model.","DVFS-aware CPU power model.","Empirical CPU power model.","Linear CPU power model.","MSE CPU power model.","Square CPU power model.","State-based CPU power model.","A non-linear power consumption model from Kliazovich et …","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Creates an asymptotic power model.","","","","","","A power model using a constant power consumption value.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Creates a constant power model.","","","","","","A power model based on cubic interpolation between the …","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Creates a cubic power model.","","","","","","A power model that takes into account the impact of …","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Creates a DVFS-aware power model.","","","","","","A power model based on measurements of actual power …","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Creates an empirical power model.","Empirical power model for IBM System x3550 M3 server with …","","","","","","A power model based on linear interpolation between the …","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Creates a linear power model.","","","","","","A non-linear power consumption model from Fan et al. Power …","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Creates a MSE power model.","","","","","","A power model based on square interpolation between the …","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Creates a square power model.","","","","","","A power model that takes into account CPU power management …","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Creates a state-based power model.","","","","","","The disk spins at full speed serving I/O requests.","A model for estimating the power consumption of hard disk …","Power states of hard disk drive.","The disk is spinning but does not service I/O requests …","The disk is spun down to reduce its power consumption (the …","","","","","","","","Returns the argument unchanged.","Returns the disk power consumption in Watts.","Calls <code>U::from(self)</code>.","","","","","","","","","Constant HDD power model.","State-based HDD power model.","A power model using a constant power consumption value …","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Creates a constant power model.","","","","","","A power model using different power consumption values for …","","","","","","","","Returns the argument unchanged.","","Creates a state-based power model for IBM 36Z15, a …","Calls <code>U::from(self)</code>.","","","","Creates a state-based power model.","","","","","","A model for estimating the power consumption of a physical …","Helper for building the host power model.","Stores host state properties essential to compute the …","","","","","","","","","","","","","","","Builds the host power model.","","","","","Sets the CPU power model.","Relative scaling of CPU frequency from 0 to 1, where 0 …","Sets the CPU power consumption in idle state (0% …","CPU power management state, specified as an index in …","Creates HostState with specified CPU utilization.","CPU utilization from 0 to 1.","Creates HostState with specified CPU utilization and …","Creates HostState with specified CPU utilization and state.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the power consumption of a host in Watts for a …","Sets the HDD power model.","Hard disk drive state.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Sets the memory power model.","Memory read utilization from 0 to 1.","Memory utilization from 0 to 1.","Memory read utilization from 0 to 1.","Creates the builder with default settings (all inner power …","Sets the power consumption of other host components.","","","","","","","","","","","","","","","A model for estimating the power consumption of memory …","Returns memory power consumption in Watts based on …","Returns memory power consumption in Watts based on a …","Constant memory power model.","DDR3 SDRAM power model.","A power model using a constant power consumption value.","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","Creates a constant power model.","","","","","","A power model for DDR3 SDRAM based on the technical note …","","","","","","","","Creates DDR3 power model with custom memory module …","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","Returns the memory modules count.","Creates DDR3 power model.","","","","","","Provides the function that computes the throughput factor …","Activity factor function with constant factor value.","Activity factor function which generates random factor …","Fast implementation of fair throughput sharing model.","Activity factor function which generates random factor …","Function that computes the total resource throughput based …","Slow implementation of fair throughput sharing model, …","Trait for throughput sharing model.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the throughput factor for activity represented by …","","","","Adds new activity into the model.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Creates resource throughput function which always returns …","Creates randomized activity factor function with uniform …","Creates model with given throughput and factor functions.","Creates model with given throughput and factor functions.","Creates function with the given factor value.","Creates function with the given distribution.","Creates function with the given weighted points.","Returns the next activity completion time (if any) along …","","","Returns the next activity completion time (if any) along …","","","","","","","","","","","","","","","","","","","","","","","Creates model with dynamic throughput, represented by …","Creates model with dynamic throughput, represented by …","Creates model with fixed throughput.","Creates model with fixed throughput."],"i":[0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,23,0,0,23,23,23,23,23,23,23,23,23,23,29,23,23,23,23,23,23,23,23,23,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,0,28,27,28,27,26,28,27,26,28,27,26,28,27,26,26,28,27,28,27,26,28,26,28,28,28,28,28,28,27,26,28,27,26,27,26,28,28,27,26,28,27,26,28,28,27,26,26,28,28,28,26,26,28,27,28,27,26,28,27,26,28,27,26,28,27,26,0,30,30,0,0,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,0,0,0,0,39,40,35,37,38,39,40,35,37,38,39,40,35,37,38,39,40,35,37,38,39,40,35,37,38,43,35,37,38,46,39,40,39,40,35,37,38,39,40,35,37,38,35,37,38,39,40,35,37,38,0,0,39,40,35,37,38,46,39,40,46,39,40,39,40,35,37,38,39,40,35,37,38,39,40,35,37,38,39,40,35,37,38,39,40,39,40],"f":[0,0,0,0,0,0,0,0,0,0,[[1,[2,[1]],[2,[3]]],1],0,0,0,0,0,0,0,0,0,0,[4],[[],5],[[],5],[[]],[[]],[6,6],[[]],[[]],[[6,1,[2,[1]],[2,[3]]],1],[[]],[[[8,[7]]],[[8,[5,7]]]],[9,[[9,[5]]]],[10,[[10,[5]]]],[[1,1,1],6],[[]],[[],11],[[],11],[[],12],[[]],0,[4],[[],5],[[],5],[[]],[[]],[13,13],[[]],[[]],[[13,1,[2,[1]],[2,[3]]],1],[[]],[[[8,[7]]],[[8,[5,7]]]],[9,[[9,[5]]]],[10,[[10,[5]]]],[1,13],[[]],[[],11],[[],11],[[],12],[[]],0,[4],[[],5],[[],5],[[]],[[]],[14,14],[[]],[[]],[[14,1,[2,[1]],[2,[3]]],1],[[]],[[[8,[7]]],[[8,[5,7]]]],[9,[[9,[5]]]],[10,[[10,[5]]]],[[1,1],14],[[]],[[],11],[[],11],[[],12],[[]],0,[4],[[],5],[[],5],[[]],[[]],[15,15],[[]],[[]],[[15,1,[2,[1]],[2,[3]]],1],[[]],[[[8,[7]]],[[8,[5,7]]]],[9,[[9,[5]]]],[10,[[10,[5]]]],[[1,1,1],15],[[]],[[],11],[[],11],[[],12],[[]],0,[4],[[],5],[[],5],[[]],[[]],[16,16],[[]],[[]],[[16,1,[2,[1]],[2,[3]]],1],[[]],[[[8,[7]]],[[8,[5,7]]]],[9,[[9,[5]]]],[10,[[10,[5]]]],[[[17,[1]]],16],[[],16],[[]],[[],11],[[],11],[[],12],[[]],0,[4],[[],5],[[],5],[[]],[[]],[18,18],[[]],[[]],[[18,1,[2,[1]],[2,[3]]],1],[[]],[[[8,[7]]],[[8,[5,7]]]],[9,[[9,[5]]]],[10,[[10,[5]]]],[[1,1],18],[[]],[[],11],[[],11],[[],12],[[]],0,[4],[[],5],[[],5],[[]],[[]],[19,19],[[]],[[]],[[19,1,[2,[1]],[2,[3]]],1],[[]],[[[8,[7]]],[[8,[5,7]]]],[9,[[9,[5]]]],[10,[[10,[5]]]],[[1,1,1],19],[[]],[[],11],[[],11],[[],12],[[]],0,[4],[[],5],[[],5],[[]],[[]],[20,20],[[]],[[]],[[20,1,[2,[1]],[2,[3]]],1],[[]],[[[8,[7]]],[[8,[5,7]]]],[9,[[9,[5]]]],[10,[[10,[5]]]],[[1,1],20],[[]],[[],11],[[],11],[[],12],[[]],0,[4],[[],5],[[],5],[[]],[[]],[21,21],[[]],[[]],[[21,1,[2,[1]],[2,[3]]],1],[[]],[[[8,[7]]],[[8,[5,7]]]],[10,[[10,[5]]]],[[[17,[[8,[22]]]]],21],[[]],[[],11],[[],11],[[],12],[[]],0,0,0,0,0,[4],[[],5],[[],5],[[]],[[]],[23,23],[[]],[[]],[23,1],[[]],[[[8,[7]]],[[8,[5,7]]]],[9,[[9,[5]]]],[10,[[10,[5]]]],[[]],[[],11],[[],11],[[],12],[[]],0,0,0,[4],[[],5],[[],5],[[]],[[]],[24,24],[[]],[[]],[[24,23],1],[[]],[[[8,[7]]],[[8,[5,7]]]],[9,[[9,[5]]]],[10,[[10,[5]]]],[1,24],[[]],[[],11],[[],11],[[],12],[[]],0,[4],[[],5],[[],5],[[]],[[]],[25,25],[[]],[[]],[[25,23],1],[[],25],[[]],[[[8,[7]]],[[8,[5,7]]]],[9,[[9,[5]]]],[10,[[10,[5]]]],[[1,1,1],25],[[]],[[],11],[[],11],[[],12],[[]],0,0,0,[4],[4],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[26,27],[28,28],[27,27],[[]],[[]],[[26,[8,[22]]],26],0,[[26,1],26],0,[1,28],0,[[1,1],28],[[1,3],28],[[],28],[[],27],[[],26],[[]],[[]],[[]],[[27,28],1],[[26,[8,[29]]],26],0,[[]],[[]],[[]],[[[8,[7]]],[[8,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[9,[[9,[5]]]],[10,[[10,[5]]]],[10,[[10,[5]]]],[10,[[10,[5]]]],[[26,[8,[30]]],26],0,0,0,[[],26],[[26,1],26],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[]],[[]],[[]],0,[[1,1],1],[1,1],0,0,0,[4],[[],5],[[],5],[[]],[[]],[31,31],[[]],[[]],[[31,1,1],1],[[31,1],1],[[]],[[[8,[7]]],[[8,[5,7]]]],[9,[[9,[5]]]],[10,[[10,[5]]]],[1,31],[[]],[[],11],[[],11],[[],12],[[]],0,[4],[[],5],[[],5],[[]],[[]],[32,32],[[]],[[1,1,1],32],[[]],[[32,1,1],1],[[32,1],1],[[]],[[[8,[7]]],[[8,[5,7]]]],[9,[[9,[5]]]],[10,[[10,[5]]]],[32,33],[1,32],[[]],[[],11],[[],11],[[],12],[[]],0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,1],[[35,34],1],[[[37,[[36,[1]]]],34],1],[[38,34],1],[[1,34]],[[39,1,34]],[[40,1,34]],[[]],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[9,[[9,[5]]]],[9,[[9,[5]]]],[9,[[9,[5]]]],[10,[[10,[5]]]],[10,[[10,[5]]]],[10,[[10,[5]]]],[10,[[10,[5]]]],[10,[[10,[5]]]],[1,41],[[1,1],[[37,[[42,[1]]]]]],[[41,[8,[43]]],39],[[41,[8,[43]]],40],[1,35],[[[36,[1]]],[[37,[[36,[1]]]]]],[44,[[11,[38,45]]]],[[],2],[39,2],[40,2],[[],2],[39,2],[40,2],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[41,39],[41,40],[1,39],[1,40]],"c":[],"p":[[15,"f64"],[4,"Option"],[15,"usize"],[3,"Private"],[8,"Any"],[3,"AsymptoticCpuPowerModel"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"Result"],[3,"TypeId"],[3,"ConstantCpuPowerModel"],[3,"CubicCpuPowerModel"],[3,"DvfsAwareCpuPowerModel"],[3,"EmpiricalCpuPowerModel"],[3,"Vec"],[3,"LinearCpuPowerModel"],[3,"MseCpuPowerModel"],[3,"SquareCpuPowerModel"],[3,"StateBasedCpuPowerModel"],[8,"CpuPowerModel"],[4,"HddState"],[3,"ConstantHddPowerModel"],[3,"StateBasedHddPowerModel"],[3,"HostPowerModelBuilder"],[3,"HostPowerModel"],[3,"HostState"],[8,"HddPowerModel"],[8,"MemoryPowerModel"],[3,"ConstantMemoryPowerModel"],[3,"Ddr3MemoryPowerModel"],[15,"u32"],[3,"SimulationContext"],[3,"ConstantFactorFn"],[8,"Distribution"],[3,"RandomizedFactorFn"],[3,"EmpiricalFactorFn"],[3,"FairThroughputSharingModel"],[3,"SlowFairThroughputSharingModel"],[6,"ResourceThroughputFn"],[3,"Uniform"],[8,"ActivityFactorFn"],[15,"slice"],[4,"WeightedError"],[8,"ThroughputSharingModel"]]},\
"dslab_mp":{"doc":"","t":"AAAAAAAAAADLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLMMLLLLMLLLLLLLLMMLLMMMLLLLLLLLLLNNNNNNEDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMAAAAAADLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLAAAAFFFFFFFFFFFFFFFFFFFFDLLLLLLLLMLLLLMLLLLLLLMLMLMLLLLAADLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLGNNNNEENGNGGDNGIDELLLLLLLLLLLLLLLLLLLLLLLKLLLLLKLMLLLLLLLLKLLLLLLLKLLLLLLLLLLLLLLLLLLLKLLLLKLKKLKLKMLLLLLLLLLLLLLLLLLLKLLLLLLDLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNNNNDNENENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMIIDGLLLLLLLLLKLLLLLLKLLLLLLLKKKLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["context","events","logger","mc","message","network","node","process","system","test","Context","as_any","as_any_mut","basic","borrow","borrow_mut","cancel_timer","from","from_simulation","into","into_any","into_any_rc","rand","send","send_local","set_timer","set_timer_once","time","try_from","try_into","type_id","vzip","MessageReceived","TimerFired","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","dst","dst_node","erased_serialize","erased_serialize","from","from","id","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","msg","proc","serialize","serialize","src","src_node","timer","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DropIncoming","DropOutgoing","LinkDisabled","LinkEnabled","LocalMessageReceived","LocalMessageSent","LogEntry","Logger","McLocalMessageReceived","McLocalMessageSent","McMessageCorrupted","McMessageDropped","McMessageDuplicated","McMessageReceived","McMessageSent","McNodeCrashed","McStarted","McTimerCancelled","McTimerFired","McTimerSet","MessageDropped","MessageReceived","MessageSent","NetworkPartition","NetworkReset","NodeConnected","NodeCrashed","NodeDisconnected","NodeRecovered","NodeStarted","PassIncoming","PassOutgoing","ProcessStarted","ProcessStateUpdated","TimerCancelled","TimerFired","TimerSet","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","eq","erased_serialize","fmt","from","from","has_log_file","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_mc_local_message_sent","is_mc_message_dropped","is_mc_message_duplicated","is_mc_message_received","is_mc_message_sent","is_mc_timer_fired","is_mc_timer_set","log","new","print","serialize","to_owned","trace","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_log_file","corrupted_msg","delay","dst","dst","dst","dst","dst","dst_node","dst_node","dst_node","dst_proc","dst_proc","dst_proc","from","from","group1","group2","msg","msg","msg","msg","msg","msg","msg","msg","msg","msg","msg","msg","msg_id","msg_id","msg_id","msg_id","msg_id","node","node","node","node","node","node","node","node","node","node","node","node","node","node","node","node","node","node_id","proc","proc","proc","proc","proc","proc","proc","proc","proc","proc","proc","proc","src","src","src","src","src","src_node","src_node","src_node","src_proc","src_proc","src_proc","state","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","timer","timer","timer","timer_id","timer_id","timer_id","timer_name","timer_name","timer_name","to","to","error","model_checker","predicates","state","strategies","strategy","McError","as_any","as_any_mut","borrow","borrow_mut","eq","fmt","from","into","into_any","into_any_arc","into_any_rc","message","new","print_trace","trace","try_from","try_into","type_id","vzip","ModelChecker","as_any","as_any_mut","borrow","borrow_mut","from","into","into_any","into_any_rc","new","run","run_from_states","run_from_states_with_change","run_with_change","try_from","try_into","type_id","vzip","collects","goals","invariants","prunes","any_collect","event_happened_n_times_current_run","got_n_local_messages","no_events","all_goals","any_goal","depth_reached","event_happened_n_times_current_run","got_n_local_messages","no_events","all_invariants","received_messages","state_depth","state_depth_current_run","time_limit","any_prune","events_limit","events_limit_per_proc","sent_messages_limit","state_depth","McState","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","current_run_trace","depth","eq","eq_with_dyn","equivalent","equivalent","events","fmt","from","hash","hash_with_dyn","into","into_any","into_any_rc","network","new","node_states","to_owned","trace","try_from","try_into","type_id","vzip","bfs","dfs","Bfs","as_any","as_any_mut","borrow","borrow_mut","build","collect","execution_mode","from","goal","into","into_any","into_any_rc","invariant","prune","reset","run","search_step_impl","stats","try_from","try_into","type_id","visited","vzip","Dfs","as_any","as_any_mut","borrow","borrow_mut","build","collect","execution_mode","from","goal","into","into_any","into_any_rc","invariant","prune","reset","run","search_step_impl","stats","try_from","try_into","type_id","visited","vzip","CollectFn","Debug","Default","Disabled","Event","EventOrId","ExecutionMode","Full","GoalFn","Id","InvariantFn","McResult","McStats","Partial","PruneFn","Strategy","StrategyConfig","VisitedStates","__clone_box","__clone_box","add_event","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","check_state","clone","clone","clone_into","clone_into","collect","collect","collected_states","corrupt_message","create_corrupted_receive","debug_log","default","default","duplicate_event","eq","eq","execution_mode","execution_mode","fmt","from","from","from","from","from","goal","goal","have_visited","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","invariant","invariant","mark_visited","on_final_state_reached","process_event","prune","prune","reset","run","search_step","search_step_impl","set_collect","stats","statuses","take_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","visited","visited_states","vzip","vzip","vzip","vzip","vzip","Message","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","cmp","data","eq","eq_with_dyn","equivalent","equivalent","erased_serialize","fmt","from","hash","hash_with_dyn","into","into_any","into_any_arc","into_any_rc","json","new","partial_cmp","serialize","size","tip","to_owned","try_from","try_into","type_id","vzip","Network","add_node","as_any","as_any_mut","borrow","borrow_mut","connect_node","corrupt_rate","disable_link","disabled_links","disconnect_node","drop_incoming","drop_outgoing","drop_rate","dupl_rate","enable_link","from","get_drop_incoming","get_drop_outgoing","into","into_any","into_any_rc","make_partition","max_delay","network_message_count","new","pass_incoming","pass_outgoing","proc_locations","reset","send_message","set_corrupt_rate","set_delay","set_delays","set_drop_rate","set_dupl_rate","set_proc_location","traffic","try_from","try_into","type_id","vzip","EventLogEntry","LocalMessageReceived","LocalMessageSent","MessageReceived","MessageSent","Node","OverrideExisting","ProcessEvent","SetOnce","TimerBehavior","TimerCancelled","TimerFired","TimerSet","__clone_box","__clone_box","__clone_box","add_process","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","crash","eq","event","event_log","fmt","fmt","fmt","from","from","from","from","get_process","id","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_crashed","local_outbox","max_size","name","name","new","new","on","process_names","read_local_messages","received_message_count","recover","send_local_message","sent_message_count","set_clock_skew","set_process_state","time","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","behavior","delay","dst","dst","msg","msg","msg","msg","name","name","name","src","src","Process","ProcessState","ProcessStateStub","StringProcessState","as_any","as_any_mut","borrow","borrow_mut","downcast","downcast_mut","downcast_rc","downcast_ref","eq","eq_with_dyn","eq_with_dyn","equivalent","equivalent","fmt","from","hash","hash_with_dyn","hash_with_dyn","into","into_any","into_any_arc","into_any_rc","is","max_size","on_local_message","on_message","on_timer","set_state","state","try_from","try_into","type_id","vzip","System","add_node","add_process","as_any","as_any_mut","borrow","borrow_mut","crash_node","event_log","from","gen_range","get_mut_node","get_node","into","into_any","into_any_rc","local_outbox","logger","max_size","network","new","node_is_crashed","node_names","nodes","proc_node_is_crashed","proc_node_name","process_names","random_string","read_local_messages","received_message_count","recover_node","send_local_message","sent_message_count","set_node_clock_skew","sim","step","step_for_duration","step_until_local_message","step_until_local_message_max_steps","step_until_local_message_timeout","step_until_no_events","steps","time","try_from","try_into","type_id","vzip","with_log_file","Test","TestResult","TestSuite","add","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","default","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","new","run","run_test","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"dslab_mp"],[10,"dslab_mp::context"],[32,"dslab_mp::events"],[80,"dslab_mp::logger"],[165,"dslab_mp::logger::LogEntry"],[275,"dslab_mp::mc"],[281,"dslab_mp::mc::error"],[301,"dslab_mp::mc::model_checker"],[319,"dslab_mp::mc::predicates"],[323,"dslab_mp::mc::predicates::collects"],[327,"dslab_mp::mc::predicates::goals"],[333,"dslab_mp::mc::predicates::invariants"],[338,"dslab_mp::mc::predicates::prunes"],[343,"dslab_mp::mc::state"],[374,"dslab_mp::mc::strategies"],[376,"dslab_mp::mc::strategies::bfs"],[400,"dslab_mp::mc::strategies::dfs"],[424,"dslab_mp::mc::strategy"],[549,"dslab_mp::message"],[583,"dslab_mp::network"],[625,"dslab_mp::node"],[728,"dslab_mp::node::ProcessEvent"],[741,"dslab_mp::process"],[778,"dslab_mp::system"],[826,"dslab_mp::test"]],"d":["","","","Module for testing message passing code with model …","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Model checking error.","Model checker configuration and launching.","Standard predicate implementations that can be used in …","Definition of model checking state.","Implementations of model checking search strategies.","Main logic and configuration of model checking strategy.","Stores information about an error found by model checking.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Returns the error message.","Creates new model checking error.","Prints error trace.","Returns the execution trace which led the system to …","","","","","Main class of (and entrypoint to) the model checking …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Creates a new model checker with the specified strategy …","Runs model checking and returns the result on completion.","Runs model checking from a set of initial states.","Runs model checking from a set of initial states after …","Runs model checking after applying callback.","","","","","Collects select states that should be collected for …","Goals check if state is final.","Invariants check whether state is correct or not.","Prunes cut execution branches if further analysis is …","Combines multiple collect functions by returning <code>true</code> iff …","Checks if trace to given state has at least <code>n</code> events …","Checks if the given process produced <code>n</code> local messages.","Checks if current state has no more active events.","Combines multiple goal functions by returning <code>Some()</code> iff …","Combines multiple goal functions by returning <code>Some()</code> iff …","Checks if current state is on given depth.","Checks if current run trace has at least <code>n</code> events matching …","Checks if the given process produced <code>n</code> local messages.","Checks if current state has no more active events.","Combines multiple invariant functions by returning <code>Ok</code> iff …","Verifies that the set of local messages delivered by a …","Checks that state depth does not exceed the given value.","Checks that state depth for current run does not exceed …","Checks that overall run duration does not exceed the given …","Combines multiple prune functions by returning <code>Some()</code> iff …","Prunes states where the number of events matching the …","Prunes states where the number of events matching the …","Prunes states where some process has sent more messages …","Prunes states with depth exceeding the given value.","Stores comprehensive information about the state of the …","","","","","","","","Creates a slice of trace that represents current model …","Depth of the state in the state graph (i.e. the number of …","","","","","List of events waiting for delivery.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","State of the system network","Creates a new state with the specified events in the …","States of nodes in the system.","","Sequence of events corresponding to a system execution …","","","","","Implementation of model checking BFS search strategy.","Implementation of model checking DFS search strategy.","The search strategy based on the BFS algorithm.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","The search strategy based on the DFS algorithm.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Checks if given state should be collected. Returns true if …","Execution with verbose output intended for debugging …","Default execution mode with reduced output intended for …","Does not store any data about the previously visited …","","Holds either <code>McEvent</code> or <code>McEventId</code>.","Defines the mode in which the model checking algorithm is …","Stores the visited states and checks for equality of …","Checks if the given state is the final state, i.e. all …","","Checks if some invariant holds in the given state. Returns …","Result of model checking run - statistics for successful …","Model checking execution statistics.","Stores the hashes of visited states and checks for …","Decides whether to prune the executions originating from …","Trait with common functions for different model checking …","Configuration of model checking strategy.","Alternative implementations of storing the previously …","","","Adds the event to pending events list.","","","","","","","","","","","","","","","","","","","","","Builds a new strategy instance.","Applies user-defined checking functions to the system …","","","","","Returns the collect function.","Sets collect function.","States that were collected with Collect predicate","Applies corruption to the Message.","Creates MessageReceived event with corrupted msg.","Prints the log for particular event if the execution mode …","","","Duplicates event from pending events list by id. The new …","","","Returns the used execution mode.","Sets execution mode.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the goal function.","Sets goal function.","Checks if the system state was visited before.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the invariant function.","Sets invariant function.","Marks the system state as already visited.","Adds new information to model checking execution …","Explores the possible system states reachable from the …","Returns the prune function.","Sets prune function.","Resets the internal state so that the strategy can be …","Launches the strategy execution.","Applies the specified event to the system, calls …","Callback which in called whenever a new system state is …","Set collect predicate.","Returns the model checking execution stats.","Counters for statuses run achieved","Takes the event from pending events by id.","","","","","","","","","","","","","","","","","","Returns the visited states set.","Sets visited states cache.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a boxed object from a boxed trait object if the …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","Returns true if the trait object wraps an object of type …","Returns the maximum size of process inner data observed so …","Called when a <em>local</em> message is received.","Called when a message is received.","Called when a timer fires.","Restores the process state.","Returns the process state.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,16,17,16,17,16,17,16,17,16,17,16,17,16,17,16,16,16,17,16,17,16,16,17,16,17,16,17,16,17,16,17,16,17,16,16,17,16,17,16,17,16,17,16,17,16,17,23,23,23,23,23,23,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,23,24,23,24,23,24,23,23,23,24,23,23,23,24,23,24,24,23,24,23,24,23,24,23,23,23,23,23,23,23,23,24,24,23,23,23,24,24,23,24,23,24,23,24,23,24,77,78,79,80,81,77,82,83,84,85,83,84,85,86,87,88,88,89,90,83,84,85,91,92,79,80,81,77,82,89,90,83,84,85,93,94,89,90,95,96,97,98,78,99,100,101,102,103,104,105,106,93,94,89,90,78,99,100,105,91,92,107,108,109,79,80,81,77,82,83,84,85,83,84,85,105,93,94,89,90,83,84,85,95,96,97,98,78,99,100,86,87,101,102,103,104,88,110,105,107,108,109,78,99,100,78,99,100,86,87,0,0,0,0,0,0,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,50,50,52,56,0,0,52,0,56,0,0,0,52,0,0,0,0,50,51,111,33,52,56,50,51,33,52,56,50,51,33,52,56,50,51,33,52,56,50,51,111,111,50,51,50,51,111,33,51,111,111,111,33,51,111,50,51,111,33,51,33,52,56,50,51,111,33,111,33,52,56,50,51,33,52,56,50,51,56,50,33,52,56,50,51,111,33,111,111,111,111,33,111,111,111,111,111,111,51,111,50,51,33,52,56,50,51,33,52,56,50,51,33,52,56,50,51,111,33,33,52,56,50,51,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,0,67,67,67,67,0,66,0,66,0,67,67,67,65,66,67,63,63,65,66,67,63,65,66,67,63,65,66,67,63,65,66,67,65,66,67,65,66,67,63,66,65,63,65,66,67,63,65,66,67,63,63,63,65,66,67,63,65,66,67,65,66,67,63,65,66,67,63,63,63,63,63,63,65,63,63,63,63,63,63,63,63,63,65,65,66,67,63,65,66,67,63,65,66,67,63,65,66,67,63,65,66,67,112,112,113,114,113,114,115,116,112,117,118,113,114,0,0,0,0,69,69,69,69,47,47,47,47,69,47,69,69,69,69,69,69,47,69,69,69,69,69,47,64,64,64,64,64,64,69,69,69,69,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,76,119,76,119,76,119,76,119,76,76,119,76,119,76,119,76,119,76,119,76,76,76,76,119,76,119,76,119,76,119,76],"f":[0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[2,3,3,4],5],[[]],[[]],[[5,6]],[[]],[[2,[9,[[8,[7]]]],3],5],[[]],[[[11,[10]]],[[11,[1,10]]]],[9,[[9,[1]]]],[5,3],[[5,12,2]],[[5,12]],[[5,6,3]],[[5,6,3]],[5,3],[[],13],[[],13],[[],14],[[]],0,0,[15],[15],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[16,16],[17,17],[[]],[[]],0,0,[18,[[13,[19,20]]]],[18,[[13,[19,20]]]],[[]],[[]],0,[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],0,0,[[16,22],13],[[17,22],13],0,0,0,[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[23,23],[[]],[[],24],[[23,23],25],[18,[[13,[19,20]]]],[[23,26],27],[[]],[[]],[24,25],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[23,25],[23,25],[23,25],[23,25],[23,25],[23,25],[23,25],[[24,23]],[[],24],[23],[[23,22],13],[[]],[24,[[28,[23]]]],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[]],[[]],[29,24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[30,30],25],[[30,26],27],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[21,[[21,[1]]]],[9,[[9,[1]]]],[30,2],[[2,[28,[23]]],30],[30],[30,[[28,[23]]]],[[],13],[[],13],[[],14],[[]],0,[[],1],[[],1],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[9,[[9,[1]]]],[31,32],[[32,33],34],[[32,33,[36,[35]]],34],[[32,33,[36,[35]],37],34],[[32,33,38],34],[[],13],[[],13],[[],14],[[]],0,0,0,0,[[[28,[39]]],39],[[37,40],39],[[[41,[2]],[41,[2]],40],39],[[],39],[[[28,[42]]],42],[[[28,[42]]],42],[4,42],[[37,40],42],[[[41,[2]],[41,[2]],40],42],[[],42],[[[28,[43]]],43],[[[41,[2]],[41,[2]],[36,[2]]],43],[4,43],[4,43],[44,43],[[[28,[45]]],45],[[37,40],45],[[37,[28,[2]],40],45],[4,45],[4,45],0,[15],[[],1],[[],1],[[]],[[]],[35,35],[[]],[35,[[46,[23]]]],0,[[35,35],25],[47,25],[[],25],[[],25],0,[[35,26],27],[[]],[[35,48]],[48],[[]],[[[11,[10]]],[[11,[1,10]]]],[9,[[9,[1]]]],0,0,0,[[]],0,[[],13],[[],13],[[],14],[[]],0,0,0,[[],1],[[],1],[[]],[[]],[33,49],[49,39],[49,50],[[]],[49,42],[[]],[[[11,[10]]],[[11,[1,10]]]],[9,[[9,[1]]]],[49,43],[49,45],[49],0,0,[49,51],[[],13],[[],13],[[],14],[49,52],[[]],0,[[],1],[[],1],[[]],[[]],[33,53],[53,39],[53,50],[[]],[53,42],[[]],[[[11,[10]]],[[11,[1,10]]]],[9,[[9,[1]]]],[53,43],[53,45],[53],0,0,[53,51],[[],13],[[],13],[[],14],[53,52],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15],[15],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,54],[35,[[55,[[13,[30]]]]]],[50,50],[51,51],[[]],[[]],[[],39],[[33,39],33],0,[12,12],0,0,[[],33],[[],51],0,[[50,50],25],[[51,51],25],[[],50],[[33,50],33],[[51,26],27],[[]],[[]],[[]],[[]],[[]],[[],42],[[33,42],33],[35,25],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[],43],[[33,43],33],[35],[2],0,[[],45],[[33,45],33],[[]],0,0,0,[39],[[],51],0,0,[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],52],[[33,52],33],[[]],[[]],[[]],[[]],[[]],0,[15],[[],1],[[],1],[[]],[[]],[12,12],[[]],[[12,12],57],0,[[12,12],25],[47,25],[[],25],[[],25],[18,[[13,[19,20]]]],[[12,26],[[13,[58]]]],[[]],[[12,48]],[48],[[]],[[[11,[10]]],[[11,[1,10]]]],[21,[[21,[1]]]],[9,[[9,[1]]]],[[[41,[2]],59],12],[[[41,[2]],[41,[2]]],12],[[12,12],[[55,[57]]]],[[12,22],13],[12,40],0,[[]],[[],13],[[],13],[[],14],[[]],0,[[60,2,61]],[[],1],[[],1],[[]],[[]],[[60,6]],[60,3],[[60,6,6]],[60,36],[[60,6]],[[60,6]],[[60,6]],[60,3],[60,3],[[60,6,6]],[[]],[60,[[36,[2]]]],[60,[[36,[2]]]],[[]],[[[11,[10]]],[[11,[1,10]]]],[9,[[9,[1]]]],[[60,[46,[6]],[46,[6]]]],[60,3],[60,4],[[7,[9,[[8,[24]]]]],60],[[60,6]],[[60,6]],[60,[[62,[2,2]]]],[60],[[60,12,6,6]],[[60,3]],[[60,3]],[[60,3,3]],[[60,3]],[[60,3]],[[60,2,2]],[60,4],[[],13],[[],13],[[],14],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[15],[15],[15],[[63,6,[11,[64]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[65,65],[66,66],[67,67],[[]],[[]],[[]],[63],[[66,66],25],0,[[63,6],[[28,[65]]]],[[65,26],27],[[66,26],27],[[67,26],27],[[]],[[]],[[]],[[]],[[63,6],[[55,[64]]]],0,[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[63,25],[[63,6],[[28,[12]]]],[[63,6],4],[63,6],0,[[2,[9,[[8,[60]]]],7,[9,[[8,[24]]]]],63],[[3,67],65],[[63,68]],[63,[[28,[2]]]],[[63,6],[[55,[[28,[12]]]]]],[[63,6],4],[63],[[63,2,12]],[[63,6],4],[[63,3]],[[63,6,[9,[47]]]],0,[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[[11,[47]]],[[13,[[11,[47]],[11,[47]]]]]],[47,[[55,[47]]]],[[[9,[47]]],[[13,[[9,[47]],[9,[47]]]]]],[47,[[55,[47]]]],[[69,69],25],[47,25],[47,25],[[],25],[[],25],[[69,26],27],[[]],[[69,48]],[48],[48],[[]],[[[11,[10]]],[[11,[1,10]]]],[21,[[21,[1]]]],[9,[[9,[1]]]],[47,25],[[],4],[[12,5]],[[12,2,5]],[[2,5]],[[[9,[47]]]],[[],[[9,[47]]]],[[],13],[[],13],[[],14],[[]],0,[[31,6]],[[31,6,[11,[64]],6]],[[],1],[[],1],[[]],[[]],[[31,6]],[[31,6],[[28,[65]]]],[[]],[[31,[71,[70]]],70],[[31,6],[[55,[[72,[63]]]]]],[[31,6],[[55,[[73,[63]]]]]],[[]],[[[11,[10]]],[[11,[1,10]]]],[9,[[9,[1]]]],[[31,6],[[28,[12]]]],[31,[[72,[24]]]],[[31,6],4],[31,[[72,[60]]]],[4,31],[[31,6],25],[31,[[28,[2]]]],[31,[[28,[2]]]],[[31,6],25],[[31,6],2],[31,[[28,[2]]]],[[31,40],2],[[31,6],[[28,[12]]]],[[31,6],4],[[31,6]],[[31,6,12]],[[31,6],4],[[31,6,3]],[31,74],[31,25],[[31,3],25],[[31,6],[[13,[[28,[12]],6]]]],[[31,6,75],[[13,[[28,[12]],6]]]],[[31,6,3],[[13,[[28,[12]],6]]]],[31],[[31,4],25],[31,3],[[],13],[[],13],[[],14],[[]],[[4,29],31],0,0,0,[[76,6]],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[],76],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[],76],[76],[[76,6]],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[]],[[]]],"c":[],"p":[[8,"Any"],[3,"String"],[15,"f64"],[15,"u64"],[3,"Context"],[15,"str"],[3,"SimulationContext"],[3,"RefCell"],[3,"Rc"],[3,"Global"],[3,"Box"],[3,"Message"],[4,"Result"],[3,"TypeId"],[3,"Private"],[3,"MessageReceived"],[3,"TimerFired"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Arc"],[8,"Serializer"],[4,"LogEntry"],[3,"Logger"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Vec"],[3,"Path"],[3,"McError"],[3,"System"],[3,"ModelChecker"],[3,"StrategyConfig"],[6,"McResult"],[3,"McState"],[3,"HashSet"],[8,"Fn"],[8,"FnOnce"],[6,"CollectFn"],[15,"usize"],[8,"Into"],[6,"GoalFn"],[6,"InvariantFn"],[3,"Duration"],[6,"PruneFn"],[15,"slice"],[8,"ProcessState"],[8,"Hasher"],[3,"Bfs"],[4,"ExecutionMode"],[3,"McStats"],[4,"VisitedStates"],[3,"Dfs"],[8,"Sized"],[4,"Option"],[4,"EventOrId"],[4,"Ordering"],[3,"Error"],[8,"Serialize"],[3,"Network"],[6,"Id"],[3,"HashMap"],[3,"Node"],[8,"Process"],[3,"EventLogEntry"],[4,"TimerBehavior"],[4,"ProcessEvent"],[3,"Event"],[3,"ProcessStateStub"],[8,"SampleUniform"],[8,"SampleRange"],[3,"RefMut"],[3,"Ref"],[3,"Simulation"],[15,"u32"],[3,"TestSuite"],[13,"McMessageCorrupted"],[13,"TimerSet"],[13,"McMessageSent"],[13,"McMessageReceived"],[13,"McMessageDropped"],[13,"McMessageDuplicated"],[13,"MessageSent"],[13,"MessageReceived"],[13,"MessageDropped"],[13,"LinkDisabled"],[13,"LinkEnabled"],[13,"NetworkPartition"],[13,"LocalMessageSent"],[13,"LocalMessageReceived"],[13,"McLocalMessageSent"],[13,"McLocalMessageReceived"],[13,"NodeStarted"],[13,"ProcessStarted"],[13,"NodeDisconnected"],[13,"NodeConnected"],[13,"NodeCrashed"],[13,"NodeRecovered"],[13,"TimerFired"],[13,"TimerCancelled"],[13,"DropIncoming"],[13,"PassIncoming"],[13,"DropOutgoing"],[13,"PassOutgoing"],[13,"ProcessStateUpdated"],[13,"McNodeCrashed"],[13,"McTimerSet"],[13,"McTimerFired"],[13,"McTimerCancelled"],[13,"NetworkReset"],[8,"Strategy"],[13,"TimerSet"],[13,"MessageSent"],[13,"MessageReceived"],[13,"LocalMessageSent"],[13,"LocalMessageReceived"],[13,"TimerFired"],[13,"TimerCancelled"],[3,"Test"]]},\
"dslab_mp_python":{"doc":"","t":"DDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["PyProcess","PyProcessFactory","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone_into","from","from","into","into","into_any","into_any","into_any_rc","into_any_rc","max_size","new","on_local_message","on_message","on_timer","set_max_size_freq","set_state","state","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"dslab_mp_python"]],"d":["","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,8,3,8,3,8,3,8,3,8,3,8,8,3,8,3,8,3,8,3,8,8,3,8,8,8,8,8,8,8,3,8,3,8,3,8,3,8],"f":[0,0,[1],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[3,[6,[[5,[4]]]],7],8],[8,8],[[]],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[8,7],[[12,12],3],[[8,13,14]],[[8,13,15,14]],[[8,15,14]],[[8,16]],[[8,[11,[17]]]],[8,[[11,[17]]]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]]],"c":[],"p":[[3,"Private"],[8,"Any"],[3,"PyProcessFactory"],[3,"PyTuple"],[3,"Py"],[8,"IntoPy"],[15,"u64"],[3,"PyProcess"],[3,"Global"],[3,"Box"],[3,"Rc"],[15,"str"],[3,"Message"],[3,"Context"],[3,"String"],[15,"u32"],[8,"ProcessState"],[4,"Result"],[3,"TypeId"]]},\
"dslab_network":{"doc":"A library for modeling network communications. It can be …","t":"CCCCCCCCCCCCAAAAAAAEDGNNLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLDDILLLLLLKLLLLLLLLMMMLLLLLMLLLLLLLLKKMLKLLMMMKLLLLLLLLLLLLCCCAAADLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLMLLLLLLLLLLLLLLLDGLLLLLLLLLMLLLLDIDDLLLLLLLLLLLLLLLLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLGDLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BandwidthSharingPolicy","DataTransfer","DataTransferCompleted","Link","LinkId","Message","MessageDelivered","Network","NetworkModel","Node","NodeId","Topology","link","model","models","network","node","routing","topology","BandwidthSharingPolicy","Link","LinkId","NonShared","Shared","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","bandwidth","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","latency","non_shared","shared","sharing_policy","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DataTransfer","DataTransferCompleted","NetworkModel","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","bandwidth","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","dst","dst_node_id","dt","erased_serialize","erased_serialize","fmt","from","from","id","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_topology_aware","latency","notification_dst","on_topology_change","on_transfer_completion","serialize","serialize","size","src","src_node_id","start_transfer","to_owned","to_owned","topology","topology_mut","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ConstantBandwidthNetworkModel","SharedBandwidthNetworkModel","TopologyAwareNetworkModel","constant","shared","topology_aware","ConstantBandwidthNetworkModel","as_any","as_any_mut","bandwidth","borrow","borrow_mut","from","into","into_any","into_any_arc","into_any_rc","is_topology_aware","latency","new","on_transfer_completion","start_transfer","try_from","try_into","type_id","vzip","SharedBandwidthNetworkModel","as_any","as_any_mut","bandwidth","borrow","borrow_mut","from","into","into_any","into_any_rc","is_topology_aware","latency","new","on_transfer_completion","start_transfer","try_from","try_into","type_id","vzip","TopologyAwareNetworkModel","as_any","as_any_mut","bandwidth","borrow","borrow_mut","default","from","into","into_any","into_any_rc","is_topology_aware","latency","new","on_topology_change","on_transfer_completion","start_transfer","topology","topology_mut","try_from","try_into","type_id","vzip","with_full_mesh_optimization","with_routing","Message","MessageDelivered","Network","__clone_box","__clone_box","add_full_duplex_link","add_link","add_node","add_unidirectional_link","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","bandwidth","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","data","dst","erased_serialize","erased_serialize","from","from","from","get_location","get_location_opt","get_node_id","get_nodes","id","init_topology","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","latency","msg","new","on","send_event","send_msg","serialize","serialize","set_location","src","to_owned","to_owned","transfer_data","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Node","NodeId","as_any","as_any_mut","borrow","borrow_mut","from","into","into_any","into_any_arc","into_any_rc","name","try_from","try_into","type_id","vzip","PathIterator","RoutingAlgorithm","ShortestPathDijkstra","ShortestPathFloydWarshall","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","default","from","from","from","get_path_iter","get_path_iter","get_path_iter","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_iter","next","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","NodeLinksMap","Topology","add_full_duplex_link","add_link","add_node","add_unidirectional_link","as_any","as_any_mut","borrow","borrow_mut","default","from","get_path_bandwidth","get_path_latency","into","into_any","into_any_arc","into_any_rc","inv_node_links_map","link","link_count","new","node_count","node_links_map","try_from","try_into","type_id","vzip"],"q":[[0,"dslab_network"],[19,"dslab_network::link"],[65,"dslab_network::model"],[123,"dslab_network::models"],[129,"dslab_network::models::constant"],[149,"dslab_network::models::shared"],[168,"dslab_network::models::topology_aware"],[193,"dslab_network::network"],[268,"dslab_network::node"],[284,"dslab_network::routing"],[337,"dslab_network::topology"]],"d":["","","","","","","","","","","","","Network link.","Network model interface.","Network model implementations.","Simulation component representing a network.","Network node.","Routing algorithms.","Network topology.","Defines how the link bandwidth is shared among concurrent …","A link between two nodes in the network.","Unique link id.","Each transfer gets the full link bandwidth.","The bandwidth is shared equally between all transfers.","","","","","","","Link bandwidth.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Link latency.","Creates a new link with <code>BandwidthSharingPolicy::NonShared</code> …","Creates a new link with <code>BandwidthSharingPolicy::Shared</code> …","Used bandwidth sharing policy.","","","","","","","","","","","Represents a data transfer between two simulation …","Event signalling the completion of data transfer.","Network model interface.","","","","","","","Returns the network bandwidth from node <code>src</code> to node <code>dst</code>.","","","","","","","","","Simulation component which is receiving the data.","Node id of data receiver.","Completed data transfer.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Unique transfer id.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns true is the model is topology-aware.","Returns the network latency from node <code>src</code> to node <code>dst</code>.","Simulation component to notify when the transfer is …","Callback for notifying topology-aware model about the …","Callback for notifying the model about data transfer …","","","Data size.","Simulation component which is sending the data.","Node id of data sender.","Starts data transfer.","","","Returns a reference to inner network topology.","Returns a mutable reference to inner network topology.","","","","","","","","","","","","Network model without congestion where each transfer gets …","Network model where the bandwidth is shared fairly among …","Topology-aware network model.","Network model without congestion where each transfer gets …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Creates a new network model with specified bandwidth and …","","","","","","","Network model where the bandwidth is shared fairly among …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Creates a new network model with specified bandwidth and …","","","","","","","Topology-aware model which uses information about the …","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Creates a new network model with empty topology.","","","","","","","","","","Enables optimization which greatly improves simulation …","Sets the used routing algorithm.","Represents a message sent between two simulation …","Event signalling the message delivery.","Simulation component representing a network.","","","Adds two unidirectional links with the same parameters …","Adds a new bidirectional link between two nodes.","Adds a new network node.","Adds a new unidirectional link between two nodes.","","","","","","","Returns the network bandwidth between two simulation …","","","","","","","","","","","Contents of the message.","Simulation component which is receiving the message.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the location (node id) of the simulation component.","Returns the location (node id) of the simulation component …","Returns the node id by its name.","Returns the list of network nodes.","Unique message id.","Performs initialization of network topology, such as …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the network latency between two simulation …","Delivered message.","Creates a new network with supplied network model.","","Sends an event between two simulation components, returns …","Sends a message between two simulation components, returns …","","","Sets the location of the simulation component <code>id</code> to the …","Simulation component which is sending the message.","","","Starts a data transfer between two simulation components, …","","","","","","","","","","","","","A node in the network.","Unique node id.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Node name.","","","","","Iterator which returns links on a path.","Calculates the paths between pairs of nodes in a network.","Static routing algorithm which returns shortest paths (by …","Static routing algorithm which returns shortest paths (by …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a path iterator from node <code>src</code> to node <code>dst</code>, or <code>None</code> …","","","Performs initialization of the routing algorithm based on …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Stores for each node a map with its neighbors and …","Represents a network topology consisting of nodes …","Adds two unidirectional links with the same parameters …","Adds a new bidirectional link between two nodes.","Adds a new node and returns the assigned id.","Adds a new unidirectional link between two nodes.","","","","","","Returns the argument unchanged.","Returns the network bandwidth of the given path.","Returns the network latency of the given path.","Calls <code>U::from(self)</code>.","","","","Returns an immutable reference to the inverted <code>NodeLinksMap</code>…","Returns the link by its id.","Returns the number of links.","Creates a new empty topology.","Returns the number of nodes.","Returns an immutable reference to the stored <code>NodeLinksMap</code>.","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,4,3,4,3,4,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,4,4,4,4,3,4,3,4,3,4,3,4,3,4,0,0,0,15,16,15,16,15,16,34,15,16,15,16,15,16,15,16,15,15,16,15,16,15,15,16,15,15,16,15,16,15,16,15,16,34,34,15,34,34,15,16,15,15,15,34,15,16,34,34,15,16,15,16,15,16,15,16,0,0,0,0,0,0,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,36,37,29,29,29,29,29,36,37,29,36,37,29,29,36,37,29,36,37,36,37,36,37,36,36,36,37,29,36,37,29,29,29,29,36,29,29,36,37,29,36,37,36,37,29,36,37,29,37,29,29,29,29,36,37,29,36,36,37,29,29,36,37,29,36,37,29,36,37,29,36,37,0,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,0,0,0,45,43,44,45,43,44,45,43,44,45,43,44,43,44,45,43,44,28,43,44,28,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,45,45,43,44,45,43,44,45,43,44,45,43,44,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[3,3],[4,4],[[]],[[]],[[3,5],6],[[4,5],6],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[2,7]]]],[[[8,[7]]],[[8,[2,7]]]],[9,[[9,[2]]]],[9,[[9,[2]]]],[10,[[10,[2]]]],[10,[[10,[2]]]],0,[[11,11],4],[[11,11],4],0,[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[]],[[]],0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[14,14],11],[[]],[[]],[[]],[[]],[15,15],[16,16],[[]],[[]],0,0,0,[17,[[12,[18,19]]]],[17,[[12,[18,19]]]],[[15,5],6],[[]],[[]],0,[[]],[[]],[[[8,[7]]],[[8,[2,7]]]],[[[8,[7]]],[[8,[2,7]]]],[9,[[9,[2]]]],[9,[[9,[2]]]],[10,[[10,[2]]]],[10,[[10,[2]]]],[[],20],[[14,14],11],0,[21],[[15,21]],[[15,22],12],[[16,22],12],0,0,0,[[15,21]],[[]],[[]],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[]],[[]],0,0,0,0,0,0,0,[[],2],[[],2],[[25,14,14],11],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[2,7]]]],[9,[[9,[2]]]],[10,[[10,[2]]]],[25,20],[[25,14,14],11],[[11,11],25],[[25,15,21]],[[25,15,21]],[[],12],[[],12],[[],13],[[]],0,[[],2],[[],2],[[26,14,14],11],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[2,7]]]],[10,[[10,[2]]]],[26,20],[[26,14,14],11],[[11,11],26],[[26,15,21]],[[26,15,21]],[[],12],[[],12],[[],13],[[]],0,[[],2],[[],2],[[27,14,14],11],[[]],[[]],[[],27],[[]],[[]],[[[8,[7]]],[[8,[2,7]]]],[10,[[10,[2]]]],[27,20],[[27,14,14],11],[[],27],[[27,21]],[[27,15,21]],[[27,15,21]],[27,[[24,[23]]]],[27,[[24,[23]]]],[[],12],[[],12],[[],13],[[]],[[27,20],27],[[27,[8,[28]]],27],0,0,0,[1],[1],[[29,30,30,4]],[[29,30,30,4],31],[[29,[33,[32]],[8,[34]]],14],[[29,30,30,4],31],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[29,35,35],11],[[]],[[]],[[]],[[]],[[]],[[]],[36,36],[37,37],[[]],[[]],0,0,[17,[[12,[18,19]]]],[17,[[12,[18,19]]]],[[]],[[]],[[]],[[29,35],14],[[29,35],[[24,[14]]]],[[29,30],38],[29,[[39,[32]]]],0,[29],[[]],[[]],[[]],[[[8,[7]]],[[8,[2,7]]]],[[[8,[7]]],[[8,[2,7]]]],[[[8,[7]]],[[8,[2,7]]]],[9,[[9,[2]]]],[9,[[9,[2]]]],[10,[[10,[2]]]],[10,[[10,[2]]]],[10,[[10,[2]]]],[[29,35,35],11],0,[[[8,[34]],21],29],[[29,40]],[[29,41,35,35],42],[[29,32,35,35],38],[[36,22],12],[[37,22],12],[[29,35,30]],0,[[]],[[]],[[29,35,35,11,35],38],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[]],[[]],[[]],0,0,[[],2],[[],2],[[]],[[]],[[]],[[]],[[[8,[7]]],[[8,[2,7]]]],[9,[[9,[2]]]],[10,[[10,[2]]]],0,[[],12],[[],12],[[],13],[[]],0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[],43],[[],44],[[]],[[]],[[]],[[14,14,23],[[24,[45]]]],[[43,14,14,23],[[24,[45]]]],[[44,14,14,23],[[24,[45]]]],[23],[[43,23]],[[44,23]],[[]],[[]],[[]],[[[8,[7]]],[[8,[2,7]]]],[[[8,[7]]],[[8,[2,7]]]],[[[8,[7]]],[[8,[2,7]]]],[9,[[9,[2]]]],[9,[[9,[2]]]],[9,[[9,[2]]]],[10,[[10,[2]]]],[10,[[10,[2]]]],[10,[[10,[2]]]],[[]],[45,24],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[]],[[]],[[]],0,0,[[23,14,14,4]],[[23,14,14,4],31],[[23,46],14],[[23,14,14,4],31],[[],2],[[],2],[[]],[[]],[[],23],[[]],[[23,45],11],[[23,45],11],[[]],[[[8,[7]]],[[8,[2,7]]]],[9,[[9,[2]]]],[10,[[10,[2]]]],[23,47],[[23,31],4],[23,38],[[],23],[23,38],[23,47],[[],12],[[],12],[[],13],[[]]],"c":[],"p":[[3,"Private"],[8,"Any"],[4,"BandwidthSharingPolicy"],[3,"Link"],[3,"Formatter"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[15,"f64"],[4,"Result"],[3,"TypeId"],[6,"NodeId"],[3,"DataTransfer"],[3,"DataTransferCompleted"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[15,"bool"],[3,"SimulationContext"],[8,"Serializer"],[3,"Topology"],[4,"Option"],[3,"ConstantBandwidthNetworkModel"],[3,"SharedBandwidthNetworkModel"],[3,"TopologyAwareNetworkModel"],[8,"RoutingAlgorithm"],[3,"Network"],[15,"str"],[6,"LinkId"],[3,"String"],[8,"Into"],[8,"NetworkModel"],[6,"Id"],[3,"Message"],[3,"MessageDelivered"],[15,"usize"],[3,"Vec"],[3,"Event"],[8,"EventData"],[6,"EventId"],[3,"ShortestPathFloydWarshall"],[3,"ShortestPathDijkstra"],[3,"PathIterator"],[3,"Node"],[6,"NodeLinksMap"]]},\
"dslab_storage":{"doc":"DSLab Storage Models","t":"AAAAADDDENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMLLMLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLIDLLLLKMLLKMLKKLLLLKKLLLKMLK","n":["disk","events","fs","scheduler","storage","Disk","DiskBuilder","DiskOperation","DiskOperationType","Read","Write","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","capacity","capacity","clone","clone","clone_into","clone_into","concurrent_ops_limit","concurrent_read_ops_limit","concurrent_write_ops_limit","constant_read_bw","constant_write_bw","default","erased_serialize","free_space","from","from","from","from","id","info","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","mark_free","new","on","op_type","read","read_factor_fn","read_throughput_fn","request_id","requester","serialize","simple","size","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","used_space","vzip","vzip","vzip","vzip","write","write_factor_fn","write_throughput_fn","DataReadCompleted","DataReadFailed","DataWriteCompleted","DataWriteFailed","FileReadCompleted","FileReadFailed","FileWriteCompleted","FileWriteFailed","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","error","error","error","error","file_path","file_path","file_path","file_path","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new_size","read_size","request_id","request_id","request_id","request_id","request_id","request_id","request_id","request_id","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size","size","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FileSystem","as_any","as_any_mut","borrow","borrow_mut","capacity","create_file","delete_file","disk_info","disks_info","file_size","free_space","from","into","into_any","into_any_rc","mount_disk","mount_points","new","on","read","read_all","try_from","try_into","type_id","unmount_disk","used_space","vzip","write","FifoScheduler","as_any","as_any_mut","borrow","borrow_mut","from","into","into_any","into_any_rc","new","try_from","try_into","type_id","vzip","Storage","StorageInfo","as_any","as_any_mut","borrow","borrow_mut","capacity","capacity","eq","fmt","free_space","free_space","from","id","info","into","into_any","into_any_arc","into_any_rc","mark_free","read","try_from","try_into","type_id","used_space","used_space","vzip","write"],"q":[[0,"dslab_storage"],[5,"dslab_storage::disk"],[98,"dslab_storage::events"],[278,"dslab_storage::fs"],[307,"dslab_storage::scheduler"],[321,"dslab_storage::storage"]],"d":["Basic implementation of storage model for disk.","Events produced by storage and file system.","File system model.","Disk I/O schedulers.","Storage model.","Represents a disk.","Disk builder. This is a type for convenient disk setup.","Describes a disk operation.","Type of disk operation.","Reading data from disk.","Writing data to disk.","","","","","","","","","","","","","","","","","","","Builds disk from given builder and simulation context.","Sets capacity of the disk.","","","","","","Sets concurrent operations limit.","Sets concurrent read operations limit.","Sets concurrent write operations limit.","Sets read bandwidth to be constant with given value.","Sets write bandwidth to be constant with given value.","Creates default disk builder.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Same as <code>DiskBuilder::default()</code>.","","Operation type.","","Sets throughput factor function for read operations.","Sets custom throughput function for read operations.","Request Id.","Requester.","","Creates disk builder and fills it with given capacity, …","Size.","","","","","","","","","","","","","","","","","","","","","Sets throughput factor function for write operations.","Sets custom throughput function for write operations.","Corresponds to completion of storage read request. Source: …","Corresponds to failure of storage read request. Source: …","Corresponds to completion of storage write request. …","Corresponds to failure of storage write request. Source: …","Corresponds to completion of file system read request. …","Corresponds to failure of file system read request. …","Corresponds to completion of file system write request. …","Corresponds to failure of file system write request. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reason of failure.","Reason of failure.","Reason of failure.","Reason of failure.","Path to read file.","Path to read file.","Path to written file.","Path to written file.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Size of written data.","Size of read data.","Request id returned by <code>crate::storage::Storage::read()</code> …","Request id returned by <code>crate::storage::Storage::read()</code> …","Request id returned by <code>crate::storage::Storage::write()</code> …","Request id returned by <code>crate::storage::Storage::write()</code> …","Request id returned by <code>crate::fs::FileSystem::read()</code> …","Id which was returned from <code>read</code> file system method.","Id which was returned from <code>write</code> file system method.","Id which was returned from <code>write</code> file system method.","","","","","","","","","Size of data read from storage.","Size of data written to storage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Representation of file system.","","","","","Returns cumulative capacity of all disks currently mounted …","Creates file at <code>file_path</code> if it doesn’t already exist.","Deletes file located at <code>file_path</code> if there is any.    ","Returns disk info for a mount point.","Returns vec of disk info associated with mount points.","Returns size of the file located at <code>file_path</code> if there is …","Returns amount of free space on all disks currently …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Mounts <code>disk</code> to <code>mount_point</code> if it is not taken yet.","Returns mount points present in this file system.","Creates new empty file system.","","Submits file read request and returns unique request id.","Submits file read request and returns unique request id.","","","","Unmounts a disk which is mounted to <code>mount_point</code> if there …","Returns amount of used space on all disks currently …","","Submits file write request and returns unique request id.","A scheduler which dispatches operations in FIFO order.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Creates FIFO scheduler with given throughput models and …","","","","","A trait for modeling an abstract storage resource, i.e. …","Information about storage, including its capacity and …","","","","","Returns the storage capacity.","Storage capacity. Is equal to <code>used_space</code> + <code>free_space</code>.","","","Returns the amount of free storage space.","Amount of free space. Cannot be greater than <code>capacity</code>.","Returns the argument unchanged.","Returns identifier of simulation component representing …","Returns struct with information about the storage.","Calls <code>U::from(self)</code>.","","","","Marks previously used storage space of given <code>size</code> as free.","Submits data read request and returns unique request id.","","","","Returns the amount of used storage space.","Amount of used space. Cannot be greater than <code>capacity</code>.","","Submits data write request and returns unique request id."],"i":[0,0,0,0,0,0,0,0,0,8,8,7,8,3,5,7,8,3,5,7,8,3,5,7,8,3,5,7,8,3,3,5,7,8,7,8,3,3,3,3,3,3,8,5,3,5,7,8,5,5,3,5,7,8,3,5,7,8,7,8,3,5,7,8,5,3,5,7,5,3,3,7,7,8,3,7,7,8,3,5,7,8,3,5,7,8,3,5,7,8,5,3,5,7,8,5,3,3,0,0,0,0,0,0,0,0,26,27,28,29,30,31,32,33,26,27,28,29,30,31,32,33,26,27,28,29,30,31,32,33,26,27,28,29,30,31,32,33,26,27,28,29,30,31,32,33,26,27,28,29,30,31,32,33,26,27,28,29,30,31,32,33,26,27,28,29,30,31,32,33,27,29,31,33,30,31,32,33,26,27,28,29,30,31,32,33,26,27,28,29,30,31,32,33,26,27,28,29,30,31,32,33,26,27,28,29,30,31,32,33,26,27,28,29,30,31,32,33,32,30,26,27,28,29,30,31,32,33,26,27,28,29,30,31,32,33,26,28,26,27,28,29,30,31,32,33,26,27,28,29,30,31,32,33,26,27,28,29,30,31,32,33,26,27,28,29,30,31,32,33,26,27,28,29,30,31,32,33,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,15,15,15,15,37,15,15,15,37,15,15,37,37,15,15,15,15,37,37,15,15,15,37,15,15,37],"f":[0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,4],5],[[3,6],3],[5,6],[7,7],[8,8],[[]],[[]],[[3,6],3],[[3,6],3],[[3,6],3],[[3,9],3],[[3,9],3],[[],3],[10,[[13,[11,12]]]],[5,6],[[]],[[]],[[]],[[]],[5,14],[5,15],[[]],[[]],[[]],[[]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[[5,6],[[13,[20]]]],[[],3],[[5,21]],0,[[5,6,14],6],[[3,[17,[22]]],3],[[3,23],3],0,0,[[8,24],13],[[6,9,9],3],0,[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],25],[[],25],[5,6],[[]],[[]],[[]],[[]],[[5,6,14],6],[[3,[17,[22]]],3],[[3,23],3],0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,[[13,[11,12]]]],[10,[[13,[11,12]]]],[10,[[13,[11,12]]]],[10,[[13,[11,12]]]],[10,[[13,[11,12]]]],[10,[[13,[11,12]]]],[10,[[13,[11,12]]]],[10,[[13,[11,12]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[[[17,[16]]],[[17,[2,16]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[18,[[18,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],0,0,0,0,0,0,0,0,0,0,[[26,24],13],[[27,24],13],[[28,24],13],[[29,24],13],[[30,24],13],[[31,24],13],[[32,24],13],[[33,24],13],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[]],[[]],[34,6],[[34,35],[[13,[20]]]],[[34,35],[[13,[20]]]],[[34,35],[[13,[15,20]]]],[34,36],[[34,35],[[13,[6,20]]]],[34,6],[[]],[[]],[[[17,[16]]],[[17,[2,16]]]],[19,[[19,[2]]]],[[34,35,[19,[[38,[37]]]]],[[13,[20]]]],[34,[[36,[20]]]],[4,34],[[34,21]],[[34,35,6,14],6],[[34,35,14],6],[[],13],[[],13],[[],25],[[34,35],[[13,[20]]]],[34,6],[[]],[[34,35,6,14],6],0,[[],2],[[],2],[[]],[[]],[[]],[[]],[[[17,[16]]],[[17,[2,16]]]],[19,[[19,[2]]]],[[[39,[7]],[39,[7]],[40,[6]],[40,[6]],[40,[6]]],41],[[],13],[[],13],[[],25],[[]],0,0,[[],2],[[],2],[[]],[[]],[[],6],0,[[15,15],42],[[15,43],44],[[],6],0,[[]],[[],14],[[],15],[[]],[[[17,[16]]],[[17,[2,16]]]],[18,[[18,[2]]]],[19,[[19,[2]]]],[6,[[13,[20]]]],[[6,14],6],[[],13],[[],13],[[],25],[[],6],0,[[]],[[6,14],6]],"c":[],"p":[[3,"Private"],[8,"Any"],[3,"DiskBuilder"],[3,"SimulationContext"],[3,"Disk"],[15,"u64"],[3,"DiskOperation"],[4,"DiskOperationType"],[15,"f64"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[4,"Result"],[6,"Id"],[3,"StorageInfo"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"String"],[3,"Event"],[8,"ActivityFactorFn"],[6,"ResourceThroughputFn"],[8,"Serializer"],[3,"TypeId"],[3,"DataReadCompleted"],[3,"DataReadFailed"],[3,"DataWriteCompleted"],[3,"DataWriteFailed"],[3,"FileReadCompleted"],[3,"FileReadFailed"],[3,"FileWriteCompleted"],[3,"FileWriteFailed"],[3,"FileSystem"],[15,"str"],[3,"Vec"],[8,"Storage"],[3,"RefCell"],[3,"FairThroughputSharingModel"],[4,"Option"],[3,"FifoScheduler"],[15,"bool"],[3,"Formatter"],[6,"Result"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
