searchState.loadedDescShard("dslab_compute", 0, "DSLab Compute\nModel of computing resource with multiple cores.\nModel of computing resource with a single core.\nResource allocation.\nAllocation is failed.\nRequest to allocate resources.\nAllocation is successful.\nComputation is failed.\nComputation is finished successfully.\nRequest to start a computation.\nComputation is started successfully.\nModels computing resource with multiple cores which …\nFunction from <code>[1, max_cores]</code> to <code>[1, +inf]</code> describing the …\nCustom dependency.\nDeallocation is failed.\nRequest to release previously allocated resources.\nDeallocation is successful.\nReason for computation failure.\nLinear dependency: <code>speedup(cores) = cores</code>\nLinear dependency with fixed part corresponding to Amdahl…\nResource doesn’t have enough memory or available cores.\nRequests resource allocation with given parameters and …\nAllocated resource.\nReleased resources.\nNumber of cores.\nNumber of cores allocated to the computation. Equals to …\nReturns the number of available cores.\nDefines the dependence of parallel speedup on the number …\nReturns the total number of cores.\nRequests resource deallocation with given parameters and …\nTotal computation size.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns id of corresponding simulation component.\nId of the computation.\nId of the computation.\nId of the computation.\nId of the allocation.\nId of the allocation.\nId of the deallocation.\nId of the deallocation.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum number of used cores.\nAmount of memory.\nTotal memory needed for a computation.\nReturns the amount of available memory.\nReturns the total amount of memory.\nMinimum number of used cores.\nCreates a new computing resource.\nCreates a new allocation.\nReason for failure.\nReason for failure.\nReason for failure.\nId of simulation component to inform about the computation …\nId of simulation component to inform about the allocation …\nId of simulation component to inform about the …\nStarts computation with given parameters and returns …\nReturns the core speed.\nSpeedup achieved when using the given number of cores …\nFraction of a computation which can’t be parallelized.\nCustom speedup function.\nCurrently available number of cores.\nCurrently available amount of memory.\nRequested number of cores.\nRequested amount of memory.\nComputation is failed.\nComputation is finished successfully.\nRequest to start a computation.\nComputation is started successfully.\nModels computing resource with a single “core” …\nReason for computation failure.\nResource doesn’t have enough memory.\nTotal computation size.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nId of the computation.\nId of the computation.\nId of the computation.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTotal memory needed for a computation.\nCreates a new computing resource.\nReason for failure.\nId of simulation component to inform about the computation …\nStarts computation with given parameters and returns …\nAmount of currently available memory.")