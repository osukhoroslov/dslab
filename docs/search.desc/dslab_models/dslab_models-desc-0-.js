searchState.loadedDescShard("dslab_models", 0, "DSLab Common Models\nPower consumption models.\nThroughput sharing model\nCPU power model trait.\nA collection of CPU power models.\nHard disk drive power model trait.\nA collection of HDD power models.\nHost power model.\nMemory power model trait.\nA collection of memory power models.\nA model for estimating the power consumption of CPU based …\nReturns CPU power consumption in Watts.\nAsymptotic CPU power model.\nConstant CPU power model.\nCubic CPU power model.\nDVFS-aware CPU power model.\nEmpirical CPU power model.\nLinear CPU power model.\nMSE CPU power model.\nSquare CPU power model.\nState-based CPU power model.\nA non-linear power consumption model from Kliazovich et …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates an asymptotic power model.\nA power model using a constant power consumption value.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a constant power model.\nA power model based on cubic interpolation between the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a cubic power model.\nA power model that takes into account the impact of …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a DVFS-aware power model.\nA power model based on measurements of actual power …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates an empirical power model.\nEmpirical power model for IBM System x3550 M3 server with …\nA power model based on linear interpolation between the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a linear power model.\nA non-linear power consumption model from Fan et al. Power …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a MSE power model.\nA power model based on square interpolation between the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a square power model.\nA power model that takes into account CPU power management …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a state-based power model.\nThe disk spins at full speed serving I/O requests.\nA model for estimating the power consumption of hard disk …\nPower states of hard disk drive.\nThe disk is spinning but does not service I/O requests …\nThe disk is spun down to reduce its power consumption (the …\nReturns the argument unchanged.\nReturns the disk power consumption in Watts.\nCalls <code>U::from(self)</code>.\nConstant HDD power model.\nState-based HDD power model.\nA power model using a constant power consumption value …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a constant power model.\nA power model using different power consumption values for …\nReturns the argument unchanged.\nCreates a state-based power model for IBM 36Z15, a …\nCalls <code>U::from(self)</code>.\nCreates a state-based power model.\nA model for estimating the power consumption of a physical …\nHelper for building the host power model.\nStores host state properties essential to compute the …\nBuilds the host power model.\nSets the CPU power model.\nRelative scaling of CPU frequency from 0 to 1, where 0 …\nSets the CPU power consumption in idle state (0% …\nCPU power management state, specified as an index in …\nCreates HostState with specified CPU utilization.\nCPU utilization from 0 to 1.\nCreates HostState with specified CPU utilization and …\nCreates HostState with specified CPU utilization and state.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the power consumption of a host in Watts for a …\nSets the HDD power model.\nHard disk drive state.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the memory power model.\nMemory read utilization from 0 to 1.\nMemory utilization from 0 to 1.\nMemory read utilization from 0 to 1.\nCreates the builder with default settings (all inner power …\nSets the power consumption of other host components.\nA model for estimating the power consumption of memory …\nReturns memory power consumption in Watts based on …\nReturns memory power consumption in Watts based on a …\nConstant memory power model.\nDDR3 SDRAM power model.\nA power model using a constant power consumption value.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a constant power model.\nA power model for DDR3 SDRAM based on the technical note …\nCreates DDR3 power model with custom memory module …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the memory modules count.\nCreates DDR3 power model.\nProvides the function that computes the throughput factor …\nActivity factor function with constant factor value.\nActivity factor function which generates random factor …\nFast implementation of fair throughput sharing model.\nActivity factor function which generates random factor …\nFunction that computes the total resource throughput based …\nSlow implementation of fair throughput sharing model, …\nTrait for throughput sharing model.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the throughput factor for activity represented by …\nAdds new activity into the model.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates resource throughput function which always returns …\nCreates randomized activity factor function with uniform …\nCreates model with given throughput and factor functions.\nCreates model with given throughput and factor functions.\nCreates function with the given factor value.\nCreates function with the given distribution.\nCreates function with the given weighted points.\nReturns the next activity completion time (if any) along …\nReturns the next activity completion time (if any) along …\nCreates model with dynamic throughput, represented by …\nCreates model with dynamic throughput, represented by …\nCreates model with fixed throughput.\nCreates model with fixed throughput.")