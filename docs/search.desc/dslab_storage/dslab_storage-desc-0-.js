searchState.loadedDescShard("dslab_storage", 0, "DSLab Storage Models\nBasic implementation of storage model for disk.\nEvents produced by storage and file system.\nFile system model.\nDisk I/O schedulers.\nStorage model.\nRepresents a disk.\nDisk builder. This is a type for convenient disk setup.\nDescribes a disk operation.\nType of disk operation.\nReading data from disk.\nWriting data to disk.\nBuilds disk from given builder and simulation context.\nSets capacity of the disk.\nSets concurrent operations limit.\nSets concurrent read operations limit.\nSets concurrent write operations limit.\nSets read bandwidth to be constant with given value.\nSets write bandwidth to be constant with given value.\nCreates default disk builder.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSame as <code>DiskBuilder::default()</code>.\nOperation type.\nSets throughput factor function for read operations.\nSets custom throughput function for read operations.\nRequest Id.\nRequester.\nCreates disk builder and fills it with given capacity, …\nSize.\nSets throughput factor function for write operations.\nSets custom throughput function for write operations.\nCorresponds to completion of storage read request. Source: …\nCorresponds to failure of storage read request. Source: …\nCorresponds to completion of storage write request. …\nCorresponds to failure of storage write request. Source: …\nCorresponds to completion of file system read request. …\nCorresponds to failure of file system read request. …\nCorresponds to completion of file system write request. …\nCorresponds to failure of file system write request. …\nReason of failure.\nReason of failure.\nReason of failure.\nReason of failure.\nPath to read file.\nPath to read file.\nPath to written file.\nPath to written file.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSize of written data.\nSize of read data.\nRequest id returned by <code>crate::storage::Storage::read()</code> …\nRequest id returned by <code>crate::storage::Storage::read()</code> …\nRequest id returned by <code>crate::storage::Storage::write()</code> …\nRequest id returned by <code>crate::storage::Storage::write()</code> …\nRequest id returned by <code>crate::fs::FileSystem::read()</code> …\nId which was returned from <code>read</code> file system method.\nId which was returned from <code>write</code> file system method.\nId which was returned from <code>write</code> file system method.\nSize of data read from storage.\nSize of data written to storage.\nRepresentation of file system.\nReturns cumulative capacity of all disks currently mounted …\nCreates file at <code>file_path</code> if it doesn’t already exist.\nDeletes file located at <code>file_path</code> if there is any.\nReturns disk info for a mount point.\nReturns vec of disk info associated with mount points.\nReturns size of the file located at <code>file_path</code> if there is …\nReturns amount of free space on all disks currently …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMounts <code>disk</code> to <code>mount_point</code> if it is not taken yet.\nReturns mount points present in this file system.\nCreates new empty file system.\nSubmits file read request and returns unique request id.\nSubmits file read request and returns unique request id.\nUnmounts a disk which is mounted to <code>mount_point</code> if there …\nReturns amount of used space on all disks currently …\nSubmits file write request and returns unique request id.\nA scheduler which dispatches operations in FIFO order.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates FIFO scheduler with given throughput models and …\nA trait for modeling an abstract storage resource, i.e. …\nInformation about storage, including its capacity and …\nReturns the storage capacity.\nStorage capacity. Is equal to <code>used_space</code> + <code>free_space</code>.\nReturns the amount of free storage space.\nAmount of free space. Cannot be greater than <code>capacity</code>.\nReturns the argument unchanged.\nReturns identifier of simulation component representing …\nReturns struct with information about the storage.\nCalls <code>U::from(self)</code>.\nMarks previously used storage space of given <code>size</code> as free.\nSubmits data read request and returns unique request id.\nReturns the amount of used storage space.\nAmount of used space. Cannot be greater than <code>capacity</code>.\nSubmits data write request and returns unique request id.")